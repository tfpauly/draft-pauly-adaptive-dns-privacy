{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-05-02T00:07:38.537449+00:00",
  "repo": "tfpauly/draft-pauly-adaptive-dns-privacy",
  "labels": [
    {
      "name": "discuss",
      "description": "Issue needs more discussion",
      "color": "d73a4a"
    },
    {
      "name": "ready for text",
      "description": "Ready to be written up",
      "color": "008672"
    },
    {
      "name": "odoh",
      "description": "ODoH",
      "color": "d4c5f9"
    },
    {
      "name": "editorial",
      "description": "Editorial",
      "color": "bfd4f2"
    },
    {
      "name": "pvd",
      "description": "PvD",
      "color": "7BE4E6"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "MDU6SXNzdWU0Mzc0NDg5MjI=",
      "title": "Define WebPVD protocol",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/1",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-26T00:22:56Z",
      "updatedAt": "2019-06-17T20:22:32Z",
      "closedAt": "2019-06-17T20:22:32Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Generically being addressed by #8 ",
          "createdAt": "2019-06-17T20:22:32Z",
          "updatedAt": "2019-06-17T20:22:32Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "MDU6SXNzdWU0Mzc0NTAxMDg=",
      "title": "Reconsider client behavior",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/2",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Step #3 in the client behavior section seems problematic. Does it not allow an authenticated provider that wants DNS interception to simply offer encrypted DNS as a service and slurp up all client queries? For example, it seems that the current algorithm would urge clients to send DNS queries for apple.com to facebook.com if they only had an authoritative WebPVD for facebook.com (no direct PVD and no PVD for apple.com). If that's the correct interpretation, I'm not sure it's desirable behavior. Let's discuss!",
      "createdAt": "2019-04-26T00:28:50Z",
      "updatedAt": "2019-06-11T21:33:11Z",
      "closedAt": "2019-06-11T21:33:11Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWU0Mzc3MDYzNjc=",
      "title": "DoH Provisioning ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/4",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Reference 8484 for DoH and explain that PvD provisions using a URI template",
      "createdAt": "2019-04-26T14:41:44Z",
      "updatedAt": "2019-08-27T23:32:46Z",
      "closedAt": "2019-08-27T23:32:46Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWU0NTQ0MTY1MTQ=",
      "title": "Define \"destinations\" beyond domains",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/6",
      "state": "CLOSED",
      "author": "erickinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should consider defining the concept of \"where I'm trying to go\" beyond just a domain, which is what we use today. Probably something like endpoint?",
      "createdAt": "2019-06-10T23:31:55Z",
      "updatedAt": "2019-10-23T20:16:13Z",
      "closedAt": "2019-10-23T20:16:13Z",
      "comments": []
    },
    {
      "number": 7,
      "id": "MDU6SXNzdWU0NTQ0MTg1MjE=",
      "title": "We should add an explanation about why having \"sensitive\" flows isn't a privacy risk",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/7",
      "state": "CLOSED",
      "author": "erickinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should add an explanation about why having \"sensitive\" flows isn't a privacy risk. \r\nSpecifically, that information isn't visible off the device at all and can't be fingerprinted, so an attacker can't identify which flows should be targeted with extra energy. \r\n\r\nOnly the non-sensitive flows get to be seen on the local network and there is no difference between a sensitive flow that didn't get queried and one that didn't exist.\r\n\r\n(We should also make sure that this is true, current top risk seems to be that someone on the local network \"i.e. the router itself\" can see things that didn't ask it and never resulted in a connection, ideally those are still okay because other things that did resolve via a Web PvD even non-sensitive would look the same way if they reuse a connection)",
      "createdAt": "2019-06-10T23:41:37Z",
      "updatedAt": "2019-10-23T20:18:28Z",
      "closedAt": "2019-10-23T20:18:28Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Closing as this is fairly old, and referencing the old doc",
          "createdAt": "2019-10-23T20:18:28Z",
          "updatedAt": "2019-10-23T20:18:28Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWU0NTUyODEzNDQ=",
      "title": "Write crypto bits",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/9",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2019-06-12T15:29:18Z",
      "updatedAt": "2019-08-27T23:33:11Z",
      "closedAt": "2019-08-27T23:33:11Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Also, include KeyID in public-key encrypted blobs.",
          "createdAt": "2019-06-13T16:18:01Z",
          "updatedAt": "2019-06-13T16:18:01Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "These are written, I think!",
          "createdAt": "2019-08-27T23:33:11Z",
          "updatedAt": "2019-08-27T23:33:11Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWU0NTUyODE2NzA=",
      "title": "Write down padding bits",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/10",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2019-06-12T15:29:52Z",
      "updatedAt": "2019-10-23T20:19:18Z",
      "closedAt": "2019-10-23T20:19:17Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Padding is written down now!",
          "createdAt": "2019-10-23T20:19:17Z",
          "updatedAt": "2019-10-23T20:19:17Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU0NTU4MjUyNzM=",
      "title": "Make protocol flow diagrams",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/11",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ready for text"
      ],
      "body": "We should have pretty diagrams for protocol flows and flow charts for resolution.",
      "createdAt": "2019-06-13T16:00:08Z",
      "updatedAt": "2019-11-01T21:59:23Z",
      "closedAt": "2019-11-01T21:59:23Z",
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "Diagram from @chris-wood: \r\n\r\n>Can we include a diagram of the obfuscation \"flow\" in the start of this section? Perhaps the following will work:\r\n\r\n~~~\r\n  +--------+  (1)   +---------+   (2)  +---------+\r\n  | Client +-------->  Proxy  +-------->  Target |\r\n  |        <--------+         <--------+         |\r\n  +--------+  (4)   +---------+   (3)  +---------+\r\n~~~\r\n\r\n> 1. Client sends aDNS to Proxy with the sensitive query encrypted under Target's key. \r\n> 2. Proxy forwards query to Target.\r\n> 3. Target decrypts query, resolves to an answer, encrypts response to Client, and sends aDNS answer to Proxy.\r\n> 4. Proxy forwards aDNS answer to Client.\r\n\r\nWe should probably also add details on how the answer is encrypted (symmetric key from client's original query?).",
          "createdAt": "2019-06-13T19:43:57Z",
          "updatedAt": "2019-06-13T19:44:07Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Done with 4e60d2e",
          "createdAt": "2019-11-01T21:59:23Z",
          "updatedAt": "2019-11-01T21:59:23Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWU0NTU4MzI5Njg=",
      "title": "Describe why response signatures are unnecessary",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/12",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2019-06-13T16:16:42Z",
      "updatedAt": "2019-08-27T23:33:40Z",
      "closedAt": "2019-08-27T23:33:40Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "At the very least, we should explain how the signed domain blobs link back to the PvD name/configuration to tie them together.",
          "createdAt": "2019-06-13T22:01:27Z",
          "updatedAt": "2019-06-13T22:01:27Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Don't think this is relevant in the current drafts?",
          "createdAt": "2019-08-27T23:33:40Z",
          "updatedAt": "2019-08-27T23:33:40Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWU0NTcxMzI2Njc=",
      "title": "Validate GitHub integration",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/13",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Testing github linking to slack, by opening an issue.",
      "createdAt": "2019-06-17T20:26:30Z",
      "updatedAt": "2019-06-17T20:26:53Z",
      "closedAt": "2019-06-17T20:26:53Z",
      "comments": []
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWU0NTgyMDgyMzU=",
      "title": "Describe a domain having multiple authoritative Web PvDs",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/14",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We explain that the most specific Web PvD should be chosen; but we need to handle the case in which two have exactly the same match. Is a timestamp the best here? Can the explicitly acknowledge one another?",
      "createdAt": "2019-06-19T20:20:21Z",
      "updatedAt": "2019-06-19T20:20:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWU0NTgyMTI2ODg=",
      "title": "Describe use of multiple aDNS connections",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/15",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We should describe how multiple aDNS connections should be used to distribute and further obfuscate traffic patterns.",
      "createdAt": "2019-06-19T20:31:19Z",
      "updatedAt": "2019-06-19T20:31:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU0NTgyMTM2Mzk=",
      "title": "Address secure randomness",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/16",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Some values, like the Query ID in aDNS, are random values. This should be described as a secure random.",
      "createdAt": "2019-06-19T20:33:34Z",
      "updatedAt": "2019-10-23T20:22:48Z",
      "closedAt": "2019-10-23T20:22:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "References to RFC4086 are in",
          "createdAt": "2019-10-23T20:22:48Z",
          "updatedAt": "2019-10-23T20:22:48Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU0NjAxNDUwNzg=",
      "title": "Add proxy/converter configuration to Web PvD",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/18",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "A Web PvD can host a proxy for being an MPTCP endpoint, rather than using a local proxy on the cellular/wifi link",
      "createdAt": "2019-06-24T23:54:22Z",
      "updatedAt": "2019-10-23T20:39:04Z",
      "closedAt": "2019-10-23T20:39:04Z",
      "comments": []
    },
    {
      "number": 19,
      "id": "MDU6SXNzdWU0NzUzOTAxODQ=",
      "title": "Add security considerations for aDNS mixnet",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/19",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-31T22:46:44Z",
      "updatedAt": "2019-10-23T20:39:47Z",
      "closedAt": "2019-10-23T20:39:47Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Security considerations are written; anything more to do here?",
          "createdAt": "2019-10-23T20:39:47Z",
          "updatedAt": "2019-10-23T20:39:47Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU0ODY5NTk2MDk=",
      "title": "why require post?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/24",
      "state": "CLOSED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "8484 defines how various methods are used. what's the motivation for obfuscated doh to change that?\r\n",
      "createdAt": "2019-08-29T13:29:45Z",
      "updatedAt": "2019-09-09T16:47:27Z",
      "closedAt": "2019-09-09T16:47:27Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Doing GET/POST for the normal queries is fine. My concern with the GET approach is that it's a bit more cumbersome to have the encrypted query be encoded in the GET; perhaps that's not really a concern, though. There's also no use in caching anything that's an encrypted query or response, since they have one-time keys from the client, so it seemed to fit better with POST?",
          "createdAt": "2019-08-29T16:30:33Z",
          "updatedAt": "2019-08-29T16:30:33Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "sure.. post is clearly a better choice. maybe we can make that a\nnon-normative explanation - focusing on the caching bit?\n\nother than that little tidbit I don't believe there are any restrictions\nplaced on normal doh, right? So I'd love to avoid it if possible as get\nworks but is suboptimal..\n\nOn Thu, Aug 29, 2019 at 12:30 PM Tommy Pauly <notifications@github.com>\nwrote:\n\n> Doing GET/POST for the normal queries is fine. My concern with the GET\n> approach is that it's a bit more cumbersome to have the encrypted query be\n> encoded in the GET; perhaps that's not really a concern, though. There's\n> also no use in caching anything that's an encrypted query or response,\n> since they have one-time keys from the client, so it seemed to fit better\n> with POST?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/24?email_source=notifications&email_token=AAB7TM4DBPTREFIFC6YCHW3QG72STA5CNFSM4ISCJYQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5PCJ6A#issuecomment-526263544>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB7TM7IM5SJCHDBROFUMV3QG72STANCNFSM4ISCJYQA>\n> .\n>\n",
          "createdAt": "2019-08-29T16:43:46Z",
          "updatedAt": "2019-08-29T16:43:46Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Okay, we can strongly suggest POST in that case, and allow GET.\r\n\r\nThere are indeed no restrictions made on normal DoH! I can clarify that too. Will make a PR.",
          "createdAt": "2019-08-29T18:26:05Z",
          "updatedAt": "2019-08-29T18:26:05Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": ":+1: to the caching bit. I might even recommend prohibiting GET altogether, since it might result in wasteful cache pollution.",
          "createdAt": "2019-08-29T22:00:57Z",
          "updatedAt": "2019-08-29T22:00:57Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Well we already kinda ignore GET. Patrick's point is that we should allow GET to avoid diverging from normal DoH, so I don't think we should prohibit GET.",
          "createdAt": "2019-08-29T22:03:37Z",
          "updatedAt": "2019-08-29T22:03:37Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I get the point, I just disagree. :)",
          "createdAt": "2019-08-29T22:08:14Z",
          "updatedAt": "2019-08-29T22:08:14Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "POST, while certainly not cache friendly, is not totally uncachable. So if we want to address cache pollution let's do that directly.\r\n\r\n```\r\nObfuscated DoH exchanges cannot be effectively reused by caching proxies to satisfy future requests due to the nature of their encrypted message bodies. Clients SHOULD use HTTP and DoH methods and headers that will prevent unhelpful cache storage of these exchanges.\r\n```",
          "createdAt": "2019-08-30T13:04:02Z",
          "updatedAt": "2019-08-30T13:04:31Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposed text works for me! ",
          "createdAt": "2019-08-30T13:04:51Z",
          "updatedAt": "2019-08-30T13:04:51Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWU0ODY5NjUyMDY=",
      "title": "http errors",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/25",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "it would probably be good to define http errors for \r\n\r\n* proxy doesn't want to forward this (403? 404?)\r\n* target can't decrypt this (400?)\r\n\r\n",
      "createdAt": "2019-08-29T13:39:44Z",
      "updatedAt": "2021-01-13T23:49:39Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 27,
      "id": "MDU6SXNzdWU0ODcwMjEzNDg=",
      "title": "the .well-known for the pvd is harmful",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/27",
      "state": "CLOSED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "doh is defined on a resource level rather than the server level. that's why its configuration primitive is a URI (template) instead of a .well-known. You can totally have multiple doh servers on the same origin.. perhaps they have different policies (one for filtered and one for not.. one that represents a bl or some kind of database rather than ip addresses like the spam bl.. etc..)\r\n\r\nthat's a http best practice\r\n\r\nhaving the doh server pvd use a well-known breaks that level of indirection. Maybe this pvd request can be done with a particular method or headers or something to the DoH URI instead?\r\n",
      "createdAt": "2019-08-29T15:14:20Z",
      "updatedAt": "2019-09-09T15:50:26Z",
      "closedAt": "2019-09-09T15:50:26Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "That's a very good point. Yeah, making this be something off of the DoH URI makes good sense.",
          "createdAt": "2019-08-29T16:38:46Z",
          "updatedAt": "2019-08-29T16:38:46Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We already have a `application/pvd+json` media type being registered for PvDs, so we can just request that type off the DoH URI, yeah?",
          "createdAt": "2019-09-05T00:39:40Z",
          "updatedAt": "2019-09-05T00:39:40Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "seems reasonable.. but what will you send?\n\nOn Wed, Sep 4, 2019 at 8:39 PM Tommy Pauly <notifications@github.com> wrote:\n\n> We already have a application/pvd+json media type being registered for\n> PvDs, so we can just request that type off the DoH URI, yeah?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/27?email_source=notifications&email_token=AAB7TMZU7AUVQWMB6LEL5HDQIBIMZA5CNFSM4ISDRKOKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD55ODII#issuecomment-528146849>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB7TM3KAYEYIBN2FFT2IBDQIBIMZANCNFSM4ISDRKOA>\n> .\n>\n",
          "createdAt": "2019-09-05T00:45:41Z",
          "updatedAt": "2019-09-05T00:45:41Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "MDU6SXNzdWU0ODcwNDUyOTU=",
      "title": "local deployments (via RA) should not be proxies",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/28",
      "state": "CLOSED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "These servers aren't good obfuscation proxies because they are highly correlated with the actual client so little blinding is accomplished.",
      "createdAt": "2019-08-29T15:55:49Z",
      "updatedAt": "2019-08-30T16:13:17Z",
      "closedAt": "2019-08-30T16:13:17Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "That's a good point. I don't know if I want to *prevent* them from being proxies, since the client may be able to determine that they're sufficiently obfuscating. Take a DNS resolver owned by a carrier network; that may just tell the target that someone on AT&T is trying to resolve the name, not anything more granular.",
          "createdAt": "2019-08-29T16:31:56Z",
          "updatedAt": "2019-08-29T16:31:56Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWU0ODcwNDc3Mjc=",
      "title": "allow Do53 for local zones?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/29",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I hesitate to suggest this, but it might be a compromise that would really help deployment.\r\n\r\nThe idea would be a dnszone found on a locally designated (i.e. via RA) server could opt-in to being looked up over plaintext 53. probably opt-in via an attribute in dohNS and be signed.\r\n\r\nThe idea being that a legacy setup could transition to internet doh while not having to setup a new server for intranet stuff thus making it easier to swallow. Definitely a trade-off, but maybe a winner. discuss!",
      "createdAt": "2019-08-29T16:00:28Z",
      "updatedAt": "2019-08-29T16:33:09Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, I think that does make sense. It should be up to the client, potentially, about limiting what can be done for this, but anything that's going to the local resolver anyhow is already somewhat less private.",
          "createdAt": "2019-08-29T16:33:09Z",
          "updatedAt": "2019-08-29T16:33:09Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWU0ODcwNTM1Njg=",
      "title": "is the eTLD restriction necessary?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/30",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "a DOHNS record needs to be \r\n 1] dnssec signed\r\n 2] for something more specific than an eTLD\r\n\r\nwhat's the rationale for 2 if we have 1?\r\n\r\nI can think of 2 reasons to remove it\r\n 1] dealing with the PSL is complicated and full of state. And the PSL is pretty inaccurate anyhow\r\n 2] don't we want to look up eTLD records over doh directly? e.g. us.com is considered an eTLD and it also has an A record and a valid https://us.com site.\r\n\r\n",
      "createdAt": "2019-08-29T16:12:16Z",
      "updatedAt": "2019-10-23T20:13:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Interesting! Essentially, just say that if something is willing to DNSSEC sign the DOHNS record, then  it's okay to use? It's still a bit weird if someone did that for \"com\", but perhaps we can argue that no one would realistically do that.\r\n\r\nIf something is within an eTLD that has a record, however, we may want to encourage looking for the more specific record?",
          "createdAt": "2019-08-29T16:36:25Z",
          "updatedAt": "2019-08-29T16:36:25Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWU0ODcwNTc5NTE=",
      "title": "probing concern",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/31",
      "state": "CLOSED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "```\r\nBeyond providing basic DoH server functionality, server nodes SHOULD\r\noffer a set of extended configuration to help clients discover the default\r\nset of domains for which the server is designated, as well as other\r\ncapabilities offered by the server deployment.\r\n```\r\n\r\nSome server operators will not like the thought that their customer list can be probed in this way. Perhaps it can be fixed with a MAY and some considerations..",
      "createdAt": "2019-08-29T16:21:41Z",
      "updatedAt": "2019-08-30T15:31:11Z",
      "closedAt": "2019-08-30T15:31:11Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I agree that many operators will not want to give a full list, nor should they.\r\n\r\nMy intention here is that they SHOULD provide the mechanism that allows clients to check if there is a list of default domains that should be added; but that list can be empty and can certainly be smaller that the list of domains the operator owns.\r\n\r\nSo, an Apple deployment wouldn't list every internal domain or anything... but it may feed clients with apple.com, iCloud.com, etc.",
          "createdAt": "2019-08-29T16:38:09Z",
          "updatedAt": "2019-08-29T16:38:09Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps we should reformulate this issue as, \"DoH servers SHOULD provide some list of popular domains for which it is authoritative,\" and note that the list need not be exhaustive. @tfpauly?",
          "createdAt": "2019-08-29T21:48:16Z",
          "updatedAt": "2019-08-29T21:48:16Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "MDU6SXNzdWU0ODcxNTIyNTY=",
      "title": "Man in the middle for obfuscated DOH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/33",
      "state": "OPEN",
      "author": "BrianGithubber",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "I think we need to update the security considerations.\r\n\r\nIn obfuscated DOH you are explicitly not trusting either name server, s.t. no one server can know both the client IP and the name the client wants resolved.\r\nBut if you don\u2019t trust the Obfuscation Target, it can still get the client IP indirectly.   The Target can just give out some man-in-the-middle IP address to the client for the given name.   Then when the client connects to that address, the man-in-the-middle server just forwards the connection to the real server.    The man-in-the-middle server doesn\u2019t actually terminate the client HTTPS, but it does have enough info to (reasonably) reliably associate client IP to name it resolved.   This works much better with V6, since you\u2019d need 1 man-in-the-middle IP per name.\r\n",
      "createdAt": "2019-08-29T20:06:57Z",
      "updatedAt": "2019-08-29T22:01:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, you\u2019re definitely correct that this is a danger. I think there are a few possible mitigations to this, which we should note in the privacy/security considerations (an issue would be appreciated!):\r\n\r\n- A DNSSEC-signed answer would make this much harder, if not impossible to spoof. So, we can hope that in time an uptick in DNSSEC would help cover this gap\r\n- The client can choose to try some percentage of name resolutions over two different combinations of targets and proxies. Of course, these can differ naturally, but we could imagine some heuristics for identifying an attack, at which point the server can be blacklisted.\r\n- The client could also try requesting the name using the same target over a different proxy (to look like a different client) after some time to see if the answer is suspicious\r\n- We\u2019ve discussed an overall auditing process to try to revoke the usage of servers that do such attacks.",
          "createdAt": "2019-08-29T20:58:48Z",
          "updatedAt": "2019-08-29T20:58:48Z"
        },
        {
          "author": "BrianGithubber",
          "authorAssociation": "COLLABORATOR",
          "body": "I created the issue.\r\n\r\nbs\r\n\r\nFrom: Tommy Pauly <notifications@github.com>\r\nSent: Thursday, August 29, 2019 1:59 PM\r\nTo: tfpauly/draft-pauly-adaptive-dns-privacy <draft-pauly-adaptive-dns-privacy@noreply.github.com>\r\nCc: Brian Swander <briansw@microsoft.com>; Author <author@noreply.github.com>\r\nSubject: Re: [tfpauly/draft-pauly-adaptive-dns-privacy] Man in the middle for obfuscated DOH (#33)\r\n\r\n\r\nYes, you\u2019re definitely correct that this is a danger. I think there are a few possible mitigations to this, which we should note in the privacy/security considerations (an issue would be appreciated!):\r\n\r\n  *   A DNSSEC-signed answer would make this much harder, if not impossible to spoof. So, we can hope that in time an uptick in DNSSEC would help cover this gap\r\n  *   The client can choose to try some percentage of name resolutions over two different combinations of targets and proxies. Of course, these can differ naturally, but we could imagine some heuristics for identifying an attack, at which point the server can be blacklisted.\r\n  *   The client could also try requesting the name using the same target over a different proxy (to look like a different client) after some time to see if the answer is suspicious\r\n  *   We\u2019ve discussed an overall auditing process to try to revoke the usage of servers that do such attacks.\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Ftfpauly%2Fdraft-pauly-adaptive-dns-privacy%2Fissues%2F33%3Femail_source%3Dnotifications%26email_token%3DANBFOWMQLMNKDHGUOS4RXTTQHA2ATA5CNFSM4ISGK7V2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5PZT4I%23issuecomment-526359025&data=02%7C01%7Cbriansw%40microsoft.com%7Cd03d9b5c43ba477ad56308d72cc3b24f%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637027091330375806&sdata=RmxmVUDmdEgyXRDj2uLEwQnGMJNKQ5Yevq5JYmBWGoc%3D&reserved=0>, or mute the thread<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FANBFOWPGWDFV44PCZZ5DYZDQHA2ATANCNFSM4ISGK7VQ&data=02%7C01%7Cbriansw%40microsoft.com%7Cd03d9b5c43ba477ad56308d72cc3b24f%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637027091330375806&sdata=X9f0QsdYwJ7nMy0gSyFhfAe65NNskRvqdk%2BHlwfza5U%3D&reserved=0>.\r\n",
          "createdAt": "2019-08-29T21:01:08Z",
          "updatedAt": "2019-08-29T21:04:19Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU0ODcxNjM4OTc=",
      "title": "Separating the proxy pool from the target servers",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/34",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "discuss",
        "editorial",
        "odoh"
      ],
      "body": "The document currently requires every designated doh server also be willing to act as a proxy server and target server.. this is tacitly a commitment to serve arbitrary amounts of recursive traffic in order to be able to authoritatively serve any domain over adaptive dns.\r\n\r\nI expect that to be too much to ask of many folks to be successful.\r\n\r\nAnd even among the folks that can offer that kind of service, they might reasonably want to provision it into different origins and infrastructures than they use for the authoritative designated doh server traffic.\r\n\r\nThe lack of quality control would also be a factor.\r\n\r\nI suggest we filter the potential obfuscating servers by a new 'isProxy' attribute on their signed DOHNS RRs. Further,. we can bootstrap the system with a set of well known Proxies and Targets downloadable from a well known URL: https://www.doh-root-servers.net/proxyList - each proxy in that list would need a corresponding DOHNS with the isProxy attribute. It seems that URL could be looked up in a privacy insensitive way.\r\n\r\n",
      "createdAt": "2019-08-29T20:35:45Z",
      "updatedAt": "2021-02-21T02:00:17Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The end goal here I have is that the amount of Obfuscated traffic for any given resolver should be a small percentage of their resolutions. So, big resolvers (Google, Cloudflare, Fastly, Akamai, Apple, etc) would be on the hook to make sure they help the ecosystem by supporting obfuscation. Little guys, not so much.\r\n\r\nThe trick is how to get to this point. I want to ensure that the parties that benefit the most from the system (by getting control of a lot of traffic that they can shape towards them) also give back by helping ensure user privacy for other names. That's why the existing approach is a bit harsh.\r\n\r\nYou're right that right now, the requirement has two dimensions of burden:\r\n- Every DoH server needs to support Obfuscation (they need the implementation complexity)\r\n- Every DoH server may face an arbitrary amount of traffic burden\r\n\r\nWe can choose to mitigate this on either front. I'm wondering if we can do something to determine the scale of the resolver before we make it do obfuscation, too.",
          "createdAt": "2019-08-29T21:29:04Z",
          "updatedAt": "2019-08-29T21:29:04Z"
        },
        {
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that we definitely should clarify something here: we want to make sure that the incentive structure is aligned correctly, but at the same time there are very real concerns for feasible deployment. \r\n\r\nI think that's potentially different from allowing folks to separate their operational requirements for deployment and provisioning their infrastructure, allowing flexibility around deployment is really important whatever the incentive structure.",
          "createdAt": "2019-08-30T02:13:11Z",
          "updatedAt": "2019-08-30T02:13:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@mcmanus, @tfpauly, @erickinnear, is there still something to be done here? Can we close this?",
          "createdAt": "2021-02-21T02:00:17Z",
          "updatedAt": "2021-02-21T02:00:17Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "MDU6SXNzdWU0ODcxNjU5MjE=",
      "title": "concerns about proxy and target selection",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/35",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "if a proxy and target collude then the client address and DNS information are trivially correlated.\r\n\r\nIf a single entity has more than one origin in the list of known targets then a client will eventually route a 'blinded' request through both of them creating an unfortunate liability.\r\n\r\nit seems useful to have some way of marking this kind of redundancy.\r\n\r\nwe might also want to encourage doh servers to use anycast and/or geo-dns to minimize origin names and the potential for conflict.\r\n\r\n",
      "createdAt": "2019-08-29T20:40:41Z",
      "updatedAt": "2019-08-30T12:03:17Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> if a proxy and target collude then the client address and DNS information are trivially correlated.\r\n\r\nYep, that's by design! Single hop Tor.\r\n\r\n> If a single entity has more than one origin in the list of known targets then a client will eventually route a 'blinded' request through both of them creating an unfortunate liability.\r\n\r\nI'm not sure I follow. @mcmanus can you please elaborate?",
          "createdAt": "2019-08-29T21:44:28Z",
          "updatedAt": "2019-08-29T21:44:28Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think the point here is that if I end up selecting two nodes that both belong to Apple, Apple could more easily collude with itself (even accidentally) to correlate information. It is beneficial for the client to be aware of boundaries between servers that are safe to use for proxying.",
          "createdAt": "2019-08-29T23:42:01Z",
          "updatedAt": "2019-08-29T23:42:01Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "yes to tommy's summary.\n\nOn Thu, Aug 29, 2019 at 7:42 PM Tommy Pauly <notifications@github.com>\nwrote:\n\n> I think the point here is that if I end up selecting two nodes that both\n> belong to Apple, Apple could more easily collude with itself (even\n> accidentally) to correlate information. It is beneficial for the client to\n> be aware of boundaries between servers that are safe to use for proxying.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/35?email_source=notifications&email_token=AAB7TMYOPL7AGHFVMVXYUKTQHBNETA5CNFSM4ISGT4ZKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5QDXEY#issuecomment-526400403>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB7TM4YW3SVNTHABGHEQMTQHBNETANCNFSM4ISGT4ZA>\n> .\n>\n",
          "createdAt": "2019-08-30T12:03:16Z",
          "updatedAt": "2019-08-30T12:03:16Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "MDU6SXNzdWU0ODcxNjc1ODY=",
      "title": "consider confidentiality when selecting proxy server",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/36",
      "state": "OPEN",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "```\r\nbetter latency properties than others. To optimize performance, clients SHOULD\r\nmaintain statistics to track the performance characteristics and success rates of\r\nparticular pairs.\r\n```\r\n\r\nIf taken literally this would often mean picking 2 servers located very close to the client - which could be almost as identifying as the IP address we're trying to hide.",
      "createdAt": "2019-08-29T20:44:52Z",
      "updatedAt": "2019-08-29T22:01:55Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Interesting. I'm sure there's a geometric argument we can make about this being a problem in practice. There's probably not much we can say beyond \"choose wisely,\" as this is only a problem if the client's position can be inferred from the Target's perspective, and that depends on how many candidate clients are \"nearby.\"",
          "createdAt": "2019-08-29T21:43:14Z",
          "updatedAt": "2019-08-29T21:43:14Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "MDU6SXNzdWU0ODc1NjUzNDY=",
      "title": "Provide examples for local network deployments",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/42",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "It would be useful to give some scenarios for:\r\n- Private domains in enterprise networks\r\n- Networks that need to blacklist certain names, and how they advertise that",
      "createdAt": "2019-08-30T16:14:58Z",
      "updatedAt": "2019-10-22T20:57:25Z",
      "closedAt": "2019-10-22T20:57:25Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Also maybe have a way to indicate the network wanted to block everything? Ala the Firefox sentinel domain.",
          "createdAt": "2019-09-12T20:13:46Z",
          "updatedAt": "2019-09-12T20:13:46Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "MDU6SXNzdWU0ODk0NjgxOTc=",
      "title": "Clarify when a client should request a more specific DoH server",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/45",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We currently say:\r\n\r\n```\r\nThe client MAY also issue queries for the [] record for more specific names to discover\r\nfurther Designated DoH Servers.\r\n```\r\n\r\nWe should clarify when this ought to be done.",
      "createdAt": "2019-09-05T00:29:04Z",
      "updatedAt": "2019-09-05T00:29:04Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 47,
      "id": "MDU6SXNzdWU0ODk4OTcwMjY=",
      "title": "Add a section documenting ecosystem risks",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/47",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "What happens if proxies decide to stop proxying? What happens if there are no proxies left? ",
      "createdAt": "2019-09-05T17:18:30Z",
      "updatedAt": "2021-01-13T23:50:22Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 50,
      "id": "MDU6SXNzdWU0OTMwMDU3MzQ=",
      "title": "Describe multi-CDN load balancing approach",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/50",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "For multi-CDN names that want to control the spilt of traffic (say, 90/10 split), we should spell out the recommended deployment model.\r\n\r\nOff the top of my head, this would involve having a third-party (or one of the CDNs) be responsible for doing all of the DNS resolution and doing the balancing.",
      "createdAt": "2019-09-12T20:11:39Z",
      "updatedAt": "2019-09-17T16:14:31Z",
      "closedAt": "2019-09-17T16:14:31Z",
      "comments": [
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "https://www.citrix.com/products/citrix-intelligent-traffic-management/ for\nsome bg on this kind of commercial product as a 3rd party\n\nOn Thu, Sep 12, 2019 at 4:11 PM Tommy Pauly <notifications@github.com>\nwrote:\n\n> For multi-CDN names that want to control the spilt of traffic (say, 90/10\n> split), we should spell out the recommended deployment model.\n>\n> Off the top of my head, this would involve having a third-party (or one of\n> the CDNs) be responsible for doing all of the DNS resolution and doing the\n> balancing.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/50?email_source=notifications&email_token=AAB7TMZQ7WKUXFKAD4PYDLTQJKO7XA5CNFSM4IWJDWT2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HLCVOTA>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB7TMYAED4ELR4WDH5KD4DQJKO7XANCNFSM4IWJDWTQ>\n> .\n>\n",
          "createdAt": "2019-09-12T20:14:26Z",
          "updatedAt": "2019-09-12T20:14:26Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "MDU6SXNzdWU0OTMwMjIxMTk=",
      "title": "Describe failure models for client algorithm",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/51",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "We should describe how the client handles resolution/connectivity failures:\r\n- VPN resolution fails or is blocked\r\n- DoH connections fail, or resolution over DoH fails\r\n- Oblivious DoH fails",
      "createdAt": "2019-09-12T20:48:30Z",
      "updatedAt": "2019-09-12T20:48:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWU0OTUzNDQ3NDc=",
      "title": "Admin configuration across networks versus domains",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/54",
      "state": "OPEN",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From the call with network operators today, the topic came up of how a device admin might specify that a given DoH server should be used regardless of which network is currently being used. \r\n\r\nWhile I agree this can't be universal due to a slew of edge cases, this document could call this out as a possibility as it would be a good supportive feature for privacy-centric users (namely, that if a user wants to trust one DNS provider in the general case, they can specify that once rather than per network they connect to). For example, today in iOS I believe I can only specify manual DNS servers per network.\r\n\r\nThe point being the doc state today doesn't prevent supporting this, but stating it as the requirement would create a more privacy friendly experience across all platforms that adopt this.",
      "createdAt": "2019-09-18T16:56:38Z",
      "updatedAt": "2019-09-18T16:56:38Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 55,
      "id": "MDU6SXNzdWU1MDA1NzA2NjQ=",
      "title": "Clarify the cipher suite for the symmetric key",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/55",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "The ODOH document says the cipher suite is passed by the client along with the symmetric key, but the struct doesn't seem to include this. Also, is there any negotiation of this? What if a suite becomes deprecated?",
      "createdAt": "2019-09-30T23:06:23Z",
      "updatedAt": "2019-10-02T21:42:27Z",
      "closedAt": "2019-10-02T21:42:27Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Also cite RFC8446 for TLS syntax.",
          "createdAt": "2019-10-02T17:34:18Z",
          "updatedAt": "2019-10-02T17:34:18Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The RFC8446 is already referenced, actually!",
          "createdAt": "2019-10-02T20:04:03Z",
          "updatedAt": "2019-10-02T20:04:03Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "MDU6SXNzdWU1MDE2MzI1MDA=",
      "title": "Remove `message_length` from `ObliviousDNSMessage`",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/57",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-10-02T17:45:20Z",
      "updatedAt": "2019-10-02T21:41:59Z",
      "closedAt": "2019-10-02T21:41:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Also remove the query ID and change the AAD to cover just the message type and key_id",
          "createdAt": "2019-10-02T19:38:05Z",
          "updatedAt": "2019-10-02T19:38:05Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "MDU6SXNzdWU1MDU2MTA5MDM=",
      "title": "SvcParamKey values",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/60",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Please keep the numeric SvcParamKey values as `?` in the text until IANA confirms a value.  Choosing fixed values creates a risk of confusion for future readers who come across this draft.  (The numeric values you've chosen also collide with values in the SVCB draft.)",
      "createdAt": "2019-10-11T03:05:53Z",
      "updatedAt": "2019-10-17T16:57:50Z",
      "closedAt": "2019-10-17T16:57:50Z",
      "comments": []
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU1MDc0MDI2NDE=",
      "title": "Specify SVCB query, reserve a label?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/61",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "From @enygren:\r\n\r\n When saying \"issue a SVCB query\" we should say what\r\n SVCB query they should issue.  I'd suggest that it\r\n should generally be for a special label associated\r\n with a domain.  For example:\r\n\r\n     _drr.example.com SVCB 1 {something} ( dohuri=https://doh.example.org/query [...] )\r\n\r\n would designate a DRRs (designated recursive resolver)\r\n for example.com.  A question here is what should be used\r\n as the SvcDomainName field for this stand-alone case?\r\n I'm not sure what the right answer is?  (Maybe just \".\"\r\n although that has otherwise defined meaning.)",
      "createdAt": "2019-10-15T18:12:58Z",
      "updatedAt": "2019-10-23T20:12:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "The current draft shows `dohuri` in an `HTTPSSVC` record, mixed in with the domain's other SvcFieldValue keys.  That seems right to me: you don't want to add another query to the beginning of every connection.  Is this for a different use case?\r\n\r\nFor that use case, I don't think you need a special label: HTTP clients would use HTTPSSVC, and if some non-HTTP protocol `foo` wanted to benefit from Adaptive DNS, it would have \r\n\r\n```\r\n_9999._foo.example.com. SVCB ... dohuri=https://doh.example.org/query ...\r\n```\r\n\r\nEDIT: I see #62 proposes a use case in which this would be appropriate.",
          "createdAt": "2019-10-15T18:21:24Z",
          "updatedAt": "2019-10-15T18:25:16Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This issue is mainly capturing the comment from Erik, to make sure we don't lose it. In general, I'd also want to do a single query for an HTTPSSVC record that tells me the `dohuri` along with the other information that's already retrieved.",
          "createdAt": "2019-10-16T02:02:05Z",
          "updatedAt": "2019-10-16T02:02:05Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU1MDc0MDI5NTk=",
      "title": "Define scope of designation for domains",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/62",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "From @enygren:\r\n\r\nWe need to crisply define the scope of \"designation\" for DRRs\r\n (designated recursive resolver) as well as what answers\r\n from them can be trusted.  Along with this, we should\r\n be crystal clear about which SVCB record designations\r\n for DRRs are designating for which domains.\r\n For example, if I have:\r\n\r\n      www.example.com  CNAME  svc.example.net.\r\n      svc.example.net\tHTTPSSVC  1 svc2.example.net. ( dohuri=https://doh.example.org/query [...] )\r\n\r\n when which domains does that dohuri correspond to?\r\n And which lookups can and should then go to which resolvers?\r\n For example, does that dohuri apply to www.example.com,\r\n svc.example.net, or svc2.example.net, or some mixture of those?\r\n\r\n It would be really nice if example.net can specify a DRR\r\n that gets used for svc2.example.net and/or all of example.net.\r\n One possibility would be that HTTPSSVC records don't themselves\r\n include dohuri or odnskeys but instead reference others.\r\n For example, the parameter might be \"drrdomain=example.net,example.com\"\r\n which would then prompt the client to do SVCB lookups for _drr.example.com\r\n and _drr.example.net.",
      "createdAt": "2019-10-15T18:13:40Z",
      "updatedAt": "2019-10-15T18:13:40Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU1MDc0MDM0NDQ=",
      "title": "Add warnings about \"example.com\" vs \"bad-example.com\"",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/63",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ready for text"
      ],
      "body": "From @enygren:\r\n\r\n We need to be careful to call how clients handle and partition\r\n caches.  For example, if you query a DRR for example.com\r\n and ask for \"www.example.com\" and get back:\r\n\r\n      www.example.com CNAME www.bad-example.net.\r\n      www.bad-example.net AAAA 2001:db8::f00d\r\n\r\n then while it might be reasonable to assume this is a fine response\r\n for \"www.example.com\" it's important that the client not use the\r\n \"www.bad-example.net\" record in-cache for other lookups.  (This is\r\n creating a weirdly blurred line between recursives and\r\n authoritatives and puts a bunch of complexity into the client to\r\n make things safe, at least unless clients DNSSEC validate everything\r\n which may not be a reasonable assumption.)",
      "createdAt": "2019-10-15T18:14:44Z",
      "updatedAt": "2019-10-29T20:42:38Z",
      "closedAt": "2019-10-29T20:42:38Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Fixed with 571aebc",
          "createdAt": "2019-10-29T20:42:38Z",
          "updatedAt": "2019-10-29T20:42:38Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "MDU6SXNzdWU1MDc0MDM4NTY=",
      "title": "Consider path-based proxying method",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/64",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "From @enygren:\r\n\r\n I really, really do NOT like how :authority is having its meaning\r\n altered in the ODNS draft.  This breaks HTTP semantics and this\r\n breaks a bunch of assumptions on how CDN servers do hostname-based\r\n service multiplexing.  It would require having separate IP addresses\r\n for DoH servers from CDN servers, for example.  (Which has worse\r\n privacy properties.)  I'd propose instead that ODNS followes adds\r\n some path elements.  For example:\r\n\r\n    :method = POST\r\n    :authority = dnsproxy.example.net\r\n    :path = /dns-query?targethost=dnstarget.example.net&targetpath=/dns-query\r\n    ...\r\n\r\n makes this be normal HTTPS semantics.  It also avoids problems if the\r\n proxy and target have different DoH template URI paths which\r\n I don't believe the current draft handles?",
      "createdAt": "2019-10-15T18:15:41Z",
      "updatedAt": "2019-10-23T00:30:25Z",
      "closedAt": "2019-10-23T00:30:25Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This also was how we ended up implementing out test GO server, as a note.",
          "createdAt": "2019-10-15T18:16:05Z",
          "updatedAt": "2019-10-15T18:16:05Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "yeah - this is my fault. I basically agree with @enygren now. I'm not sure it breaks http semantics, but we can debate that in the bar.. it does make the doh service discovery ridiculously hard and we should avoid that.\r\n\r\nwould we define a new uri template with targethost and targetpath variables?\r\n",
          "createdAt": "2019-10-16T17:27:20Z",
          "updatedAt": "2019-10-16T17:27:20Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Cool, I'll do this change.\r\n\r\nI don't think we need a new URI Template; I think you just use the normal template here",
          "createdAt": "2019-10-16T22:46:08Z",
          "updatedAt": "2019-10-16T22:46:08Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "MDU6SXNzdWU1MDc0MDQ0NTY=",
      "title": "Explain how network changes impact designated DoH servers",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/65",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ready for text"
      ],
      "body": "From @enygren:\r\n\r\n Do we want/need to have Network Change events impact\r\n the DRR cache?  What are the risks (eg, linkability)\r\n of not doing so?",
      "createdAt": "2019-10-15T18:16:56Z",
      "updatedAt": "2019-10-29T20:52:46Z",
      "closedAt": "2019-10-29T20:52:46Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Addressed in 49bb755",
          "createdAt": "2019-10-29T20:52:46Z",
          "updatedAt": "2019-10-29T20:52:46Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "MDU6SXNzdWU1MDkyMTkwODY=",
      "title": "Captive portal behaviour",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/67",
      "state": "CLOSED",
      "author": "chris-box",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "When reading the drafts it wasn't clear to me how the Hostname Resolution Algorithm is intended to work for a client sitting behind a captive portal.\r\n\r\nOne option is that Adaptive DNS is not intended to come into play until after the captive portal process has been completed.\r\n\r\nAnother option is that it should always be used. When \"captive\" I would expect this to result in failure of step 1 (Exclusive Direct Resolver). Would step 2 (Direct Resolver) sometimes work, for example if the local router published a domain that was also the one the client was asking for? If it didn't work, we carry on through and know that on reaching step 5 then it should work, assuming the captive portal detection domain should never be thought of as privacy-sensitive.",
      "createdAt": "2019-10-18T17:31:16Z",
      "updatedAt": "2019-10-22T20:54:33Z",
      "closedAt": "2019-10-22T20:54:33Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We can certainly clarify this in the resolution algorithm section. For our client (iOS/macOS), we don't do any user-specific traffic until we check if we are captive or not. The system traffic to interact with the captive portal MUST use the local resolver.\r\n\r\nWe do have some text in the section \"Walled-Garden and Captive Network Deployments\":\r\n\r\n```\r\nHowever, if such a network does not support explicitly advertising local names,\r\nclients that try to establish connections to DoH servers will experience connection\r\nfailures. In these cases, system traffic that is used for connecting to captive portals\r\nSHOULD use local resolvers. In addition, clients MAY choose to fall back to using\r\ndirect resolution without any encryption if they determine that all connectivity is\r\nblocked otherwise. Note that this comes with a risk of a network blocking\r\nconnections in order to induce this fallback behavior, so clients might want to\r\ninform users about this possible attack where appropriate, or prefer to not fall\r\nback if there is a concern about leaking user data.\r\n```",
          "createdAt": "2019-10-18T17:34:29Z",
          "updatedAt": "2019-10-18T17:35:02Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "NONE",
          "body": "Yes, the walled garden section does help, but as it's later and more narrative, it still leaves some uncertainty in my mind. Ideally it would be clearly described in section 3.3.",
          "createdAt": "2019-10-18T17:44:29Z",
          "updatedAt": "2019-10-18T17:44:29Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Addressed in 138dc9b",
          "createdAt": "2019-10-22T20:54:31Z",
          "updatedAt": "2019-10-22T20:54:31Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "MDU6SXNzdWU1MDkyMjI2Nzg=",
      "title": "Oblivious Resolution isn't only for privacy-sensitive connections",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/68",
      "state": "CLOSED",
      "author": "chris-box",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "> ## Oblivious Resolution\r\n> \r\n> For all privacy-sensitive connection queries for names that do not correspond\r\n> to a Designated DoH Server, the client SHOULD use Oblivious DoH to help\r\n> conceal its IP address from eavesdroppers and untrusted resolvers.\r\n\r\nWe learn from the Hostname Resolution Algorithm that step 4, Oblivious Resolution, should be used for all queries, not just the ones that are privacy-sensitive. Therefore should we remove the term \"privacy-sensitive\" from the statement above?\r\n\r\nThe only difference with privacy-sensitive queries is how we respond to failure.\r\n",
      "createdAt": "2019-10-18T17:39:36Z",
      "updatedAt": "2019-10-22T20:46:44Z",
      "closedAt": "2019-10-22T20:46:44Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We can perhaps also loosen the algorithm; I think for non-privacy sensitive connections, the client MAY skip oblivious DoH.",
          "createdAt": "2019-10-18T17:40:53Z",
          "updatedAt": "2019-10-18T17:40:53Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "NONE",
          "body": "Agreed, yes the client should have the option, if it has reason to know that skipping may be better.",
          "createdAt": "2019-10-18T17:46:33Z",
          "updatedAt": "2019-10-18T17:46:33Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Addressed in 889f6ef",
          "createdAt": "2019-10-22T20:46:42Z",
          "updatedAt": "2019-10-22T20:46:42Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "MDU6SXNzdWU1MDkyNDM0NjE=",
      "title": "Communication of filtering reason and responsible entity, for user consent",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/69",
      "state": "OPEN",
      "author": "chris-box",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "Section 6.2.4 (Network-Based Filtering) says:\r\n\r\n> Clients that receive indication of filtering requirements SHOULD NOT use any other\r\n> resolver for the filtered domains, but treat the network as claiming authority. However,\r\n> since this filtering cannot be authenticated, this behavior SHOULD NOT be done\r\n> silently without user consent.\r\n\r\nThis presents two scenarios.\r\n\r\n1. The network says filtering is optional.\r\n\r\nThe client needs to ask the user whether it should use that filtering or not. How is the user to make that decision? I think the protocol needs a way to communicate the reason why this optional filtering is made available. For example a PvD key could say \"If you use our DNS service, we'll prevent access to all the malware domains that we know about.\" There should also be a way to confirm to the user whose DNS service this is, e.g. cryptographic assurance that this is supplied by Large Company X. The name on the TLS certificate is one obvious way to supply that, but it's possible there are better ways, particularly if the entity responsible for filtering could be distinct from the name on the certificate.\r\n\r\n2. The network says filtering is required.\r\n\r\nThe client needs to ask the user whether to proceed on this network or not. In a similar way to the first case, I think the protocol needs a way to communicate some statement from the named responsible entity on why filtering is required.\r\n",
      "createdAt": "2019-10-18T18:26:44Z",
      "updatedAt": "2019-10-23T20:53:56Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU1MTE2MjYxMjc=",
      "title": "Update text around deriving ODoH nonces",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/71",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "ready for text"
      ],
      "body": "We should update the guidance on ODoH nonces; using all zeros has caused some confusion",
      "createdAt": "2019-10-23T23:39:45Z",
      "updatedAt": "2019-11-01T21:45:40Z",
      "closedAt": "2019-11-01T21:45:40Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Fixed by #74",
          "createdAt": "2019-11-01T21:45:30Z",
          "updatedAt": "2019-11-01T21:45:30Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU1MTIyMTI3MTY=",
      "title": "Clarify that hiding proxies and targets is not a privacy goal",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/72",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "ready for text"
      ],
      "body": "",
      "createdAt": "2019-10-24T22:31:41Z",
      "updatedAt": "2019-11-01T21:48:46Z",
      "closedAt": "2019-11-01T21:48:46Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Done with #74 ",
          "createdAt": "2019-11-01T21:48:45Z",
          "updatedAt": "2019-11-01T21:48:45Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "MDU6SXNzdWU1MTIyMTMwNzU=",
      "title": "Clarify that traffic analysis is out of scope",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/73",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "ready for text"
      ],
      "body": "Folks can always look at sizes and timing patterns. If that's undesirable, use padding or be smarter about timing. ",
      "createdAt": "2019-10-24T22:33:00Z",
      "updatedAt": "2019-11-01T21:46:30Z",
      "closedAt": "2019-11-01T21:46:30Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Fixed in #74 ",
          "createdAt": "2019-11-01T21:46:30Z",
          "updatedAt": "2019-11-01T21:46:30Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU1MjQ3MjcyNjQ=",
      "title": "Consider allowing filter to policy to include desired target",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/76",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-19T02:06:23Z",
      "updatedAt": "2019-11-19T06:21:44Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "To expand upon this, the local network can indicate that it designates a particular DoH server that has an acceptable filtering policy; and that a proxy can be used for queries to that server.\r\n\r\nOf course, we should be careful to ensure that these aren't one-server-per-user.",
          "createdAt": "2019-11-19T06:21:44Z",
          "updatedAt": "2019-11-19T06:21:44Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "MDU6SXNzdWU1MjQ5OTg3Mzg=",
      "title": "Mention NAT64 synthesis ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/77",
      "state": "OPEN",
      "author": "erickinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should mention NAT64 synthesis",
      "createdAt": "2019-11-19T13:08:32Z",
      "updatedAt": "2019-11-19T13:08:32Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 78,
      "id": "MDU6SXNzdWU1MjYzNDA5OTU=",
      "title": "Is NXDomain really a failure ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/78",
      "state": "OPEN",
      "author": "fl1ger",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "ready for text"
      ],
      "body": "This is about the hostname resolution algorithm (3.3). If we think NXDomain is a failure which it is not in DNS then we will leak this name to all further resolvers we try. If we believe that for the enterprise case have a PVD from the network with the private domain that continuing the resolution when getting an NXDomain is the wrong thing from a privacy perspective.\r\n",
      "createdAt": "2019-11-21T03:23:02Z",
      "updatedAt": "2019-11-21T11:51:27Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Please note that for VPN use cases or internal domains, we specify that fallback must not be done:\r\n\r\n```\r\n1. An Exclusive Direct Resolver, such as a resolver provisioned by a VPN, with domain rules that include the hostname being resolved. If the resolution fails, the connection will fail. See Section 3.2 and Section 6.\r\n```\r\n\r\nPerhaps it makes sense to do the same for the case of local authority, i.e. (2):\r\n```\r\n2. A Direct Resolver, such as a local router, with domain rules that are known to be authoritative for the domain containing the hostname. If the resolution fails, the connection will try the next resolver configuration based on this list.\r\n```\r\n\r\nChanging to `if the resolution fails, the connection will fail.`",
          "createdAt": "2019-11-21T03:25:27Z",
          "updatedAt": "2019-11-21T03:25:27Z"
        },
        {
          "author": "fl1ger",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah that is better. If we say NXDomain is a failure should we not also say the same about NoError/NoData? I guess happy eyeballs will ask AAAA and A, so getting that answer will not be uncommon.\r\n",
          "createdAt": "2019-11-21T03:32:34Z",
          "updatedAt": "2019-11-21T03:32:34Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, we should also mention that NoError/NoData applies the same way. ",
          "createdAt": "2019-11-21T11:51:27Z",
          "updatedAt": "2019-11-21T11:51:27Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU1MjY1MzY0Mzk=",
      "title": "DoH designations should be made at the zone cut",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/79",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-21T11:32:02Z",
      "updatedAt": "2019-11-21T11:32:02Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 80,
      "id": "MDU6SXNzdWU1MjY5NTgyMzI=",
      "title": "Clarify client<->proxy and proxy<->target connection persistence",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/80",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-22T02:59:13Z",
      "updatedAt": "2020-12-12T16:51:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "skepticfx",
          "authorAssociation": "NONE",
          "body": "This sounds related to the proxy connection management(to prevent tracking), that we were discussing earlier. Maybe we could allow persistent connections on either side? The proxy can be clever and maintain N connections to a given target. Upon a DNS query from the same client going to the same oDoH target, the proxy could choose one connection randomly from the N connections to the given target. \r\n\r\nOr maybe this is very implementation specific? ",
          "createdAt": "2020-12-11T07:53:00Z",
          "updatedAt": "2020-12-11T07:53:00Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "MDU6SXNzdWU1MjY5NTkwNTQ=",
      "title": "Add note about IP address privacy",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/81",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Name encryption and ESNI might not be enough in some cases. We should just acknowledge that.",
      "createdAt": "2019-11-22T03:02:19Z",
      "updatedAt": "2020-12-12T16:50:44Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yup. Specifying that IP addresses may be unique and give things away is good.",
          "createdAt": "2019-11-22T03:03:47Z",
          "updatedAt": "2019-11-22T03:03:47Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "MDU6SXNzdWU1MjY5NTkzNDA=",
      "title": "Discuss \"open proxy\" concerns",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/82",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "A colluding client and target can currently use proxies to send anything. This might be worth noting in the security considerations.",
      "createdAt": "2019-11-22T03:03:27Z",
      "updatedAt": "2021-02-20T17:05:59Z",
      "closedAt": "2021-02-20T17:05:59Z",
      "comments": [
        {
          "author": "Lekensteyn",
          "authorAssociation": "NONE",
          "body": "This must definitely be expanded on. Right now one of the public ODoH proxy servers permits a query such as\r\n\r\n`curl -sid '' -Acontent-type:application/oblivious-dns-message 'https://proxyhost/proxy?targethost=example.org&targetpath=/'`\r\n\r\nSuggestions:\r\n- Require the proxy to check that the request uses the POST method with Content-Type application/oblivious-dns-message.\r\n- Require the proxy to check that the response has Content-Type application/oblivious-dns-message.\r\n- Clarify whether the targethost can contain a port number (e.g. example.com:4443)\r\n- Require the proxy to validate the target host (forbidding `localhost:1337/bad`) and target path (forbidding query parameters such as `/echo?content-type=application/oblivious-dns-message`).\r\n- Specify error codes for the proxy in case the target is unreachable. (502 Bad Gateway?) Ideally an application-level error could be emitted to differentiate between deployment errors and actual errors recognized by the proxy service.\r\n\r\nThe above header checks might be too late. To reduce the likelihood of abuse, the proxy could perform checks for new hosts. Assuming that the ODoH target is public, the proxy could check for the `odohconfig` HTTPS/SVCB parameter and refuse service if not found.\r\n",
          "createdAt": "2020-12-09T11:01:59Z",
          "updatedAt": "2020-12-09T11:01:59Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@skepticfx, can you please have a look here?",
          "createdAt": "2020-12-09T15:54:03Z",
          "updatedAt": "2020-12-09T15:54:03Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Following up on the proposals above:\r\n\r\n1. Agreed, this should be expanded upon in Section 4.1.\r\n2. Agreed, assuming the status code is 2xx. I don't think the content type is relevant if the status code isn't 2xx, since the client won't process the body anyway.\r\n3. Agreed. I think it's fine to permit a port number. It's a proxy policy question as to whether certain port numbers should be allowed. (We can add that to the security considerations.)\r\n4. I think this is covered (albeit somewhat implicitly) in Section 4.1. It can probably be improved.\r\n5. Great suggestion! I'm fine with 502 in that case. \r\n\r\nI also like the recommendation that the proxy check for the HTTPS `odohconfig` parameter in all permitted targets (whether or not there is an allow list of targets).\r\n\r\nI'll put together a PR to address these.",
          "createdAt": "2020-12-09T23:18:09Z",
          "updatedAt": "2020-12-09T23:18:09Z"
        },
        {
          "author": "skepticfx",
          "authorAssociation": "NONE",
          "body": "A colluding client and target could always allow abuse of proxies. Can the proxy deny requests to a target if it deems the target is not a valid oDoH server? In that case, what would be an appropriate error code?\r\n\r\nAgree with the recommendations above about validating the HTTP request path and query parameters to always conform with what is allowed in the oDoH protocol. This prevents the general open proxy abuse. ( The target need not be colluding here, just the client is malicious here).\r\n\r\nHowever am not sure how the `odohconfig` helps against the abuse of a colluding client and target. \r\n",
          "createdAt": "2020-12-11T06:45:42Z",
          "updatedAt": "2020-12-11T07:38:35Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "MDU6SXNzdWU1MjY5NTk0OTU=",
      "title": "Meaning of dnsZones element",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/83",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "During the DPrivE discussion, there was a lot of concern about having a field here that is an unproven (i.e. client still needs to validate separately) assertion of the server's authority over these domains.  Pushing the HTTPSSVC records will demonstrate the authority or not regardless, so this field as-is seems to provide little value.\r\n\r\nI'd suggest that this element should instead reflect the server's _willingness_ to resolve names.  If the server is a full recursive, the value would be `.`, the entire DNS.  If the server is only willing to resolve specific zones, this provides a list of those zones.  This helps the client avoid sending requests which will be rejected, and discover additional recursives in the event that it wants to spread non-designated queries across many recursives to limit correlation.",
      "createdAt": "2019-11-22T03:04:06Z",
      "updatedAt": "2020-07-13T16:19:31Z",
      "closedAt": "2020-07-13T16:19:31Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Added some more text here in #115 ",
          "createdAt": "2020-07-13T16:19:31Z",
          "updatedAt": "2020-07-13T16:19:31Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "MDU6SXNzdWU1MjY5NTk5MjU=",
      "title": "Add section on performance cost",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/84",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "A concise description of what ODoH requires (computation-wise) beyond normal DoH is probably warranted. ",
      "createdAt": "2019-11-22T03:05:44Z",
      "updatedAt": "2021-02-20T17:09:10Z",
      "closedAt": "2021-02-20T17:09:10Z",
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Someone commented on the Jabber that having that same cost comparison with Tor itself would be interesting, and I agree. Either this can be clearly establised as a in-between option for those who want no specific DNS server to have their IP/query but aren't willing to commit to the costs of Tor, or we'll learn Tor is a cheaper solution (unlikely imo but having the costs written down will put it to rest).",
          "createdAt": "2019-11-22T03:49:02Z",
          "updatedAt": "2019-11-22T03:49:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We have a section that compares this against general tools like Tor. I don't think it makes sense to add more details. Closing as such. (If anyone disagrees, please comment!)",
          "createdAt": "2021-02-20T17:09:10Z",
          "updatedAt": "2021-02-20T17:09:10Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "MDU6SXNzdWU1NTg0NTk2NjI=",
      "title": "Allow recursive resolvers to use SVCB to advertise their own DoH URI",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/86",
      "state": "CLOSED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In the scenario where a stub resolver is configured to talk to recursive resolver X from DHCP, it can't use DoH until it has the URI for that server. If the recursive and the stub are both DoH and aDNS aware, there's no reason the recursive can't use the SVCB record to inform the client querying it over UDP 53 that it can upgrade to DoH by using a provided URI. \r\n\r\nWhile this isn't necessary for domain that have designated DoH resolvers, it would be nice for the stub to query for domains without designated DoH resolvers using DoH from an automatic network configuration. This will allow for easier DNS server configuration options as only the IP address will be required (from DHCP, UI, or otherwise) as has been historically true.\r\n\r\nAs discussed offline, this shouldn't claim ownership of any domain but should still be signed to ensure secure upgrading to DoH from classic DNS. ",
      "createdAt": "2020-02-01T01:57:20Z",
      "updatedAt": "2020-06-09T23:18:39Z",
      "closedAt": "2020-06-09T23:18:39Z",
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "In conversations with ISPs, it's come up that such a solution would need to address both the easier public IP scenario as well as the private IP scenario. For example, if the router is handing out local addresses over DHCP, how can that local DNS server recommend a public DoH server in a secure manner such that the device knows the issuer of the DHCP recommendation and the owner of the DoH server are the same entity in possession of the same keys?",
          "createdAt": "2020-02-06T17:59:37Z",
          "updatedAt": "2020-02-06T17:59:37Z"
        },
        {
          "author": "fl1ger",
          "authorAssociation": "COLLABORATOR",
          "body": "Wrt to the private IP scenario there is IMHO still value to use the resolver on the CPE, when it connects securely to it's resolver (we've seen CPE vendors including DoT recently). The hard unsolved problem is how can we connect secure to the CPE (DoT might be easier then DoH there, as it doesn't require a URI).",
          "createdAt": "2020-02-06T19:55:44Z",
          "updatedAt": "2020-02-06T19:55:44Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Based on that, I could imagine splitting this into two scenarios:\r\n\r\n- CPE recommends a public DoH server: issue as originally described (need to advertise the URI in such a way that the CPE can be proven to have the same owner as the public DoH server)\r\n- CPE recommends itself or another private/local entity, knowing it handles encrypted DNS to the public internet: use DoT locally as you describe\r\n\r\nAs I write this out, it seems to boil down to \"use DoH for public addresses, and DoT for private addresses\" as a public address can be securely verified in a TLS cert whereas a private address cannot.",
          "createdAt": "2020-02-12T03:18:59Z",
          "updatedAt": "2020-02-12T03:18:59Z"
        },
        {
          "author": "fl1ger",
          "authorAssociation": "COLLABORATOR",
          "body": "Makes sense, the problem will be to authenticate the private local connection. One thought could be to forward the cert/public IP/URI/name to the requesting entity.",
          "createdAt": "2020-02-13T11:02:35Z",
          "updatedAt": "2020-02-13T11:02:35Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "This was addressed by adding section 5 to the newly split out discovery doc.",
          "createdAt": "2020-06-09T23:18:39Z",
          "updatedAt": "2020-06-09T23:18:39Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "MDU6SXNzdWU1NTk5OTgxMjQ=",
      "title": "Note that system and local policies are distinctly out of scope",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/87",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "aDNS does not mandate or recommend any type of policy, though it allows policy to control its knobs. Let's call out policy selection as out of scope!",
      "createdAt": "2020-02-04T21:47:02Z",
      "updatedAt": "2020-02-06T19:39:47Z",
      "closedAt": "2020-02-06T19:39:47Z",
      "comments": []
    },
    {
      "number": 89,
      "id": "MDU6SXNzdWU1NzI5NDMxNDI=",
      "title": "Refer to RFC5507 discussing why the SVCB record is preferable to alternatives",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/89",
      "state": "CLOSED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "I'm sure there was plenty of thought here, but the justification for a new record (SVCB) versus other options under RFC5507 section 3 would be useful.",
      "createdAt": "2020-02-28T18:58:57Z",
      "updatedAt": "2020-07-13T20:18:12Z",
      "closedAt": "2020-07-13T20:18:12Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Notes:\n- If a client cares about name privacy, it will likely support HTTPS records for ECH already\n- HTTPS/SVCB is an existing type, and is designed to have extensible RRData\n- To passively detect designations for names, we don't want to add new queries from the client (beyond A/AAAA/HTTPS) or rely on recursive resolver behavior",
          "createdAt": "2020-07-11T15:45:15Z",
          "updatedAt": "2020-07-11T15:45:15Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU2MjE4OTAyMjI=",
      "title": "Use TLS cert for designation trust?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/92",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "mstojens"
      ],
      "labels": [],
      "body": "@mstojens writes:\r\n\r\nWhy can't we confirm Designated server ownership of a domain via the TLS cert? This could be an additional option in addition to DNSSEC signed SVCBs and the PvD option. I can't think of an attack vector where a forged SVCB would lead the client to the wrong Designated server, as either:\r\n\r\nthe server's cert isn't valid for the domain the SVCB advertised, and the client can discard the record, or\r\nthe server's cert is valid for the domain the SVCB advertised\r\nPerhaps it wouldn't be the preferred model by some, but it may make adoption easier for clients and servers who don't support / haven't deployed DNSSEC and already do TLS cert validation but not PvD work.",
      "createdAt": "2020-05-20T16:14:42Z",
      "updatedAt": "2020-07-11T12:04:14Z",
      "closedAt": "2020-07-11T12:04:14Z",
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "If it will help the discussion on this topic, I'd be happy to draft a PR illustrating this possibility. ",
          "createdAt": "2020-05-20T16:37:41Z",
          "updatedAt": "2020-05-20T16:37:41Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Sure, that'd be useful to see written up!",
          "createdAt": "2020-05-20T20:30:27Z",
          "updatedAt": "2020-05-20T20:30:27Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "MDU6SXNzdWU2MjI4MjUxMzY=",
      "title": "Allow a designated resolver to be a validating DNSSEC resolver",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/93",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We should consider if, when we have a valid designation for an encrypted resolver, we should allow that resolver to be a validating DNSSEC resolver (rather than relying on clients doing full validation themselves). That would be limited to zones that already designated the resolver.",
      "createdAt": "2020-05-21T22:19:13Z",
      "updatedAt": "2020-05-21T22:19:13Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU2MzU4Mjc0MTk=",
      "title": "Mutual Confirmation \"trustedNames\" value requirements",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/96",
      "state": "CLOSED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "The document currently says:\r\n- The JSON dictionary MAY contain a key \"trustedNames\" that is an array of strings containing domains that can be used for mutual confirmation of resolver designation.\r\n\r\nThis is ambiguous with regards to what valid values are, and more importantly, what logic a client should use to reject values. Otherwise, a resolver could list friendly servers as trusted and neither could have a real relationship with the dnsZones.\r\n\r\nI think this may be as simple as being clear about trustedNames needing to be identical to or parent zones of the dnsZones the resolver is claiming. However, this does have an interesting edge case where the resolver claims several dnsZones which have no common parent other than the root zone.\r\n\r\nIt's also likely I'm missing some other qualifier intended by saying \"can be used for mutual confirmation\" but whatever that is should be listed explicitly in the document.",
      "createdAt": "2020-06-09T23:48:17Z",
      "updatedAt": "2020-07-13T16:16:51Z",
      "closedAt": "2020-07-13T16:16:51Z",
      "comments": []
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU2MzgwNDYwODM=",
      "title": "Specify ODoH HTTP(/3) extension",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/97",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should negotiate use of ODoH via an HTTP(/3) extension so that we're compatible with MASQUE. See https://datatracker.ietf.org/wg/masque/about/.",
      "createdAt": "2020-06-12T23:18:44Z",
      "updatedAt": "2021-01-13T23:48:35Z",
      "closedAt": "2021-01-13T23:48:34Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as no longer relevant.",
          "createdAt": "2021-01-13T23:48:34Z",
          "updatedAt": "2021-01-13T23:48:34Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "MDU6SXNzdWU2NDIwNjI2NzE=",
      "title": "Specify proxy->target validation",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/99",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "Proxies should probably have some way of validating that a target can and is willing to receive data. The mechanics of this validation mechanism might vary depending on when and how often the validation must be done.",
      "createdAt": "2020-06-19T15:47:07Z",
      "updatedAt": "2021-02-20T17:08:20Z",
      "closedAt": "2021-02-20T17:08:20Z",
      "comments": [
        {
          "author": "Lekensteyn",
          "authorAssociation": "NONE",
          "body": "The current security considerations are quite client-focused:\r\n\r\n> In order to avoid interception and modification of the information retrieved by clients using Adaptive DNS, all exchanges between clients and servers are performed over encrypted connections, e.g., TLS.\r\n> \r\n> Malicious adversaries may block client connections to all DoH or Oblivious DoH services as a Denial-of-Service (DoS) measure. Clients which cannot connect to any proxy may, by local policy, fall back to unencrypted DNS if this occurs.\r\n\r\nIt should probably be expanded to consider the Oblivious DoH Proxy/Server aspects. Indeed, in its current form the proxy could be used to send arbitrary data to non-DoH services.\r\n\r\nFrom the spec, it wasn't clear to me whether the proxy has to perform any form of validation, and what error code to return in case of errors. The \"Provide a DoH Server\" section could be extended to clarify that.",
          "createdAt": "2020-06-19T16:14:32Z",
          "updatedAt": "2020-06-19T16:14:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Some text was added to address this in #167. Closing.",
          "createdAt": "2021-02-20T17:08:20Z",
          "updatedAt": "2021-02-20T17:08:20Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "MDU6SXNzdWU2NDg0NzY0MTE=",
      "title": "Advertise an odohkey-id in addition to the odohkey for oblivious DoH Discovery",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/101",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The current discovery of the designated DoH servers mentions the retrieval of the public key from the DoH server as the `odohkey` in the HTTPSSVC DNS record. The client retrieves a DNSSEC signed record and validates it. Additionally, it'd make sense to also have a hash of the odohkey available as the `odohkey-id` in the records so that the client can perform a check for `odohkey.KeyID() == odohkey-id` in addition to ensuring that these are DNSSEC signed records?",
      "createdAt": "2020-06-30T20:38:09Z",
      "updatedAt": "2020-10-06T12:10:57Z",
      "closedAt": "2020-10-06T12:10:57Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think this is necessary. If the KeyId is wrong, the target will fail to decrypt the query, and inform the client as such (with a generic error). Plus, with DNSSEC and a reliable transport like DoH used for fetching the key, malformed records are unlikely to arise. ",
          "createdAt": "2020-10-06T12:10:57Z",
          "updatedAt": "2020-10-06T12:10:57Z"
        }
      ]
    },
    {
      "number": 102,
      "id": "MDU6SXNzdWU2NDg0ODA4OTc=",
      "title": "Document how clients deal with oblivious DoH responses without Content-Type",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/102",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The current draft for the HTTP Response mentions that an Oblivious DoH response from the Oblivious Target MUST set the Content-Type HTTP header to the `application/oblivious-dns-message` for all successful responses where the body contains a DNS message encrypted with the client's symmetric key. I believe it should also provide specification to the client on how to deal with a response which doesn't have the specific `Content-Type` header set.",
      "createdAt": "2020-06-30T20:45:09Z",
      "updatedAt": "2020-07-11T03:44:57Z",
      "closedAt": "2020-07-11T03:44:57Z",
      "comments": []
    },
    {
      "number": 103,
      "id": "MDU6SXNzdWU2NTAxOTM4NzE=",
      "title": "Just a comment...  keydiscovery and tracking?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/103",
      "state": "OPEN",
      "author": "magicalo",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "Is it still possible to \"track\" the user by issuing a per-requestor public key from the Target server?  I presume a keydiscovery is done only once by a client (or infrequently enough that it can provide a tracking-vector).\r\n\r\nIf the above is accurate, would it be useful for a client to detect this case by doing keydiscovery more than once -- and/or -- have the client request this on some randomized basis to thwart such tracking techniques.\r\n\r\nIf I am totally misunderstanding this, I apologize in advance.\r\n\r\nIf I understood the role of the proxy correctly - the Proxy is terminating the DoH session and creating a new session to the Target.  This ensures IP privacy and crypto-privacy.  Correct?",
      "createdAt": "2020-07-02T20:43:48Z",
      "updatedAt": "2021-01-13T23:56:26Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The key is distributed in DNS records, like the TLS client hello key. Generally, the entity that serves up these DNS records to clients is a recursive that is entirely separate from the record owner, and the record is cached. Targeting one client shouldn\u2019t be feasible. This is even harder to do with DNSSEC. ",
          "createdAt": "2020-07-09T03:16:36Z",
          "updatedAt": "2020-07-09T03:16:36Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Sounds like mainly this can just have more explanation/discussion",
          "createdAt": "2021-01-13T23:56:26Z",
          "updatedAt": "2021-01-13T23:56:26Z"
        }
      ]
    },
    {
      "number": 104,
      "id": "MDU6SXNzdWU2NTAyODU5MDg=",
      "title": "Reference \"expires\" field in PvD document",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/104",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "See https://tools.ietf.org/html/draft-ietf-intarea-provisioning-domains-11.",
      "createdAt": "2020-07-03T01:40:16Z",
      "updatedAt": "2020-07-12T22:38:40Z",
      "closedAt": "2020-07-12T22:38:40Z",
      "comments": []
    },
    {
      "number": 108,
      "id": "MDU6SXNzdWU2NTQyNjIyNzI=",
      "title": "Detail out potential for flooding attacks or DoS from Proxies --> Targets",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/108",
      "state": "OPEN",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "I think it'd be a nice addition to the drafts' security considerations to mention about the possibility of flooding attacks or denial of service (DoS) attacks which could take place from the proxies. This situation could occur in various scenarios:\r\n1. Where the node running the proxy is compromised: The treatment for this should ideally be the same as a compromised client.\r\n2. When there are clients using a proxy to create a flooding attack by amplifying the same messages to different target resolvers. i.e.\r\n    - Malicious clients which issue the same information to multiple targets by changing the targethost & targetpath of the request. `https://proxy.odoh.example.com/dns-query?targethost=1.1.1.1&targetpath=/dns-query`\r\n    - An incorrect encryption of the dns Question cannot be detected until decrypted by the target which result in the target accepting the message, decrypting it and processing it under the failure conditions. A flood of such messages initiated by a compromised proxy themselves or through malicious client might overwhelm the targets.\r\n\r\nI think it'd be nice to suggest rate limiting as an approach to such attacks or explore the usage of transparency / monitoring approaches. \ud83d\ude04 ",
      "createdAt": "2020-07-09T18:27:06Z",
      "updatedAt": "2021-01-14T00:05:27Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 109,
      "id": "MDU6SXNzdWU2NTQzMDI4NjY=",
      "title": "[Privacy] Spell out the possible loss of privacy guarantees ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/109",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "The current implementation doesn't restrict users from using an Oblivious Proxy and an Oblivious Target run by the same organization. Doing so would allow the organization to put together the relevant information of the client by IP address and loses the privacy guarantees this was intended for.\r\n\r\nA user however could use the Proxy and Target provided by the same organization if the user trusts the organization with respect to deleting or not storing the Client IP address information or leaking it to trackers. Such usage depends heavily on the users' personal privacy model.\r\n\r\nI think it'd be nice to spell out these possible considerations in the draft for privacy guarantees and when ODOH would be effective.",
      "createdAt": "2020-07-09T19:40:46Z",
      "updatedAt": "2021-02-20T17:10:28Z",
      "closedAt": "2021-02-20T17:10:28Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is discussed in the security considerations where we discuss the model. (We assume the adversary can compromise P or T but not both.) Closing!",
          "createdAt": "2021-02-20T17:10:28Z",
          "updatedAt": "2021-02-20T17:10:28Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU2NTQzMDQ2NTM=",
      "title": "[Privacy] Detail the ideal expected way of usage for Oblivious DOH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/110",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The ideal expectation from users is to choose an Oblivious Proxy and an Oblivious Target from different organizations with the base assumption that both the organizations are independent and operate correctly or do not collude to match the client IP address at the proxy to the encrypted query.\r\n\r\nAs indicated in #109 as a broader issue, it is probably necessary to detail out this information and possibility of the privacy bets being off if both the proxy and target used belong to the same organization.",
      "createdAt": "2020-07-09T19:44:06Z",
      "updatedAt": "2020-10-06T12:13:31Z",
      "closedAt": "2020-10-06T12:13:31Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is covered in the security considerations, where we assume the adversary can compromise the proxy or target, but not both. (Compromising both is tantamount to colluding.)",
          "createdAt": "2020-10-06T12:13:31Z",
          "updatedAt": "2020-10-06T12:13:31Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "MDU6SXNzdWU2NTQzMDYxMjI=",
      "title": "[Privacy] Explicitly indicate the users' trust model when using ODOH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/111",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "It is implicit in the usage of ODOH infrastructure (proxy and target) that the user places an implicit trust in the proxy to anonymize and not propagate the client IP addresses to the target resolvers. I feel that this probably needs to be made explicit in the draft.",
      "createdAt": "2020-07-09T19:46:56Z",
      "updatedAt": "2021-02-22T03:53:24Z",
      "closedAt": "2021-02-22T03:53:24Z",
      "comments": []
    },
    {
      "number": 112,
      "id": "MDU6SXNzdWU2NTQzMDk0MTE=",
      "title": "Explore mechanisms to audit proxies or rank the proxies by their reliability/privacy guarantees",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/112",
      "state": "CLOSED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "odoh"
      ],
      "body": "This issue probably dovetails into the discovery mechanism of the proxies and targets in ODOH. In order to prevent flooding issues (#108) it's probably necessary to establish some means of trust in the proxies through transparency or monitoring similar to CT infrastructure which can indicate history of breaches/compromise, reliability/uptime of a proxy or a target.\r\n\r\nAn auditing based approach seems incredibly difficult for something like this but maybe there's a need for constant probing or honeypots? At a high level the problem seems to be the following:\r\n\r\n> How do we prove/disprove that the proxy is not sending client information elsewhere?",
      "createdAt": "2020-07-09T19:53:20Z",
      "updatedAt": "2021-01-13T23:56:22Z",
      "closedAt": "2021-01-13T23:56:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "While useful, this seems like a larger ecosystem question beyond the scope of the ODoH protocol, so I'm closing. ",
          "createdAt": "2021-01-13T23:56:22Z",
          "updatedAt": "2021-01-13T23:56:22Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "MDU6SXNzdWU2NTQzMjg5Mjg=",
      "title": "Detail out possible leakages of clients' public information in ODOH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/113",
      "state": "OPEN",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "I think it'd also be important to spell out a few more privacy constraints for users of ODOH.\r\n\r\n**Scenario 1**\r\n\r\nIf the Oblivious Target is operated by the ISP of the user/client, it becomes possible for the ISP to identify the users' ODOH query proxied to it based on the immediate connections to the IP address returned as a response.\r\n\r\nFor example: Let the client C make an oblivious DOH query to a proxy P operated by a third party which is forwarded to an Oblivious Target operated by the same ISP used by client C. The response of the DNS resolver sent to the client is known by the ISP and any immediate connections to the IP address returned as the response can be used to identify the client to the Oblivious query.\r\n\r\n**Scenario 2**\r\n\r\nIf the Oblivious Proxy is operated by the ISP of the user/client, it becomes possible for the ISP to identify the query of the user with a reasonable guarantee.\r\n\r\nFor example: Let the client C make an oblivious DOH query to a proxy P operated by their ISP and forwarded to an Oblivious Target (eg. Cloudflare). An immediate connection request to the address resolved after obtaining the response from the Oblivious Target flowing through the ISP can be used by the ISP to identify the query made by the client. \r\n\r\nThis is however, no different risk from currently adopted approaches where the ISPs can track the clients and the IP addresses which the clients attempt to access and create a map of IP addresses to hostnames to identify which websites or resources on the Internet the client is attempting to access. \r\n\r\nI believe it becomes important to identify and detail in the draft that -- ODOH poses no additional privacy risks in these scenarios.",
      "createdAt": "2020-07-09T20:30:10Z",
      "updatedAt": "2021-01-13T23:57:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU2NTg2MTQ2ODE=",
      "title": "Add tracking/cross-referencing",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/118",
      "state": "OPEN",
      "author": "JoGSal",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "draft-pauly-add-resolver-discovery\r\n\r\nIn the Introduction section\r\n\"privacy-sensitive clients might prefer to use an encrypted DNS service other than the one locally provisioned in order to prevent interception, profiling, or modification by entities other than the operator of the name service for the name being resolved\"\r\n\r\nTracking and cross-referencing of client's users are also actions that privacy-sensitive clients would want to avoid ",
      "createdAt": "2020-07-16T22:11:17Z",
      "updatedAt": "2021-01-13T23:53:20Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 119,
      "id": "MDU6SXNzdWU2NTg2MTc0NDA=",
      "title": "Editorial",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/119",
      "state": "OPEN",
      "author": "JoGSal",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "pvd"
      ],
      "body": "draft-pauly-add-resolver-discovery\r\n\r\nSection 3\r\n\"Validation using TLS certificates to confirm of domain name ownership...\"\r\nCould be changed to: Validation using TLS certificates to confirm (the) domain name ownership\r\n\r\nSection 3.3\r\n\"... provide information to validate of zone's designation without DNSSEC\"\r\nCould be changed to: provide information to validate zone's designation without DNSSEC\r\n\r\nPlease let me know if forking and editing the file for this type of things would be helpful/preferred",
      "createdAt": "2020-07-16T22:15:27Z",
      "updatedAt": "2021-01-23T00:50:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@JoGSal a pull request from a fork would be appreciated!",
          "createdAt": "2020-07-16T22:29:43Z",
          "updatedAt": "2020-07-16T22:29:43Z"
        },
        {
          "author": "JoGSal",
          "authorAssociation": "NONE",
          "body": "ok will do so in the future, thank you!",
          "createdAt": "2020-07-16T22:35:06Z",
          "updatedAt": "2020-07-16T22:35:06Z"
        }
      ]
    },
    {
      "number": 120,
      "id": "MDU6SXNzdWU2NTg2MjMwODU=",
      "title": "HTTP server push clarification",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/120",
      "state": "CLOSED",
      "author": "JoGSal",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "draft-pauly-add-resolver-discovery\r\n\r\nSection 3.2 \"servers MAY use HTTP Server Push to deliver the signed SVCB answers prior to requests being made\"\r\nWhat data would be in cleartext in HTTP server push requests?",
      "createdAt": "2020-07-16T22:24:32Z",
      "updatedAt": "2020-07-16T22:49:22Z",
      "closedAt": "2020-07-16T22:49:22Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This wouldn't be cleartext, but in the normal DoH connection. Is there something that mentions cleartext?",
          "createdAt": "2020-07-16T22:30:33Z",
          "updatedAt": "2020-07-16T22:30:33Z"
        },
        {
          "author": "JoGSal",
          "authorAssociation": "NONE",
          "body": "No, it was my mistaken interpretation of what delivering via HTTP server push would entail",
          "createdAt": "2020-07-16T22:36:22Z",
          "updatedAt": "2020-07-16T22:36:22Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "MDU6SXNzdWU2NjQwOTUwMzQ=",
      "title": "Add explicit key to indicate zone cuts",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/121",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "pvd"
      ],
      "body": "Within a DoH server's PvD configuration file, we should have an indication of the child zones that explicitly should not automatically be considered to designate the server, if any.\r\n\r\n```\r\n\"excludedDNSZones\": [\"other.example.com\"]\r\n```",
      "createdAt": "2020-07-22T22:46:39Z",
      "updatedAt": "2021-01-23T00:50:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 124,
      "id": "MDU6SXNzdWU2ODgyNDcyMjk=",
      "title": "Add alt-svc parameter for ODoH key distribution",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/124",
      "state": "CLOSED",
      "author": "tanyav2",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Currently, the ODoH spec states that public key distribution should be done via HTTPSSVC records, but doesn't detail any other information. Perhaps we can make some details concrete.\r\n\r\nThe `alt-svc` (an extension to the HTTPSSVC DNS record) parameter can be `odohkeys` in a similar vein as `esnikeys` mentioned here: https://tools.ietf.org/html/draft-nygren-httpbis-httpssvc-01#section-7.1 and the public key can be encoded in `base64` format similar to `esnikeys`.",
      "createdAt": "2020-08-28T17:44:47Z",
      "updatedAt": "2020-10-27T12:53:30Z",
      "closedAt": "2020-10-27T12:53:29Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The references actually need to be updated to https://tools.ietf.org/html/draft-ietf-dnsop-svcb-https-01. And yes, the keys should follow a similar format to `echconfig`.\r\n\r\n@chris-wood  thoughts?",
          "createdAt": "2020-08-28T18:56:45Z",
          "updatedAt": "2020-08-28T18:56:45Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps an `odohconfig` key and public key structure that matches `echconfig` would work?",
          "createdAt": "2020-08-28T21:11:40Z",
          "updatedAt": "2020-08-28T21:11:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is now resolved. Closing.",
          "createdAt": "2020-10-27T12:53:29Z",
          "updatedAt": "2020-10-27T12:53:29Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "MDU6SXNzdWU3MTQ5Nzg1MjA=",
      "title": "Default HPKE ciphersuite?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/128",
      "state": "CLOSED",
      "author": "FredericJacobs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Similarly to https://github.com/tlswg/draft-ietf-tls-esni/issues/251, should we have a default support ciphersuite?\r\n\r\n",
      "createdAt": "2020-10-05T16:14:50Z",
      "updatedAt": "2020-10-06T12:25:08Z",
      "closedAt": "2020-10-06T12:25:08Z",
      "comments": []
    },
    {
      "number": 131,
      "id": "MDU6SXNzdWU3MjE4MDMzNTY=",
      "title": "Whitelist -> Allowlist",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/131",
      "state": "OPEN",
      "author": "FredericJacobs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "Whitelist could be replaced with allow list to make the language of the spec more inclusive.\r\n\r\n```\r\nblacklist/whitelist (n., v.)\r\nDon\u2019t use. Instead, use an alternative that\u2019s appropriate to the context, such as deny list/allow list or unapproved list/approved list.\r\n```\r\nhttps://help.apple.com/applestyleguide/#/apsg1a3a0436?sub=apd9aaca4623",
      "createdAt": "2020-10-14T21:24:52Z",
      "updatedAt": "2021-01-13T23:52:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think this is only used on our older draft, which we may just remove. Thanks!",
          "createdAt": "2020-10-31T20:14:59Z",
          "updatedAt": "2020-10-31T20:14:59Z"
        }
      ]
    },
    {
      "number": 132,
      "id": "MDU6SXNzdWU3Mjk5NjYzODg=",
      "title": "Pin Oblivious DoH to HPKE-06",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/132",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's currently unspecified. Let's pin it at -06.",
      "createdAt": "2020-10-26T23:01:58Z",
      "updatedAt": "2020-10-27T00:28:11Z",
      "closedAt": "2020-10-27T00:28:11Z",
      "comments": [
        {
          "author": "tanyav2",
          "authorAssociation": "NONE",
          "body": "I would recommend leaving it pinned to the -05, because that corresponds to the current version of `rust-hpke`.",
          "createdAt": "2020-10-26T23:22:42Z",
          "updatedAt": "2020-10-26T23:22:42Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "That library will migrate. No sense in using a stale version!",
          "createdAt": "2020-10-26T23:25:53Z",
          "updatedAt": "2020-10-26T23:25:53Z"
        }
      ]
    },
    {
      "number": 135,
      "id": "MDU6SXNzdWU3MzAzODc0ODY=",
      "title": "Key rotation considerations",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/135",
      "state": "CLOSED",
      "author": "Lekensteyn",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "odoh",
        "ready for text"
      ],
      "body": "The current section on [public key discovery](https://tools.ietf.org/html/draft-pauly-dprive-oblivious-doh-02#section-5) defines how a client can discover a public key. However it does not describe how long this key can be used and behaviour around key rotation is unspecified.\r\n\r\nA legitimate use is key rotation in case of compromise, or regular key rotation to minimize the impact of key compromise.\r\n\r\n- What would a reasonable interval be for operators managing DNS and the target? 1 hour? 1 day? 1 week?\r\n- Should the DNS TTL be used as hint for expiry?\r\n- If a client uses a stale key and receives a 400 response, should it recover by fetching a new public key and retry? Or should the server respond with a different HTTP status code to distinguish key expiry from decryption errors?\r\n\r\nIf keys have to be fetched too often, it could create a tracking vector, similar to https://tools.ietf.org/html/draft-ietf-tls-esni-08#section-10.3\r\n",
      "createdAt": "2020-10-27T12:01:35Z",
      "updatedAt": "2021-02-20T17:26:15Z",
      "closedAt": "2021-02-20T17:26:14Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Similar to ECH, I expect clients to use the key for as long as it's valid according to the HTTPS record's TTL. That said, if a request yields an HTTP-level error, and not a DNS error a la NXDOMAIN, clients might fetch new HTTPS records to recover. (That particular bit is not specified, primarily because it seems to be a client policy decision.)\r\n\r\n@tfpauly, can you please confirm?",
          "createdAt": "2020-10-27T12:52:39Z",
          "updatedAt": "2020-10-27T12:52:39Z"
        },
        {
          "author": "Lekensteyn",
          "authorAssociation": "NONE",
          "body": "One potential issue with using TTL is that it could result in too frequent queries. The HTTPS record could contain ipv4/ipv6hints that could change more often while the echconfig could be valid for longer periods of time.\r\n\r\nShould the spec provide a guidance on the minimum validity time (say, one hour?) to avoid unnecessary refreshes?",
          "createdAt": "2020-12-08T10:57:32Z",
          "updatedAt": "2020-12-08T10:57:32Z"
        },
        {
          "author": "tanyav2",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just wanted to chime in that 401 is returned for a bad key, so it's a clear error that can be distinguished from other errors. Perhaps it makes sense for clients to refetch based on 401, but also add in a 1 hr minimum validity to the spec.",
          "createdAt": "2020-12-11T00:45:51Z",
          "updatedAt": "2020-12-11T00:45:51Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #165. Closing. ",
          "createdAt": "2021-02-20T17:26:14Z",
          "updatedAt": "2021-02-20T17:26:14Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "MDU6SXNzdWU3MzA1NzcwNTk=",
      "title": "[Privacy] Malicious oDoH target can learn the client's IP address through an active attack",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/136",
      "state": "OPEN",
      "author": "skepticfx",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "_Not entirely sure how this fits in the threat model, but I thought it is worth documenting this scenario so implementations can pay attention._ \r\n\r\n### Attack\r\nAn oDoH target can abuse the round-robin mechanism in the client's transport implementations(TCP, UDP transports, etc.)\r\n\r\nA DNS response for a query type=A can contain multiple answers,\r\n```\r\n$ dig website.com +short\r\n172.67.27.106\r\n104.22.67.195\r\n104.22.66.195\r\n```\r\n\r\nAs a malicious oDoH target, it gets to decide the number of answer records and the value in those answers. In the example above, the DNS query(Q=website.com) has 3 IP addresses in the response. Instead, the oDoH target can respond with (A+1) IP addresses, where the oDoH target controls the new answer(say X).\r\n\r\nIn an active attack, this would look like - \r\n```\r\n$ dig website.com +short\r\nX=<ip-address-controlled-by-oDoH-target>\r\n172.67.27.106\r\n104.22.67.195\r\n104.22.66.195\r\n```\r\n\r\nDepending on the client's implementation of the DNS round-robin, the client would first Dial(X) before the other set of answers in A. The server at the IP address(X) serving this request would timeout but note the client's IP address. The oDoH target can now learn the client's IP address and the corresponding DNS query.\r\n\r\n### Mitigations\r\nSince this is an active attack, it is possible to use external monitoring to ensure the oDoH target behaves as expected. ",
      "createdAt": "2020-10-27T15:49:23Z",
      "updatedAt": "2021-01-14T00:05:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Lekensteyn",
          "authorAssociation": "NONE",
          "body": "Similar considerations from DoH apply to ODoH. In particular, from https://tools.ietf.org/html/rfc8484#section-9\r\n\r\n>   The HTTPS connection provides transport security for the interaction\r\n>   between the DoH server and client, but it does not provide the\r\n>   response integrity of DNS data provided by DNSSEC.\r\n\r\nIn case of ODoH, it provides privacy to the client, but response integrity should be out-of-scope.",
          "createdAt": "2020-10-27T17:18:47Z",
          "updatedAt": "2020-10-27T17:18:47Z"
        },
        {
          "author": "skepticfx",
          "authorAssociation": "NONE",
          "body": "I think the DoH security promise makes sense. From the DoH(https://tools.ietf.org/html/rfc8484) abstract,\r\n\r\n>    This document defines a protocol for sending DNS queries and getting\r\nDNS responses over HTTPS.  Each DNS query-response pair is mapped\r\ninto an HTTP exchange.\r\n\r\nReading the ODoH(https://www.ietf.org/id/draft-pauly-dprive-oblivious-doh-02.html) abstract,\r\n\r\n> This document describes an extension to DNS Over HTTPS (DoH) that **allows hiding client IP addresses** via proxying encrypted DNS transactions. This improves privacy of DNS operations by **not allowing any one server entity to be aware of both the client IP address and the content of DNS queries and answers.**\r\n\r\nI feel it is at-least worth noting down how the lack of DNSSEC or integrity verification diminishes the privacy promises ODoH provides.",
          "createdAt": "2020-10-27T20:19:17Z",
          "updatedAt": "2020-10-27T20:19:17Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "MDU6SXNzdWU3MzA2MjA1NzM=",
      "title": "[Privacy] Add details about proxy connection management to minimize tracking",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/137",
      "state": "OPEN",
      "author": "skepticfx",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "### Issue\r\n\r\nA malicious oDoH target can track a given client depending on how the oDoH proxy manages connections between clients and the target. In cases where the proxy creates a dedicated, long-lived connection with the target - it is possible for the target to track the client and its corresponding DNS query without actually learning the client's IP address.\r\n \r\n### Mitigation\r\n\r\nIt so happens that the proxy connection management is a useful topic for performance reasons. And it is intuitive to not establish a dedicated connection(between the proxy and target) for each client to save resources on the proxy's side. Thus by multiplexing connections between the proxy and the target and by choosing a connection randomly for each query would mitigate this attack. ",
      "createdAt": "2020-10-27T16:40:30Z",
      "updatedAt": "2021-01-13T23:52:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 139,
      "id": "MDU6SXNzdWU3MzM3OTk3NDI=",
      "title": "DEER: Work on abstract",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/139",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "The DEER abstract should describe more of the scope (likely more succinctly)",
      "createdAt": "2020-10-31T20:15:51Z",
      "updatedAt": "2020-11-02T05:24:26Z",
      "closedAt": "2020-11-02T05:24:26Z",
      "comments": []
    },
    {
      "number": 140,
      "id": "MDU6SXNzdWU3MzM4MDAxMjE=",
      "title": "DEER: Mention cases where name is provisioned",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/140",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We describe how we can use names to go from encrypted resolver to another encrypted protocol. But if the user typed in a name or DHCP gave a name, we can use that too. It's actually a nice solution for the local case.",
      "createdAt": "2020-10-31T20:18:04Z",
      "updatedAt": "2020-11-02T15:07:03Z",
      "closedAt": "2020-11-02T15:07:03Z",
      "comments": []
    },
    {
      "number": 143,
      "id": "MDU6SXNzdWU3MzY0MTM0Nzg=",
      "title": "DEER: Reference threat model",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/143",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "A. Security design\r\n> \"In order to be considered an authenticated Equivalent Encrypted Resolver, the TLS certificate presented by the Encrypted Resolver MUST contain both the domain name (from the SVCB answer) and the IP address of its equivalent Unencrypted Resolver\"\r\n\r\nRequiring the certificate to cover the TargetName is unusual.  Why does it help for the certificate to contain this domain name, if it is also required to authenticate or match the DNS server IP?  Is a nontrivial TargetName always required?\r\n\r\n> \"An attacker might try to direct Encrypted DNS traffic to itself by causing the client to think that a discovered Equivalent Encrypted Resolver uses a different IP address from the Unencrypted Resolver.\"\r\n\r\nIt seems like you are contemplating an attacker who controls the DNS path but not the RA/DHCP path.  I'd appreciate seeing a few more words on that beyond the current reference to RA protection.\r\n\r\nIn general, some text on threat modeling might help to justify the design decisions.",
      "createdAt": "2020-11-04T20:47:52Z",
      "updatedAt": "2021-02-22T21:33:37Z",
      "closedAt": "2021-02-22T21:33:37Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Partly, I\u2019m imagining we can rely on or take some of the threat modeling text from the requirements document here. However, I agree that that should be referenced or included.",
          "createdAt": "2020-11-04T20:47:58Z",
          "updatedAt": "2020-11-04T20:47:58Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "NONE",
          "body": "I think that for equivalence, it is sufficient to include just the ipAddress SAN.  Clients have to have a single target identity to match, or it gets a little tricky.\r\n\r\nThis assumes that the provenance of the IP is somehow not subject to attack.  This includes DHCP/RA, manual configuration, and other forms of configuration like enterprise policy systems.\r\n\r\nBut it's not really that.  This isn't about establishing whether the IP address is the right one, it's about saying affirmatively that this is the same as this other thing.  For that, you don't need to worry about where the IP address came from.  Of course, this is a stronger assertion regarding the DoT/DoH server than you can make about the Do53 server.  The former is authenticated; the latter relies on the integrity of the route.",
          "createdAt": "2020-11-05T01:33:17Z",
          "updatedAt": "2020-11-05T01:33:17Z"
        },
        {
          "author": "vparla",
          "authorAssociation": "NONE",
          "body": "One question I have is the embedding of IP addresses in certificates at all.  In a world of migrating workloads on generic compute, it is not unreasonable to expect that DoH servers might not occupy a fixed IP address necessarily.  While it can be accomplished with Anycast addressing, NATing or Loadbalancing schemes, I still have some reservations about the construct in general.  Maybe I am missing something obvious here.",
          "createdAt": "2020-11-05T01:50:18Z",
          "updatedAt": "2020-11-05T01:50:18Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue migrated to DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/4",
          "createdAt": "2021-02-22T21:33:37Z",
          "updatedAt": "2021-02-22T21:33:37Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "MDU6SXNzdWU3MzY0MTM4MzI=",
      "title": "DEER: Describe opportunistic interaction with probing port 853",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/144",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "From Ben: I would appreciate a sentence on how the opportunistic mode interacts with \"probe port 853 for DoT\".",
      "createdAt": "2020-11-04T20:48:27Z",
      "updatedAt": "2021-01-25T18:35:47Z",
      "closedAt": "2021-01-25T18:35:46Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This should be combined into #163 ",
          "createdAt": "2021-01-25T18:35:46Z",
          "updatedAt": "2021-01-25T18:35:46Z"
        }
      ]
    },
    {
      "number": 145,
      "id": "MDU6SXNzdWU3MzY0MTQwNjU=",
      "title": "Clarify use of address hints ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/145",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "From Ben: \r\n> \"These address hints ... avoid additional DNS lookup for the A and AAAA records of the Encrypted Resolver name.\"\r\n\r\nStrictly speaking, a compliant SVCB client is expected to perform the additional lookups anyway.  The hints just avoid a delay while those queries complete.  If you think it's important to \"skip\" those followup queries, we would have to make a deeper change.  Otherwise, you could say \"avoid *waiting for* DNS lookup...\".",
      "createdAt": "2020-11-04T20:48:55Z",
      "updatedAt": "2021-02-22T21:35:42Z",
      "closedAt": "2021-02-22T21:35:42Z",
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue migrated to DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/5",
          "createdAt": "2021-02-22T21:35:42Z",
          "updatedAt": "2021-02-22T21:35:42Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "MDU6SXNzdWU3MzY5ODU5MDA=",
      "title": "Clarification...",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/146",
      "state": "CLOSED",
      "author": "vparla",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "If the Equivalent Encrypted Resolver has a different IP address than the Unencrypted Resolver and the TLS certificate does not cover the Unencrypted Resolver address, the client MUST NOT use the discovered Encrypted Resolver. Additionally, the client SHOULD suppress any further queries for Equivalent Encrypted Resolvers using this Unencrypted Resolver for the length of time indicated by the SVCB record's Time to Live (TTL).\r\n\r\nIt would be good to explicitly clarify what attack vector this approach is defending against.",
      "createdAt": "2020-11-05T14:33:32Z",
      "updatedAt": "2020-11-05T14:37:48Z",
      "closedAt": "2020-11-05T14:37:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is described in the security considerations already:\r\n\r\nAn attacker might try to direct Encrypted\r\n   DNS traffic to itself by causing the client to think that a\r\n   discovered Equivalent Encrypted Resolver uses a different IP address\r\n   from the Unencrypted Resolver.  Such an Encrypted Resolver might have\r\n   a valid certificate, but be operated by an attacker that is trying to\r\n   observe or modify user queries without the knowledge of the client or\r\n   network.",
          "createdAt": "2020-11-05T14:37:48Z",
          "updatedAt": "2020-11-05T14:37:48Z"
        }
      ]
    },
    {
      "number": 148,
      "id": "MDU6SXNzdWU3NDY2OTY5MDk=",
      "title": "Update HPKE to draft-06",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/148",
      "state": "CLOSED",
      "author": "tanyav2",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Peter Wu noted that the draft uses [HPKE draft-05](https://tools.ietf.org/html/draft-pauly-dprive-oblivious-doh-02#ref-I-D.irtf-cfrg-hpke). Given that both implementations the go and rust implementations of HPKE now support HPKE draft-06, it makes sense to update the hpke version to draft-06.\r\n\r\n@Lekensteyn\r\n@chris-wood ",
      "createdAt": "2020-11-19T15:43:49Z",
      "updatedAt": "2020-11-20T03:26:45Z",
      "closedAt": "2020-11-19T16:09:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is already done: https://tfpauly.github.io/draft-pauly-adaptive-dns-privacy/draft-pauly-dprive-oblivious-doh.html#section-10",
          "createdAt": "2020-11-19T16:09:52Z",
          "updatedAt": "2020-11-19T16:09:52Z"
        },
        {
          "author": "Lekensteyn",
          "authorAssociation": "NONE",
          "body": "Is there a timeline for releasing draft -03?",
          "createdAt": "2020-11-19T16:10:25Z",
          "updatedAt": "2020-11-19T16:10:25Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll cut a new version today. @tfpauly, any objections?",
          "createdAt": "2020-11-19T16:14:17Z",
          "updatedAt": "2020-11-19T16:14:17Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood go for it!",
          "createdAt": "2020-11-20T03:26:44Z",
          "updatedAt": "2020-11-20T03:26:44Z"
        }
      ]
    },
    {
      "number": 149,
      "id": "MDU6SXNzdWU3NDcwNTQ1NTc=",
      "title": "[ODoH] Add EDNS(0) client subnet guidance",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/149",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "Clients technically can send their subnet in encrypted queries, if they want rough geo-based responses from targets. We should at least discuss this, given recent feedback on the topic during IETF 109.",
      "createdAt": "2020-11-20T01:02:57Z",
      "updatedAt": "2021-02-20T17:11:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is technically already allowed, just needs to be spelled out.",
          "createdAt": "2021-01-13T23:52:12Z",
          "updatedAt": "2021-01-13T23:52:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly can you propose text for this?",
          "createdAt": "2021-02-20T17:11:36Z",
          "updatedAt": "2021-02-20T17:11:36Z"
        }
      ]
    },
    {
      "number": 150,
      "id": "MDU6SXNzdWU3NDkyMDA2NTM=",
      "title": "Promote proxy URI template ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/150",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "odoh"
      ],
      "body": "It's hidden in an example, and probably needs to be made more clear. We could also use some discussion about proxies using this template to forward, vs more typical web proxies forwarding to targets. ",
      "createdAt": "2020-11-23T23:24:55Z",
      "updatedAt": "2021-02-20T17:07:37Z",
      "closedAt": "2021-02-20T17:07:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is described in section 4.1, but happy to highlight even more:\n\nOblivious DoH queries are created by the Client, and sent to the Proxy. Requests to the Proxy indicate which DoH server to use as a Target by specifying two variables: \"targethost\", which indicates the host name of the Target server, and \"targetpath\", which indicates the path on which the Target's DoH server is running. See Section 4.2 for an example request.",
          "createdAt": "2020-11-23T23:39:35Z",
          "updatedAt": "2020-11-23T23:39:35Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, since this is probably fine for now.",
          "createdAt": "2021-02-20T17:07:36Z",
          "updatedAt": "2021-02-20T17:07:36Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "MDU6SXNzdWU3NTM3NDc3NDY=",
      "title": "ODoH: Failure status codes",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/151",
      "state": "CLOSED",
      "author": "tanyav2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Starting a discussion to figure out reasonable failure modes of the server:\r\n\r\n1. Query cannot be deserialized into an `ObliviousDoHMessage` \r\n2. Unknown key ID of query \r\n3. Query cannot be parsed into a valid `ObliviousDoHQueryBody` (wrong message type, invalid tag while decrypting, other decryption failure etc)\r\n4. DNS query resolution fails by the resolver\r\n5. Response message cannot be created (this is an internal server error and should have nothing to do with the client)\r\n\r\nI think we can give (1) and (3) the same error code 400, (4) can be 200 because for `NXDOMAIN` or `SERVFAIL`, DoH still serves 200, (5) can be 500, (2) can be 401 (which is used for invalid username/password). \r\n\r\n@tfpauly @chris-wood ",
      "createdAt": "2020-11-30T19:38:12Z",
      "updatedAt": "2020-12-01T04:52:18Z",
      "closedAt": "2020-12-01T04:52:18Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This sounds like a reasonable plan. I think the key error here is the one for (2), since that represents the case where a client has a stale key.",
          "createdAt": "2020-11-30T20:20:12Z",
          "updatedAt": "2020-11-30T20:20:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The adjusted errors look good to me. (I had concerns about lumping 1+3 in with 4, but that's fixed.)",
          "createdAt": "2020-11-30T20:23:51Z",
          "updatedAt": "2020-11-30T20:23:51Z"
        },
        {
          "author": "tanyav2",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Great, I'll make a PR to update the draft.",
          "createdAt": "2020-11-30T21:01:40Z",
          "updatedAt": "2020-11-30T21:01:40Z"
        }
      ]
    },
    {
      "number": 154,
      "id": "MDU6SXNzdWU3NjE3NDIzMjI=",
      "title": "Check for bad dns request in the protocol",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/154",
      "state": "CLOSED",
      "author": "tanyav2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Currently, a bad DNS request, note, *not* a DNS request that returns something like `NXDOMAIN`, just a straight up bad request like say `dns_msg = [1]`, returns a generic 400. Checking for this is something that can be done client side. Currently, creating a new `ObliviousDoHQueryBody` just takes in a string of bytes, without bothering to check if this is even a valid DNS message: https://docs.rs/odoh-rs/0.1.5/odoh_rs/protocol/struct.ObliviousDoHQueryBody.html#method.new \r\n\r\nWhat is the consensus on adding a check for this in the protocol? \r\n\r\ncc @chris-wood @tfpauly ",
      "createdAt": "2020-12-11T00:28:18Z",
      "updatedAt": "2020-12-12T16:49:14Z",
      "closedAt": "2020-12-12T16:49:14Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@tanyav2 I don't quite follow the proposal\u2014is this about checking on the client library to ensure that it's not sending garbage? While I think that's good for an implementation, it doesn't seem like an item for the spec.",
          "createdAt": "2020-12-11T00:31:57Z",
          "updatedAt": "2020-12-11T00:31:57Z"
        },
        {
          "author": "tanyav2",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, adding a check in the protocol library (not client library) to ensure that it isn't receiving garbage. I wasn't sure if such a check should be added in the protocol implementation if it wasn't in the actual protocol spec.",
          "createdAt": "2020-12-11T00:39:06Z",
          "updatedAt": "2020-12-11T00:39:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. This seems like an implementation issue, not a protocol issue. Closing as such.",
          "createdAt": "2020-12-12T16:49:14Z",
          "updatedAt": "2020-12-12T16:49:14Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "MDU6SXNzdWU3NjI0NDc4MjM=",
      "title": "DEER caching text",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/155",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "The text says\r\n\r\n> If a caching forwarder consults multiple resolvers, it may be possible for it to cache records for the \"resolver.arpa\" Special Use Domain Name (SUDN) for multiple resolvers.\r\n\r\nThis is not true of any reasonable forwarder.  RRsets are atomic collections, and cannot be mixed from multiple sources.  Doing so would entirely break DNSSEC, for example.  Unless you know of a forwarder that exhibits this seriously broken behavior, I don't think it bears mentioning.",
      "createdAt": "2020-12-11T15:07:40Z",
      "updatedAt": "2021-02-22T21:37:14Z",
      "closedAt": "2021-02-22T21:37:14Z",
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue migrated to DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/6",
          "createdAt": "2021-02-22T21:37:14Z",
          "updatedAt": "2021-02-22T21:37:14Z"
        }
      ]
    },
    {
      "number": 156,
      "id": "MDU6SXNzdWU3NjQwNDE5OTI=",
      "title": "Recommend limits",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/156",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "odoh",
        "ready for text"
      ],
      "body": "The `ObliviousDoHMessage` format is quite flexible in how large the `key_id` and `encrypted_message` values are:\r\n\r\n~~~\r\n   struct {\r\n      uint8  message_type;\r\n      opaque key_id<0..2^16-1>;\r\n      opaque encrypted_message<1..2^16-1>;\r\n   } ObliviousDoHMessage;\r\n~~~\r\n\r\nWe should recommend that proxies and targets enforce reasonable limits for these. For example, no DNS query will bump against the 2^16-1 length limit. \r\n\r\nWhile we're here, we should probably also reduce `key_id`'s allotted length to a single byte. ",
      "createdAt": "2020-12-12T16:48:11Z",
      "updatedAt": "2021-02-19T19:22:52Z",
      "closedAt": "2021-02-19T19:22:52Z",
      "comments": [
        {
          "author": "tanyav2",
          "authorAssociation": "CONTRIBUTOR",
          "body": "[XDR](https://tools.ietf.org/html/rfc4506) which seems to be the standard wireformat encoding says that `opaque` fields must have a 2 byte length encoding. ",
          "createdAt": "2020-12-15T23:48:41Z",
          "updatedAt": "2020-12-15T23:48:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We use TLS encoding here, for what it's worth. We're not bound to any XDR-related rules.",
          "createdAt": "2020-12-15T23:50:24Z",
          "updatedAt": "2020-12-15T23:50:24Z"
        },
        {
          "author": "tanyav2",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ah, I wasn't aware that was a separate encoding.",
          "createdAt": "2020-12-16T03:16:43Z",
          "updatedAt": "2020-12-16T03:16:43Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood I'm fine with specifying limits on the value, but I think it's fine to leave the length fields being 2 bytes for consistency.",
          "createdAt": "2020-12-16T22:01:21Z",
          "updatedAt": "2020-12-16T22:01:21Z"
        }
      ]
    },
    {
      "number": 157,
      "id": "MDU6SXNzdWU3NjgzMTEwMDc=",
      "title": "Require proxies to passthrough HTTP error codes from target",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/157",
      "state": "CLOSED",
      "author": "tanyav2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "odoh",
        "ready for text"
      ],
      "body": "We should require proxies to pass through any error codes received from the target back to the client. This will make it much easier for the client to interpret what went wrong with their query, such as a connection failure to target, or a bad key id (401) etc. Currently, all this valuable debugging information could potentially be lost.\r\n\r\nOne could also make the case that these failure should be distinguished from failure codes of the proxy itself, so if a request appears reasonable to the proxy, but the target returns, say a 401, the proxy should send back a 200, but I'm not sure requiring the client to parse the response for a 401 makes sense. That is, unless we have a fixed format that the proxy returns which includes the target's error code.\r\n\r\ncc @chris-wood @tfpauly ",
      "createdAt": "2020-12-15T23:53:43Z",
      "updatedAt": "2021-01-26T14:31:20Z",
      "closedAt": "2021-01-26T14:31:20Z",
      "comments": []
    },
    {
      "number": 159,
      "id": "MDU6SXNzdWU3NjkzNjA0Mjk=",
      "title": "[ODoH] Client bootstrapping concerns. How should client obtain T's SVCB/HTTPS records?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/159",
      "state": "OPEN",
      "author": "dmcardle",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss",
        "odoh"
      ],
      "body": "Is it fair to say the goal is that the attacker cannot link clients to corresponding (query, answer) pairs, even when one of proxy P or target T is compromised?\r\n\r\nGiven that goal, let's do a case analysis to determine how the client should obtain T's SVCB/HTTPS records.\r\n\r\n**Case 1: client queries target T for T's SVCB/HTTPS records.**\r\n\r\nIf target T is compromised, it could serve a unique public key to each client and record the client's IP address. When T receives proxied queries from P, it can quickly recover the client's original IP address based on `ObliviousDoHMessage.key_id`. The attacker achieved linkability.\r\n\r\n**Case 2: client queries proxy P for T's SVCB/HTTPS records.**\r\n\r\nIf proxy P is compromised, it could generate its own HPKE keypair(s) and serve the public key to the client. The client would dutifully encrypt queries for the attacker, who can trivially decrypt them. Since P can directly observe the client's IP address, the attacker has achieved linkability.\r\n\r\n**Case 3: client queries a third-party resolver (neither P nor T) for T's SVCB/HTTPS records.**\r\n\r\nI think this is what we'd want the client to do, as it's the only case that requires multiple parties to be compromised (or collusion).\r\n\r\nFYI @ericorth @davidben",
      "createdAt": "2020-12-16T23:58:57Z",
      "updatedAt": "2021-03-11T03:31:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "Are you assuming a non-DNSSEC-validating stub resolver?",
          "createdAt": "2020-12-17T02:06:25Z",
          "updatedAt": "2020-12-17T02:06:25Z"
        },
        {
          "author": "dmcardle",
          "authorAssociation": "NONE",
          "body": "If the attacker has access to the compromised host's private key material, it could just forge new DNSSEC-validating records, right?\r\n\r\nThis is one of the assumptions made in the Security Considerations section.\r\n\r\n> Once compromised, the attacker has access to all session information and private key material.",
          "createdAt": "2020-12-17T02:44:36Z",
          "updatedAt": "2020-12-17T02:44:36Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> If the attacker has access to the compromised host's private key material, it could just forge new DNSSEC-validating records, right?\r\n\r\nIf that includes the DNSSEC private keys, then yeah, that seems right. I think the text you quoted from the considerations is more about the TLS keying material. \r\n\r\nAnyway, to the main comment (and thanks for reading and filing an issue!), I think something along the lines of (2) or (3) is a reasonable deployment story for applications that aren't willing to fetch the configs from DNS. (There are [reasonable concerns](https://www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_lian.pdf) with the DNSSEC requirement as-is.) I really don't want to impose any sort of transparency requirements on the system.\r\n\r\nWe certainly need to nail down the key management and discovery story here. :-)",
          "createdAt": "2020-12-17T14:27:34Z",
          "updatedAt": "2020-12-17T14:27:34Z"
        },
        {
          "author": "dmcardle",
          "authorAssociation": "NONE",
          "body": "> I think something along the lines of (2) or (3) is a reasonable deployment story for applications that aren't willing to fetch the configs from DNS\r\n\r\nI think we're on the same page now. Could you clarify the part about applications that aren't willing to fetch configs from DNS? I was imagining this bootstrapping step is just a DoH query to some resolver: P, T, or other.\r\n\r\nUpon further thought, the problem I described in case 2 (bootstrapping from P) *does* rely on a non-DNSSEC-validating stub resolver. If only P is compromised, the attacker cannot forge T-signed records.\r\n\r\nBut I believe case 1 (bootstrapping from T) remains a bad idea because a compromised T can forge/sign records for itself, if we believe the DNSSEC private keys are compromised as well.",
          "createdAt": "2020-12-17T21:50:41Z",
          "updatedAt": "2020-12-17T21:50:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Could you clarify the part about applications that aren't willing to fetch configs from DNS? I was imagining this bootstrapping step is just a DoH query to some resolver: P, T, or other.\r\n\r\nSorry, I was referring to case (1) here, wherein the the client knows the target it wants to use and, as you say, just sends a DoH query directly to it. ",
          "createdAt": "2020-12-19T15:13:00Z",
          "updatedAt": "2020-12-19T15:13:00Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "I agree case (1) seems very problematic for key retrieval.  As you say, not a whole lot to stop T from issuing a key unique to the client IP, thus breaking the primary intended privacy protections of ODoH.\r\n\r\nBut a related topic that I've been thinking about lately (apologies if this is sidetracking the conversation too far): Is a direct query to T for its key useful purely as a validation step? Say you have a non-DNSSEC-validating stub.  Would it be reasonable for that stub to use case (2) or (3) to retrieve an unvalidated key and then validate it by using case (1) and ensuring the key matches that received from (2) or (3)? Assuming a sufficiently high amount of usage and caching through P or Other, it seems it would be impractical for T to then assign a unique key to the client.  It would have to be something usable by everybody else getting the key from P or Other.  Then it seems the only extra information T would acquire is the knowledge that the client is potentially one of its clients, but T would not know which specific Oblivious queries were coming from that client.",
          "createdAt": "2020-12-22T23:03:21Z",
          "updatedAt": "2020-12-22T23:03:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I agree case (1) seems very problematic for key retrieval. As you say, not a whole lot to stop T from issuing a key unique to the client IP, thus breaking the primary intended privacy protections of ODoH.\r\n\r\nThis isn't quite right. Note that all this does is reveal the IP to the resolver for the purposes of retrieving a key. The \"primary intended privacy protections\" of ODoH are to break query<->client linkability which occurs *after* the key has been fetched. Hiding which clients are interested in using the target is not (yet) an explicit goal. If it were, I'd agree that (1) is probably not what we want. \r\n\r\nWhether or not revealing the IP to the resolver during bootstrapping is desirable is obviously up to clients to decide, but I think it's important to note the distinction here. (The sort of \"validation\" step you propose would require this retrieval.)\r\n\r\nIn any case, something beyond (1) will likely be needed.",
          "createdAt": "2020-12-22T23:13:54Z",
          "updatedAt": "2020-12-22T23:13:54Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "But if the client goes directly to the target (and only to the target) for the key and the target gives a client-unique key, then the query<->client linkability could be discovered.  The target then just has to record a client<->key mapping and knows which client is being dealt with for each key seen in queries.\r\n\r\nAs opposed to the validation idea above where the key is also retrieved from another party.  If that successfully forces a non-unique key, then I think it is true that the target only discovers clients likely to be using the target but probably not which queries that client is making.",
          "createdAt": "2020-12-22T23:29:54Z",
          "updatedAt": "2020-12-22T23:30:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> But if the client goes directly to the target (and only to the target) for the key and the target gives a client-unique key, then the query<->client linkability could be discovered.\r\n\r\nSure, but given caching, non-zero TTLs, and DNSSEC, this type of tagging is probably non trivial. (Privacy Pass also has this annoying problem, but they opted to solve the problem differently.) I think the system should allow clients to implement any of the variants above. And I think it does now, but certainly more work is needed here!",
          "createdAt": "2020-12-22T23:36:18Z",
          "updatedAt": "2020-12-22T23:36:18Z"
        },
        {
          "author": "ericorth",
          "authorAssociation": "NONE",
          "body": "I don't see how caching, non-zero TTLs, or DNSSEC help in any way when you're talking about a DoH connection directly between the stub and the DoH server intended as the Oblivious target as is the case for case (1).  There's nothing between the two parties to cache anything and the target is the legitimate controller of the DNSSEC private keys.\r\n\r\nNow if you're talking keys retrieved indirectly from a third party (either the proxy or a separate DNS server) as is the case for cases (2) and (3), then yes, I agree that those factors would make tagging impractical for the common well-used-resolver case.",
          "createdAt": "2020-12-22T23:50:40Z",
          "updatedAt": "2020-12-22T23:50:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> target is the legitimate controller of the DNSSEC private keys.\r\n\r\nI think this is where we may diverge, but nevertheless, this all seems very much deployment, configuration, etc specific. ",
          "createdAt": "2020-12-22T23:56:01Z",
          "updatedAt": "2020-12-22T23:57:10Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "In general, I agree that (3) is the right model. We need to have the keys available in some public, shared location that isn't directly part of the datapath for the proxy or the target. ",
          "createdAt": "2021-03-11T03:31:21Z",
          "updatedAt": "2021-03-11T03:31:21Z"
        }
      ]
    },
    {
      "number": 160,
      "id": "MDU6SXNzdWU3ODE1MTcwNDk=",
      "title": "DEER: Clarification of SUDN",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/160",
      "state": "CLOSED",
      "author": "awfulhak",
      "authorAssociation": "NONE",
      "assignees": [
        "mstojens"
      ],
      "labels": [
        "deer"
      ],
      "body": "The Special Use Domain Name (SUDN) ```resolver.arpa``` needs more clarification.  Specifically:\r\n- Queries against the ```.arpa``` nameservers\r\n  The draft should mention that ```.arpa``` is a delegated zone, currently served by the root nameservers.  Clients that query a resolver that is unaware of this requirement will \"leak\" queries to the root nameservers.\r\n- When ```_dns.resolver.arpa/SVCB``` is not present in a resolver configuration\r\n  Section 6.1 discusses how a forwarder should behave and suggests that results should not be cached other than for Equivalent Encrypted Resolvers under their control.  How is that determined?\r\n  There is no discussion around a non-forwarding resolver's behaviour.  Should it return NODATA?\r\n  Forwarding queries to ```_dns.resolver.arpa/SVCB``` will attempt to attach a client to an upstream resource's equivalent resolver.  If that equivalent resolver's cert doesn't include the forwarder, the client must reject the answer.  Is it not therefore the case that the forwarder caching behaviour is irrelevant?  All valid responses to this query must be equivalent to the forwarder itself.\r\n- When ```_dns.resolver.arpa/SVCB``` is present in a resolver configuration\r\n  I would suggest some clarification wording something like this: The expectation is that this record set will detail equivalent resolvers.  A client that chooses not to interact with any of these equivalent resolvers SHOULD continue to use the unencrypted resolver, honouring the SVCB TTL.  When the SVCB TTL expires, the client may choose to re-query in an attempt to discover newly available equivalents.\r\n\r\nI would suggest (prefer?) changing the SUDN behaviour so that queries against it are __never__ sent upstream.  Resolvers (and forwarders) that do not have a configured ```_dns.resolver.arpa/SVCB``` RRset should return NODATA.  This would mean that ```resolver.arpa``` SUDN RRsets are always specific to the IP queried.",
      "createdAt": "2021-01-07T18:26:40Z",
      "updatedAt": "2021-02-22T21:41:01Z",
      "closedAt": "2021-02-22T21:41:01Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "It may be good to model the advice after RFC8880, which defines ipv4only.arpa.",
          "createdAt": "2021-01-12T17:41:17Z",
          "updatedAt": "2021-01-12T17:41:17Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@mstojens can you help look at this?",
          "createdAt": "2021-01-12T17:41:32Z",
          "updatedAt": "2021-01-12T17:41:32Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue migrated to DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/7",
          "createdAt": "2021-02-22T21:41:01Z",
          "updatedAt": "2021-02-22T21:41:01Z"
        }
      ]
    },
    {
      "number": 161,
      "id": "MDU6SXNzdWU3ODE4NzEwMjI=",
      "title": "Clarification of expectations in certain NAT environments",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/161",
      "state": "CLOSED",
      "author": "vparla",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "It would be helpful if there was a paragraph that described what the expected behavior is in certain NAT scenarios.\r\n\r\nSince the IP address must be embedded in the TLS certificate, certain NAT scenarios could present a problem for this approach.\r\n\r\nFor example, if the assigned DNS IP addresses via DHCP are not the actual IP address(es) associated with the DNS service, there could be an issue.  How would such a deployment scenario be addressed? \r\n",
      "createdAt": "2021-01-08T06:03:47Z",
      "updatedAt": "2021-02-22T21:44:37Z",
      "closedAt": "2021-02-22T21:44:37Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Certainly worth a paragraph or note.\r\n\r\n@vparla can you clarify exactly which NAT scenarios you're considering here? If the client is behind a NAT reaching out to a DNS resolver that is not behind the NAT, the client presumably is reaching out to the \"real\" IP address of the resolver. If the resolver is behind the NAT with the client, then that seems to be a case in which we'd expect it to simply have the same address as the unencrypted resolver?",
          "createdAt": "2021-01-12T17:44:30Z",
          "updatedAt": "2021-01-12T17:44:30Z"
        },
        {
          "author": "vparla",
          "authorAssociation": "NONE",
          "body": "@tfpauly.\r\nSo if the DHCP assigned DNS address(es) are NAT addresses instead of the actual DNS server addresses, what is the expected outcome?  It was unclear to me if this would work correctly as the client would see the NAT'd address(es) via DHCP and the certificate would hold the actual address(es), not the NAT'd address seen via DHCP.\r\n\r\nSo imagine NAT assigned address is 1.2.3.4 and actual address of DNS server is 4.5.6.7.  What would be the expected outcome here?  DNS from the client would got to 1.2.3.4:53 then be NAT'd to actual DNS server @ 4.5.6.7:53\r\n\r\nNote this is an edge case for the most part, but possible.\r\n",
          "createdAt": "2021-01-12T18:50:06Z",
          "updatedAt": "2021-01-12T18:50:06Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "@vparla It sounds like you're describing a classic \"DNS forwarder\".  I don't think this matches typical usage of \"NAT\", which does not modify the server IP as observed by the client.",
          "createdAt": "2021-01-12T19:24:51Z",
          "updatedAt": "2021-01-12T19:24:51Z"
        },
        {
          "author": "vparla",
          "authorAssociation": "NONE",
          "body": "For the sake of this discussion, a DNS forwarder and a NAT can be viewed as roughly equivalent for this problem.\r\nClient assigned DNS server address is 1.2.3.4 and as such sends DNS to 1.2.3.4:53.  The actual DNS Server is 4.5.6.7 and the IP in the certificate are also 4.5.6.7",
          "createdAt": "2021-01-13T23:58:54Z",
          "updatedAt": "2021-01-14T00:01:48Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "This situation would not occur when using \"NAT\" according to the definition that I'm used to, but it is an important scenario to consider.\r\n\r\nThe current draft essentially rules this \"out of scope\".  As you observed, the upgrade will not occur in this configuration.\r\n\r\nI have posted a (rather invasive) PR that would put this in-scope, with various safeguards to prevent unauthorized redirection: #147.",
          "createdAt": "2021-01-14T15:00:50Z",
          "updatedAt": "2021-01-14T15:00:50Z"
        },
        {
          "author": "vparla",
          "authorAssociation": "NONE",
          "body": "I am happy with it just being clearly articulated in terms of the scenario and the outcome.  \r\nthanks for looking at it.",
          "createdAt": "2021-01-14T15:48:57Z",
          "updatedAt": "2021-01-14T15:48:57Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue has been migrated to DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/8",
          "createdAt": "2021-02-22T21:44:36Z",
          "updatedAt": "2021-02-22T21:44:36Z"
        }
      ]
    },
    {
      "number": 162,
      "id": "MDU6SXNzdWU3ODU1NDY4Nzk=",
      "title": "Bump ODoH version",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/162",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "odoh",
        "ready for text"
      ],
      "body": "Move from ff03 to ff04 when we publish a version that requires HPKE 07",
      "createdAt": "2021-01-14T00:08:28Z",
      "updatedAt": "2021-01-21T00:18:07Z",
      "closedAt": "2021-01-21T00:18:07Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed in #164.",
          "createdAt": "2021-01-21T00:18:06Z",
          "updatedAt": "2021-01-21T00:18:06Z"
        }
      ]
    },
    {
      "number": 163,
      "id": "MDU6SXNzdWU3ODY5OTc4Mjg=",
      "title": "Clarification on Opportunistic with respect to dns://resolver.arpa",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/163",
      "state": "CLOSED",
      "author": "magicalo",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "deer"
      ],
      "body": "Can you clarify why dns://resolver.arpa would matter in an Opportunistic scenario, or at least in a subset of Opportunistic options.\r\n\r\nCouldn't a DNS client simply attempt DoH on the same IP address(es) as Do53 (ideally in parallel)\r\n and if the certificate returned during the DoH exchanges meets the criteria (matching IPs listed in the SAN, cert validation, etc.) then it would simply attempt the upgrade, never having to consider/engage dns://resolver.arpa\r\n\r\nMaybe I have misunderstood this section or the role dns://resolver.arpa would play here. Could you clarify please.",
      "createdAt": "2021-01-15T15:52:08Z",
      "updatedAt": "2021-02-22T21:46:14Z",
      "closedAt": "2021-02-22T21:46:14Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The purpose of the SVCB record information in the \"opportunistic\" scenario is getting extra metadata about the resolvers. This is particularly important or useful for DoH, where the URI path and HTTP authority would not otherwise be known. The client could guess, but it may not be able to form a valid HTTP request.\r\n\r\nThe DoT ports, etc, could also be different, but that's often less useful.",
          "createdAt": "2021-01-23T03:54:58Z",
          "updatedAt": "2021-01-23T03:54:58Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue migrated to the DDR repo: https://github.com/ietf-wg-add/draft-ietf-add-ddr/issues/9",
          "createdAt": "2021-02-22T21:46:14Z",
          "updatedAt": "2021-02-22T21:46:14Z"
        }
      ]
    },
    {
      "number": 172,
      "id": "MDU6SXNzdWU4MjYwODQ4Mzg=",
      "title": "minor: provide ipv6hint in examples",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/172",
      "state": "CLOSED",
      "author": "enygren",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should make sure that any examples including an ipv4hint\r\nalso include an ipv6hint or only include an ipv6hint.\r\n\r\n(per https://www.iab.org/2016/11/07/iab-statement-on-ipv6/)",
      "createdAt": "2021-03-09T15:14:30Z",
      "updatedAt": "2021-03-09T15:31:50Z",
      "closedAt": "2021-03-09T15:31:50Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@enygren what draft is this for? If we're talking about DDR, it should be at https://github.com/ietf-wg-add/draft-ietf-add-ddr",
          "createdAt": "2021-03-09T15:26:23Z",
          "updatedAt": "2021-03-09T15:26:23Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops!  sorry.  fixed.",
          "createdAt": "2021-03-09T15:31:50Z",
          "updatedAt": "2021-03-09T15:31:50Z"
        }
      ]
    },
    {
      "number": 174,
      "id": "MDU6SXNzdWU4NjQ0NzMxMjE=",
      "title": "Provide guidance about which status codes should be forwarded",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/174",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [
        "odoh"
      ],
      "body": "Section 4.3 should clarify that only 2xx, 4xx, and 5xx response codes should be forwarded un-modified. (And even some 4xx response codes such as authentication-required may not make sense to relay but would need to be handled by the proxy.) The important one is that 1xx should never be relayed back as there-be-dragons.",
      "createdAt": "2021-04-22T02:11:21Z",
      "updatedAt": "2021-04-25T21:15:32Z",
      "closedAt": "2021-04-25T21:15:32Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Do you want to take this, or shall I?",
          "createdAt": "2021-04-22T02:12:21Z",
          "updatedAt": "2021-04-22T02:12:21Z"
        }
      ]
    },
    {
      "number": 175,
      "id": "MDU6SXNzdWU4NjQ0NzM1ODA=",
      "title": "Describe allowances for proxy authentication ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/175",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [
        "odoh"
      ],
      "body": "We should briefly mention that clients MAY authenticate to proxies, and proxies MAY authenticate to targets, but any authentication here MUST be decoupled such that it is not possible for a target to identify a client, and any authentication from the client to proxy MUST NOT be passed directly to the target.",
      "createdAt": "2021-04-22T02:12:35Z",
      "updatedAt": "2021-04-27T23:38:37Z",
      "closedAt": "2021-04-27T23:38:37Z",
      "comments": []
    },
    {
      "number": 177,
      "id": "MDU6SXNzdWU4NjQ0ODU5OTY=",
      "title": "[ODoH] how is path specified in SVCB RR?",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/177",
      "state": "OPEN",
      "author": "enygren",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The SVCB record specification only contains the key and not the targetpath.  Ideally we'd reuse something from one of the DoH/DPRIVE/etc SVCB specs for this rather than creating a new SvcParamKey.",
      "createdAt": "2021-04-22T02:45:16Z",
      "updatedAt": "2021-04-22T03:17:51Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Correct, I agree this shouldn't define a new key for the path, but should rely on the encoding for DoH resolvers from draft-schwartz-svcb-dns.",
          "createdAt": "2021-04-22T03:17:51Z",
          "updatedAt": "2021-04-22T03:17:51Z"
        }
      ]
    },
    {
      "number": 179,
      "id": "MDU6SXNzdWU4NjcwODUyMTk=",
      "title": "Remove normative references to add-resolver-discovery and adaptive-dns-privacy",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/179",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "editorial",
        "odoh"
      ],
      "body": "ODoH should remove normative references to add-resolver-discovery and adaptive-dns-privacy, to avoid blocking publishing.",
      "createdAt": "2021-04-25T18:51:37Z",
      "updatedAt": "2021-04-25T19:11:05Z",
      "closedAt": "2021-04-25T19:11:05Z",
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczNzI0OTE4",
      "title": "Apply some editorial cleanup and drop references to issues.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/3",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-26T00:30:01Z",
      "updatedAt": "2019-04-26T14:14:44Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "a4bd267d6577703a408dbb874bab6c9c3eceaf70",
      "headRepository": null,
      "headRefName": "caw/nits-issues",
      "headRefOid": "8c71c44ce0bf01dd693527213419c07bbe835b1f",
      "closedAt": "2019-04-26T14:14:44Z",
      "mergedAt": "2019-04-26T14:14:44Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ce63cadbe144e807969cf8651db13ed58e88c154"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjMxMTgwMTI2",
          "commit": {
            "abbreviatedOid": "8c71c44"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Awesome!",
          "createdAt": "2019-04-26T14:14:37Z",
          "updatedAt": "2019-04-26T14:14:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjg2ODY5Mzc2",
      "title": "Update client flow",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/5",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Resolves #2. Based on the attached flowchart.\r\n![Cartwheel Flowchart](https://user-images.githubusercontent.com/1609964/59232855-f4cfe300-8b9a-11e9-98d6-80272f602651.png)\r\n",
      "createdAt": "2019-06-10T23:15:33Z",
      "updatedAt": "2019-06-11T21:33:11Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "ce63cadbe144e807969cf8651db13ed58e88c154",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/client-flow",
      "headRefOid": "822e04380afc2d66aa2fcae428025950e6507cb9",
      "closedAt": "2019-06-11T21:33:11Z",
      "mergedAt": "2019-06-11T21:33:11Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d0a9ad8f26b813e4b06b93c9a738e64878e0aaed"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODg5Nzc0",
          "commit": {
            "abbreviatedOid": "c3aaf29"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good! A few minor comments",
          "createdAt": "2019-06-10T23:19:09Z",
          "updatedAt": "2019-06-10T23:27:34Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Missing word?\r\n```suggestion\r\n: A PvD is exclusive for a specific domain if it prohibits any other PvD from being used\r\n```",
              "createdAt": "2019-06-10T23:19:09Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            },
            {
              "originalPosition": 20,
              "body": "And domain is our primitive unit here?",
              "createdAt": "2019-06-10T23:19:28Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            },
            {
              "originalPosition": 19,
              "body": "It seems a little odd to have Direct PvDs defined as \"local\", which totally makes sense, and then \"VPN\" comes in as a use case -- what about the next thing that wants to have the same property? What I'm trying to get at is: what is the property that both of those share and can we define it by the properties rather than enumerating all possible sources of configuration that would share those properties?",
              "createdAt": "2019-06-10T23:20:50Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            },
            {
              "originalPosition": 26,
              "body": "It might be worth expressing that this difference in behavior should not be visible to the network or other off-device observers, the point isn't to highlight on the web which things are \"sensitive\", but rather to enforce stricter system policies on-device only.",
              "createdAt": "2019-06-10T23:22:00Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            },
            {
              "originalPosition": 42,
              "body": "Are we requiring that the connection fail here? Should that be a more generic comment about exclusive PvDs elsewhere?",
              "createdAt": "2019-06-10T23:23:13Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkxOTIw",
          "commit": {
            "abbreviatedOid": "d281738"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:28:24Z",
          "updatedAt": "2019-06-10T23:28:24Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Yes for now. I'm thinking of adding a later update that discusses endpoints in general rather than hostnames and domains.",
              "createdAt": "2019-06-10T23:28:24Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkyOTAw",
          "commit": {
            "abbreviatedOid": "d281738"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:32:31Z",
          "updatedAt": "2019-06-10T23:32:32Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "We mention earlier that exclusive prohibits use of others; we'll have another section later too",
              "createdAt": "2019-06-10T23:32:32Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkyOTEz",
          "commit": {
            "abbreviatedOid": "d281738"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:32:35Z",
          "updatedAt": "2019-06-10T23:32:36Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Added text",
              "createdAt": "2019-06-10T23:32:36Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkyOTI1",
          "commit": {
            "abbreviatedOid": "d281738"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:32:38Z",
          "updatedAt": "2019-06-10T23:32:38Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Nice, sounds good. #6 ",
              "createdAt": "2019-06-10T23:32:38Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkyOTQ0",
          "commit": {
            "abbreviatedOid": "d281738"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:32:42Z",
          "updatedAt": "2019-06-10T23:32:43Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Added text to Direct PvD.",
              "createdAt": "2019-06-10T23:32:43Z",
              "updatedAt": "2019-06-10T23:35:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODkzNTM3",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:35:33Z",
          "updatedAt": "2019-06-10T23:36:22Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Looks great!",
              "createdAt": "2019-06-10T23:35:34Z",
              "updatedAt": "2019-06-10T23:36:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ3ODk1MDkx",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-10T23:42:26Z",
          "updatedAt": "2019-06-10T23:42:27Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Thanks. Filed #7 to cover a more in-depth explanation elsewhere.",
              "createdAt": "2019-06-10T23:42:26Z",
              "updatedAt": "2019-06-10T23:42:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDA0NDkz",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good! I only have one real question (regarding step #2). The other comments can be treated as issues if we think there's value.",
          "createdAt": "2019-06-11T19:58:15Z",
          "updatedAt": "2019-06-11T20:02:50Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "nit: typo \"conneciton\"",
              "createdAt": "2019-06-11T19:58:16Z",
              "updatedAt": "2019-06-11T20:02:50Z"
            },
            {
              "originalPosition": 61,
              "body": "What is the next PvD here? Web PvDs, or perhaps another direct PvD?",
              "createdAt": "2019-06-11T19:58:35Z",
              "updatedAt": "2019-06-11T20:02:50Z"
            },
            {
              "originalPosition": 18,
              "body": "I wonder if it makes sense to have a diagram or some more text describing the valid relationships between these different PvDs. For example, if a domain matches a Direct PvD, we would expect it to not match a Web PvD (right)? Are there domains that can match multiple PvDs? (Thinking a Venn diagram or something similar is what we need.)",
              "createdAt": "2019-06-11T20:00:30Z",
              "updatedAt": "2019-06-11T20:02:50Z"
            },
            {
              "originalPosition": 85,
              "body": "Not part of this change, but perhaps s/visible to/visible and malleable for?",
              "createdAt": "2019-06-11T20:02:19Z",
              "updatedAt": "2019-06-11T20:02:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDQ5NDM0",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-11T21:31:50Z",
          "updatedAt": "2019-06-11T21:31:50Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Yes, we'll likely want a diagram later.",
              "createdAt": "2019-06-11T21:31:50Z",
              "updatedAt": "2019-06-11T21:31:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDQ5NTEz",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-11T21:32:03Z",
          "updatedAt": "2019-06-11T21:32:03Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "The next one in this list.",
              "createdAt": "2019-06-11T21:32:03Z",
              "updatedAt": "2019-06-11T21:32:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDQ5NjA5",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-11T21:32:17Z",
          "updatedAt": "2019-06-11T21:32:17Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I'll fix in my next PR!",
              "createdAt": "2019-06-11T21:32:17Z",
              "updatedAt": "2019-06-11T21:32:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDQ5NzIw",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-11T21:32:34Z",
          "updatedAt": "2019-06-11T21:32:34Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Can clarify in next round.",
              "createdAt": "2019-06-11T21:32:34Z",
              "updatedAt": "2019-06-11T21:32:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4NDQ5OTM0",
          "commit": {
            "abbreviatedOid": "822e043"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-11T21:33:06Z",
          "updatedAt": "2019-06-11T21:33:06Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "Hm, is malleable a common term for this?",
              "createdAt": "2019-06-11T21:33:06Z",
              "updatedAt": "2019-06-11T21:33:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjg3MzE3NzQw",
      "title": "Add initial protocol details",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/8",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Add many new sections! All a work in progress, with many TODOs. Goal for the review is to:\r\n- File issues as we notice things we need\r\n- Point out and clean up anything really egregious\r\n- Sanity check the direction\r\n\r\nThe new bits are:\r\n- First stab at Web PvD configuration blob\r\n- Description of how you whitelist a Web PvD for use\r\n- Description of the resolution protocol; calling it Adaptive DNS, with both direct and obfuscation modes.",
      "createdAt": "2019-06-12T01:38:58Z",
      "updatedAt": "2019-06-19T20:45:53Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "d0a9ad8f26b813e4b06b93c9a738e64878e0aaed",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/protocol-initial",
      "headRefOid": "6ea71bfa9fb7ef166ad2f8e53812e497f5245c9d",
      "closedAt": "2019-06-19T20:45:53Z",
      "mergedAt": "2019-06-19T20:45:53Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7ebc4eae3c2d1c6c93ce67b138122e23d2684657"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4ODI2MTUy",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-06-12T15:05:50Z",
          "updatedAt": "2019-06-12T15:30:24Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "nit: perhaps instead of \"encrypted DNS servers\" we say \"DNS servers supporting transport encryption\"? ",
              "createdAt": "2019-06-12T15:05:50Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 52,
              "body": "Can we define Obfuscation Target and Proxy in the terminology section?",
              "createdAt": "2019-06-12T15:07:11Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 48,
              "body": "Can we include a diagram of the obfuscation \"flow\" in the start of this section? Perhaps the following will work:\r\n\r\n```\r\n~~~\r\n  +--------+  (1)   +---------+   (2)  +---------+\r\n  | Client +-------->  Proxy  +-------->  Target |\r\n  |        <--------+         <--------+         |\r\n  +--------+  (4)   +---------+   (3)  +---------+\r\n~~~\r\n\r\n1. Client sends aDNS to Proxy with the sensitive query encrypted under Target's key. \r\n2. Proxy forwards query to Target.\r\n3. Target decrypts query, resolves to an answer, encrypts response to Client, and sends aDNS answer to Proxy.\r\n4. Proxy forwards aDNS answer to Client.\r\n```",
              "createdAt": "2019-06-12T15:11:58Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 57,
              "body": "s/in rotation/rotating in random order?",
              "createdAt": "2019-06-12T15:12:27Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 63,
              "body": "Have we defined what authoritative here means?",
              "createdAt": "2019-06-12T15:12:50Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 77,
              "body": "The contents of this are fine, though we might want to reconsider the encoding later on. It might make sense to use the TLS encoding syntax, and define a \"base\" WebPVD configuration as containing only the required fields, and then move everything else to an Extension. (The benefit of this being that the encoding has no ambiguity and can be signed if needed.)",
              "createdAt": "2019-06-12T15:16:10Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 94,
              "body": "This is tricky. I think we can get away without a signature for the same reasons that ESNI keys don't have a signature. I can provide text to that effect.",
              "createdAt": "2019-06-12T15:16:17Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 107,
              "body": "nit: s/are SHOULD/SHOULD",
              "createdAt": "2019-06-12T15:19:08Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 122,
              "body": "Perhaps add a note that clients may have multiple aDNS connections to different Proxies open at once?",
              "createdAt": "2019-06-12T15:20:22Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 125,
              "body": "typo \"encypted\"",
              "createdAt": "2019-06-12T15:20:40Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 129,
              "body": "LTV!? ;)",
              "createdAt": "2019-06-12T15:21:56Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 248,
              "body": "This means the message is encrypted with the server public key? We should probably include a key identifier in this blob, too. That is, replace Encrypted Message with \"Server Public Key ID || Encrypted Message\", where the keyID is specified in the WebPVD configuration.",
              "createdAt": "2019-06-12T15:23:58Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 224,
              "body": "Hmm... does the proxy sign the egress query?",
              "createdAt": "2019-06-12T15:24:40Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 289,
              "body": "Perhaps we can rename PROXY and SIGNED queries to PROXY and ENCRYPTED (resp.) queries? (Since the latter isn't signed.)",
              "createdAt": "2019-06-12T15:26:19Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 288,
              "body": "We should add a note that the Client Symmetric Key ```MUST be a freshly generated and random symmetric key for each PROXY_QUERY.```",
              "createdAt": "2019-06-12T15:27:40Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 344,
              "body": "We can adopt HPKE (https://datatracker.ietf.org/doc/draft-barnes-cfrg-hpke/) for encryption and whatnot. I'll take that task: https://github.com/tfpauly/draft-pauly-web-pvd/issues/9",
              "createdAt": "2019-06-12T15:29:30Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 350,
              "body": "I'll take this one, too: https://github.com/tfpauly/draft-pauly-web-pvd/issues/10",
              "createdAt": "2019-06-12T15:29:59Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDM5MTAw",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:43:16Z",
          "updatedAt": "2019-06-13T15:43:16Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Authoritative PvD is defined in the terminology, I think?",
              "createdAt": "2019-06-13T15:43:16Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDM5NDgw",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:43:51Z",
          "updatedAt": "2019-06-13T15:43:52Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "That's fair. I'm following here the format we used for other PvD documents.",
              "createdAt": "2019-06-13T15:43:51Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDM5Nzcx",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:44:19Z",
          "updatedAt": "2019-06-13T15:44:19Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "Indeed!",
              "createdAt": "2019-06-13T15:44:19Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDQwMTY3",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:44:56Z",
          "updatedAt": "2019-06-13T15:44:57Z",
          "comments": [
            {
              "originalPosition": 248,
              "body": "Can you provide the text for this?",
              "createdAt": "2019-06-13T15:44:56Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDQwNzcx",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:45:52Z",
          "updatedAt": "2019-06-13T15:45:52Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "No, the proxy doesn't sign anything; rather, it passes along the content encrypted with the public key. Do you have a suggestion for a better term than `SIGNED_QUERY`?",
              "createdAt": "2019-06-13T15:45:52Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDQwODk1",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:46:07Z",
          "updatedAt": "2019-06-13T15:46:08Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "Ah that's your next comment =)",
              "createdAt": "2019-06-13T15:46:07Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDQwOTUx",
          "commit": {
            "abbreviatedOid": "b91ff37"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T15:46:12Z",
          "updatedAt": "2019-06-13T15:46:12Z",
          "comments": [
            {
              "originalPosition": 289,
              "body": "Yes!",
              "createdAt": "2019-06-13T15:46:12Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDQ5ODcw",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:00:17Z",
          "updatedAt": "2019-06-13T16:00:17Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Filed #11",
              "createdAt": "2019-06-13T16:00:17Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwMDA1",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:00:32Z",
          "updatedAt": "2019-06-13T16:00:32Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:00:32Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwMTM4",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:00:45Z",
          "updatedAt": "2019-06-13T16:00:45Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:00:45Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwMjIw",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:00:52Z",
          "updatedAt": "2019-06-13T16:00:52Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:00:52Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwMzU3",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:01:05Z",
          "updatedAt": "2019-06-13T16:01:05Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:01:05Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwNDQx",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:01:12Z",
          "updatedAt": "2019-06-13T16:01:13Z",
          "comments": [
            {
              "originalPosition": 122,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:01:12Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwNTE1",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:01:20Z",
          "updatedAt": "2019-06-13T16:01:20Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:01:20Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwNjQ4",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:01:36Z",
          "updatedAt": "2019-06-13T16:01:36Z",
          "comments": [
            {
              "originalPosition": 289,
              "body": "Fixed",
              "createdAt": "2019-06-13T16:01:36Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDUwNzA1",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:01:42Z",
          "updatedAt": "2019-06-13T16:01:42Z",
          "comments": [
            {
              "originalPosition": 288,
              "body": "Added!",
              "createdAt": "2019-06-13T16:01:42Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDU4NzM3",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:15:48Z",
          "updatedAt": "2019-06-13T16:15:48Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Doh, yes, thanks!",
              "createdAt": "2019-06-13T16:15:48Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDU4OTI0",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:16:07Z",
          "updatedAt": "2019-06-13T16:16:07Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Yep, I figured! No need to change now.",
              "createdAt": "2019-06-13T16:16:07Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDU5MzI4",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:16:50Z",
          "updatedAt": "2019-06-13T16:16:51Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "... in #12.",
              "createdAt": "2019-06-13T16:16:51Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDU5NTkz",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:17:20Z",
          "updatedAt": "2019-06-13T16:17:20Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "I assume for faster parsing? (Read length first then wait til you that many bytes before processing?)",
              "createdAt": "2019-06-13T16:17:20Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDU5ODYw",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-13T16:17:52Z",
          "updatedAt": "2019-06-13T16:17:52Z",
          "comments": [
            {
              "originalPosition": 248,
              "body": "Yep! I can do it in #9.",
              "createdAt": "2019-06-13T16:17:52Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NTYzNjEw",
          "commit": {
            "abbreviatedOid": "5d97287"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking great! Pretty much all comments are about wording/style/conveying concepts rather than any changes to the concepts themselves.",
          "createdAt": "2019-06-13T19:38:28Z",
          "updatedAt": "2019-06-19T20:15:24Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Asked directly sounds kind of odd, can we do \r\n\"DNS queries that can be sent directly to a server\"\r\n```suggestion\r\nbe sent directly to a server, or use a server to proxy the query and obfuscate the client address.\r\n```",
              "createdAt": "2019-06-13T19:38:29Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\ndomain. There are two prerequisites for whitelisting a Web PvD:\r\n```",
              "createdAt": "2019-06-13T19:40:51Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 73,
              "body": "This example seems to show PvD A being used as a proxy twice, but not as a target.\r\nPerhaps: \r\n```suggestion\r\npassed through another PvD with a target of PvD A.\r\n```\r\nNot a huge fan of that suggested change, so if you can find a better wording that could be good :) ",
              "createdAt": "2019-06-13T19:47:05Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 101,
              "body": "\ud83d\udc4d",
              "createdAt": "2019-06-13T19:48:42Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 84,
              "body": "Can a domain have multiple Web PvDs that are authoritative for it? (i.e. should we explicitly state that?)",
              "createdAt": "2019-06-19T19:52:32Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 89,
              "body": "Would we not say that a Web PvD configuration can be delivered via multiple mechanisms, of which DNS TXT records is one?",
              "createdAt": "2019-06-19T19:53:02Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 110,
              "body": "Nit: We might want to make this more generic than \"racing\" and let it govern things much like SRV?",
              "createdAt": "2019-06-19T19:53:44Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 122,
              "body": "Nit: Semicolon doesn't fit here",
              "createdAt": "2019-06-19T19:54:34Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 127,
              "body": "My read of this paragraph: \r\n- A client isn't required to validate authoritativeness, yet above we say\r\n```\r\n\ta client MUST determine that the\r\n\tWeb PvD is authoritative for the domain containing the hostname. \r\n```\r\n- A server should do lookups... on behalf of a client?\r\n\r\nThat's probably not right, so what are we really trying to say/require?\r\n",
              "createdAt": "2019-06-19T19:57:56Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nAll Web PvDs MUST support a resolution protocol that supports obfuscation ({{obfuscation}}),\r\n```\r\nCould always say something around \"at minimum\" or \"minimally\" if we really needed something",
              "createdAt": "2019-06-19T19:58:10Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 131,
              "body": "Nit: `this protocol` is a bit unclear, could be \"the protocol defined in this draft\", but I think you mean the obfuscation-supporting resolution protocol that they MUST support\r\n```suggestion\r\nconfiguration ({{configuration}}) are specifically ones that support such a protocol. The default protocol\r\n```",
              "createdAt": "2019-06-19T19:59:07Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 141,
              "body": "This sentence should probably be expanded into a section or something discussing security/privacy properties of various approaches.",
              "createdAt": "2019-06-19T20:01:39Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 145,
              "body": "(plus we required authentication elsewhere?)",
              "createdAt": "2019-06-19T20:02:23Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 182,
              "body": "```\r\n| Value   | Type                |\r\n|:--------|:--------------------|\r\n| 0x1     | DIRECT_QUERY        |\r\n| 0x2     | DIRECT_ANSWER       |\r\n| 0x3     | PROXY_QUERY         |\r\n| 0x4     | ENCRYPTED_QUERY     |\r\n| 0x5     | ENCRYPTED_ANSWER    |\r\n{: #adns-message-types title=\"aDNS Message Types\"}\r\n```",
              "createdAt": "2019-06-19T20:07:36Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 185,
              "body": "Later we should add a note about how cryptographically secure this random must be?",
              "createdAt": "2019-06-19T20:08:03Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 248,
              "body": "Would be good to have a sentence here about how query ids should only ever be exposed to one side or the other, since that's the key point of all this",
              "createdAt": "2019-06-19T20:09:34Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 277,
              "body": "Nit: Must this be TCP for all cases? I guess we need to identify the endpoint somehow",
              "createdAt": "2019-06-19T20:10:06Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 317,
              "body": "I'd reword this to make clear for which side of the proxy we expect this to be the case, since previously we required the client to send everything over authenticated and encrypted transport. (Perhaps just flip the order of the sentence)",
              "createdAt": "2019-06-19T20:11:53Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            },
            {
              "originalPosition": 360,
              "body": "Overall, this is a nice timeline of how stuff works. Organizationally, as we add requirements, it might be good to have sections for what each party involved needs to deal with. \r\n\r\n- Client\r\nDo this stuff, when you get this, do that\r\n\r\n- OProxy\r\nResolve this, forward these things, translate that ID to this ID\r\n\r\n- OTarget\r\nGet this, respond with that",
              "createdAt": "2019-06-19T20:13:27Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTQ4MTcy",
          "commit": {
            "abbreviatedOid": "c4c2551"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:18:44Z",
          "updatedAt": "2019-06-19T20:18:44Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I think your suggestion here is fine.",
              "createdAt": "2019-06-19T20:18:44Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTQ5MDg3",
          "commit": {
            "abbreviatedOid": "c4c2551"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:20:31Z",
          "updatedAt": "2019-06-19T20:20:31Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "Filed #14 ",
              "createdAt": "2019-06-19T20:20:31Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTQ5NDgx",
          "commit": {
            "abbreviatedOid": "c4c2551"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:21:18Z",
          "updatedAt": "2019-06-19T20:21:18Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "No, this is about the domain signature, not the configuration. The configuration probably doesn't and shouldn't list all possible domains. It can list some, or else they come from DNS TXT records, etc.",
              "createdAt": "2019-06-19T20:21:18Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTQ5NTk2",
          "commit": {
            "abbreviatedOid": "c4c2551"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:21:31Z",
          "updatedAt": "2019-06-19T20:21:32Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "Indeed!",
              "createdAt": "2019-06-19T20:21:32Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTUxMjIz",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:24:33Z",
          "updatedAt": "2019-06-19T20:24:33Z",
          "comments": [
            {
              "originalPosition": 122,
              "body": "```suggestion\r\nfor hostname resolution. Any such protocol MUST be encrypted and authenticated and also MUST\r\n```",
              "createdAt": "2019-06-19T20:24:33Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTUzNDQ1",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:28:54Z",
          "updatedAt": "2019-06-19T20:28:54Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "- For a given domain, the workflow is such that they MUST not send a connection's resolution query to a non-authoritative server. This statement here is saying, on top of that, probably you shouldn't send random queries not related to a connection that don't match the domain either (but that's technically less bad).\r\n- Yes, recursive resolution means that resolvers need to look up other domains that they aren't authoritative for.",
              "createdAt": "2019-06-19T20:28:54Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU0MjA4",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:30:26Z",
          "updatedAt": "2019-06-19T20:30:26Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "I disagree; `this` refers to the earlier mentioned `resolution protocol that supports obfuscation`.",
              "createdAt": "2019-06-19T20:30:26Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU0Njky",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:31:26Z",
          "updatedAt": "2019-06-19T20:31:27Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "Filed #15",
              "createdAt": "2019-06-19T20:31:26Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU1MDI2",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:32:09Z",
          "updatedAt": "2019-06-19T20:32:10Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "What do you mean? For server-to-server, it doesn't necessarily require authentication at the lower level, since aDNS itself is encrypted and signed at this point.",
              "createdAt": "2019-06-19T20:32:09Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU1MTQ1",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:32:23Z",
          "updatedAt": "2019-06-19T20:32:24Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "Yes, simpler parsing at least.",
              "createdAt": "2019-06-19T20:32:24Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU1Nzkz",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:33:48Z",
          "updatedAt": "2019-06-19T20:33:49Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "Filed #16",
              "createdAt": "2019-06-19T20:33:48Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU2MDQw",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:34:21Z",
          "updatedAt": "2019-06-19T20:34:22Z",
          "comments": [
            {
              "originalPosition": 277,
              "body": "For now, yes. Can be tweaked if we want in the future.",
              "createdAt": "2019-06-19T20:34:21Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU4NzYy",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:39:59Z",
          "updatedAt": "2019-06-19T20:40:00Z",
          "comments": [
            {
              "originalPosition": 317,
              "body": "Hm, I'm not sure how flipping it helps. The previous paragraph already defines the messages as specifically from the proxy to the target, so the side of the proxy is pretty clear.",
              "createdAt": "2019-06-19T20:39:59Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTU5MTEw",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:40:44Z",
          "updatedAt": "2019-06-19T20:40:44Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "Isn't that what is covered by the definitions at the start of the section, that define the three roles?",
              "createdAt": "2019-06-19T20:40:44Z",
              "updatedAt": "2019-06-19T20:44:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTYxMjEy",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:44:59Z",
          "updatedAt": "2019-06-19T20:44:59Z",
          "comments": [
            {
              "originalPosition": 182,
              "body": "Added chart",
              "createdAt": "2019-06-19T20:44:59Z",
              "updatedAt": "2019-06-19T20:44:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUxOTYxMjQ4",
          "commit": {
            "abbreviatedOid": "20c4927"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-06-19T20:45:05Z",
          "updatedAt": "2019-06-19T20:45:05Z",
          "comments": [
            {
              "originalPosition": 248,
              "body": "Added!",
              "createdAt": "2019-06-19T20:45:05Z",
              "updatedAt": "2019-06-19T20:45:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0MjkxMDMyNDc5",
      "title": "Minor typo fixes",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/17",
      "state": "MERGED",
      "author": "erickinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Super minor typos found while glancing through the text",
      "createdAt": "2019-06-24T08:46:47Z",
      "updatedAt": "2019-06-24T15:42:25Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7ebc4eae3c2d1c6c93ce67b138122e23d2684657",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "dev/ek_edits",
      "headRefOid": "79c86b0cec1da415376a766c0cb8720f0e3f6d99",
      "closedAt": "2019-06-24T15:42:25Z",
      "mergedAt": "2019-06-24T15:42:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "eaff18a7ac91d6d1e29247bb075d23b4ba90fda1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjUzNDk3MTcy",
          "commit": {
            "abbreviatedOid": "79c86b0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-06-24T15:42:12Z",
          "updatedAt": "2019-06-24T15:42:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MzAzODU0NDgw",
      "title": "Add crypto bits.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/20",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-02T16:30:40Z",
      "updatedAt": "2019-08-02T17:12:25Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "82a327aafba1d208092f232d9bb27ceac387b3d4",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/pass",
      "headRefOid": "5a76d987079183a38e8fcd7a3e221dfecad798e6",
      "closedAt": "2019-08-02T17:12:25Z",
      "mergedAt": "2019-08-02T17:12:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a89ce439166b2ca2cbb37292914f549a083bb35d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwMjgwMTc2",
          "commit": {
            "abbreviatedOid": "59a9add"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2019-08-02T16:34:45Z",
          "updatedAt": "2019-08-02T16:44:21Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "I try to avoid using \"must\" anywhere that's not normative.\r\n```suggestion\r\nclient systems need to trust the encrypted DNS service to not store or misuse queries made to it.\r\n```",
              "createdAt": "2019-08-02T16:34:46Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 83,
              "body": "Same with may:\r\n\r\n```suggestion\r\nuser trust of the service. This can lead to resolution failures for local or private enterprise domains\r\n```",
              "createdAt": "2019-08-02T16:35:04Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nprivate, or encrypted resolvers. This provides more granularity at the cost of increasing user burden.\r\n```",
              "createdAt": "2019-08-02T16:35:53Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 105,
              "body": "```suggestion\r\n- an extension to DoH that allows queries to be obfuscated ({{OBFUSCATION}});\r\n```",
              "createdAt": "2019-08-02T16:36:19Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\n- a DoH server that responds to queries directly and supports proxying ({{server}});\r\n```",
              "createdAt": "2019-08-02T16:36:26Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n1. Eavesdroppers on the local network or elsewhere on the path cannot\r\n```",
              "createdAt": "2019-08-02T16:36:41Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 126,
              "body": "```suggestion\r\n2. Only an authoritative DNS resolver associated with the deployment that is also\r\n```",
              "createdAt": "2019-08-02T16:37:06Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\nprovider which hosts \"example.com\" would be able to link queries for \"example.com\" to specific clients\r\n```",
              "createdAt": "2019-08-02T16:37:44Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\n(by their IP address), since the server ultimately has this capability once clients subsequently\r\n```",
              "createdAt": "2019-08-02T16:38:15Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nestablish secure (e.g., TLS) connections to an address to which \"example.com\" resolves.\r\n```",
              "createdAt": "2019-08-02T16:38:34Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 142,
              "body": "I would suggest that this warning be stated in the resolution algorithm section, and also specifically call out that the signing we mean is DNSSEC.",
              "createdAt": "2019-08-02T16:39:51Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 97,
              "body": "Should this be a DNS query message itself, not just a name?",
              "createdAt": "2019-08-02T16:42:07Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            },
            {
              "originalPosition": 105,
              "body": "Same, should this be a reference to the DNS message?",
              "createdAt": "2019-08-02T16:42:50Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwMjg3Njg2",
          "commit": {
            "abbreviatedOid": "8e5c899"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-02T16:52:07Z",
          "updatedAt": "2019-08-02T16:52:08Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "I'll clarify the DNSSEC bit, though I think putting the warning here is important since the preceding sentence claims that the resolution algorithm (described later) achieves the three goals in the list, which it doesn't for this edge case.",
              "createdAt": "2019-08-02T16:52:07Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwMjg5Mzcx",
          "commit": {
            "abbreviatedOid": "8e5c899"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-02T16:56:05Z",
          "updatedAt": "2019-08-02T16:56:05Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "Yep, fixed!",
              "createdAt": "2019-08-02T16:56:05Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwMjg5Mzkz",
          "commit": {
            "abbreviatedOid": "8e5c899"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-02T16:56:10Z",
          "updatedAt": "2019-08-02T16:56:10Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Fixed!",
              "createdAt": "2019-08-02T16:56:10Z",
              "updatedAt": "2019-08-02T17:11:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwMjk2MjQy",
          "commit": {
            "abbreviatedOid": "5a76d98"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-02T17:12:06Z",
          "updatedAt": "2019-08-02T17:12:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MzExOTU1NTgx",
      "title": "consistently use the term client instead of client host(s).",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/21",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "host implies, to me, consistent host wide behavior while I think these documents refer to\r\nany adaptive dns client.",
      "createdAt": "2019-08-28T17:25:37Z",
      "updatedAt": "2019-08-28T17:26:38Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "b6023cdcf231a6e055d4d760e54eda70c1762c02",
      "headRepository": null,
      "headRefName": "mcmanus/not-client-hosts",
      "headRefOid": "6457b8a15180bd1a162772e2173291a11dffb121",
      "closedAt": "2019-08-28T17:26:38Z",
      "mergedAt": "2019-08-28T17:26:38Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7c547af0b7f74cc1a80477265c7bec38cb8b2ca1"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Looks good!",
          "createdAt": "2019-08-28T17:26:12Z",
          "updatedAt": "2019-08-28T17:26:12Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgwOTg1NzM5",
          "commit": {
            "abbreviatedOid": "6457b8a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-28T17:26:25Z",
          "updatedAt": "2019-08-28T17:26:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyMDE2Mjk3",
      "title": "editorial changes.. typos, nits, and clarifications",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/22",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-28T20:11:16Z",
      "updatedAt": "2019-08-29T15:41:52Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7c547af0b7f74cc1a80477265c7bec38cb8b2ca1",
      "headRepository": null,
      "headRefName": "mcmanus/adaptive-editorial-1",
      "headRefOid": "d4c178a0fac89c1ed8353943b547305921c98347",
      "closedAt": "2019-08-29T15:41:52Z",
      "mergedAt": "2019-08-29T15:41:52Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "919c8961a87e7ef9c3aa2b2ddbf26f47a3b6e43c"
      },
      "comments": [
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "take em or leave em at your discretion.. going for clarity.\r\n",
          "createdAt": "2019-08-28T20:21:50Z",
          "updatedAt": "2019-08-28T20:21:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMDc1NTY4",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T20:14:41Z",
          "updatedAt": "2019-08-28T20:14:41Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "this bit about geo based dns is a big deal for some people.. pointing out (not in this PR) that ecs makes sense with designated (but not blinded) lookups and that they can have different TTL stickyness would be a good thing. I'll make that suggestion separately but right here wanted to just enumerate the issue.",
              "createdAt": "2019-08-28T20:14:41Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMDc1OTI2",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T20:15:22Z",
          "updatedAt": "2019-08-28T20:15:23Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "eavesdropping sounds so passive and I like to emphasize the two party nature of things.",
              "createdAt": "2019-08-28T20:15:22Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMDc2Mzc2",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T20:16:14Z",
          "updatedAt": "2019-08-28T20:16:14Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I figure eTLD is what you meant.. perhaps we need an issue to discuss why we need the limitation in the presence of dnssec?",
              "createdAt": "2019-08-28T20:16:14Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMDc3MTM4",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T20:17:42Z",
          "updatedAt": "2019-08-28T20:17:42Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "perform a query isn't really what we need.. its pedantic, I know. but we want the data.",
              "createdAt": "2019-08-28T20:17:42Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMTI3NDY1",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T22:01:46Z",
          "updatedAt": "2019-08-28T22:01:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Nit: add a comma?\r\n```suggestion\r\nby the local network along with their IP address. Alternatively, they\r\n```",
              "createdAt": "2019-08-28T22:01:46Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMTI3NjUw",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-28T22:02:18Z",
          "updatedAt": "2019-08-28T22:02:19Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Nit: avoiding use of stuff that sounds like normative language\r\n```suggestion\r\ncan use a resolver indicated by a tunneling service such as a VPN.\r\n```",
              "createdAt": "2019-08-28T22:02:18Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxMTI4NzE4",
          "commit": {
            "abbreviatedOid": "e1ff766"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks for the fixes! Some nits in comments that can be applied.",
          "createdAt": "2019-08-28T22:05:07Z",
          "updatedAt": "2019-08-28T22:08:32Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nHowever, privacy-sensitive clients might prefer to use an encrypted DNS service other\r\n```",
              "createdAt": "2019-08-28T22:05:07Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            },
            {
              "originalPosition": 29,
              "body": "Yup, that's a great point to include in here!",
              "createdAt": "2019-08-28T22:06:24Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n1. No party other than the client and server can learn or control the\r\n```",
              "createdAt": "2019-08-28T22:06:52Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            },
            {
              "originalPosition": 93,
              "body": "Yes, that's perfect.",
              "createdAt": "2019-08-28T22:07:51Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            },
            {
              "originalPosition": 102,
              "body": "Good point!",
              "createdAt": "2019-08-28T22:08:05Z",
              "updatedAt": "2019-08-29T15:41:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 23,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyMzE2ODQz",
      "title": "readability and clarity changes.. removed some h2 specific things and\u2026",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/23",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026 focused on sematics",
      "createdAt": "2019-08-29T13:24:09Z",
      "updatedAt": "2019-08-29T15:43:20Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "f3a0ec9fd4e42ecdebff2c2d7cd0e54a5cc6831a",
      "headRepository": null,
      "headRefName": "mcmanus/obfuscated-editorial-1",
      "headRefOid": "685f5f9fd18164718d18049e16b38e7d06814708",
      "closedAt": "2019-08-29T15:43:20Z",
      "mergedAt": "2019-08-29T15:43:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "735fc60e1819dbe2274716166b45e635ae8813d6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNTUyMTE5",
          "commit": {
            "abbreviatedOid": "685f5f9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-29T15:43:12Z",
          "updatedAt": "2019-08-29T15:43:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyMzY1OTY4",
      "title": "make it clear you can have more than one dohns",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/26",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-29T15:08:37Z",
      "updatedAt": "2019-08-29T16:19:20Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "f3a0ec9fd4e42ecdebff2c2d7cd0e54a5cc6831a",
      "headRepository": null,
      "headRefName": "mcmanus/more-than-one-ns",
      "headRefOid": "56272a198130137f56164afd4e2ee8586565a78e",
      "closedAt": "2019-08-29T16:19:19Z",
      "mergedAt": "2019-08-29T16:19:19Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2e2460fb57587f1b412f2dec94ef9576b520779d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNTczNDI4",
          "commit": {
            "abbreviatedOid": "56272a1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Indeed, this is a good point to clarify.",
          "createdAt": "2019-08-29T16:18:15Z",
          "updatedAt": "2019-08-29T16:18:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNDIwMjU1",
      "title": "make push non normative",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/32",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-29T17:28:20Z",
      "updatedAt": "2019-08-29T18:25:19Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "2e2460fb57587f1b412f2dec94ef9576b520779d",
      "headRepository": null,
      "headRefName": "mcmanus/chiller-push",
      "headRefOid": "2960416db493feb8e98d5475817e3889ae95556e",
      "closedAt": "2019-08-29T18:25:19Z",
      "mergedAt": "2019-08-29T18:25:19Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "704cdf5878c6906de56e9eaf87e1a4cae6e5cae3"
      },
      "comments": [
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "my thought here is we just want to avoid being prescriptive about HTTP without reason... so of course an HTTP server may PUSH because it may always do so :) so I just softened it to be some advice about why it might make sense to do so.",
          "createdAt": "2019-08-29T17:38:13Z",
          "updatedAt": "2019-08-29T17:38:13Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNjQxNzQ2",
          "commit": {
            "abbreviatedOid": "2960416"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-29T18:25:12Z",
          "updatedAt": "2019-08-29T18:25:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNDk3OTU4",
      "title": "notes on geo dns, performance, and obscuring ip addresses",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/37",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I don't know if this is the right way to tackle the topic - but its going to be a big one and I figured I would at least take a poke at it. wdyt?\r\n\r\nIt also makes me wonder if connections with a designated doh server should be encouraged (!) to use full /32 or /128 ECS in order to signal to the server that's an accurate thing to use",
      "createdAt": "2019-08-29T21:17:15Z",
      "updatedAt": "2019-08-30T15:35:22Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "704cdf5878c6906de56e9eaf87e1a4cae6e5cae3",
      "headRepository": null,
      "headRefName": "mcmanus/ecs-1",
      "headRefOid": "bbc8535a2a7cc0f1bdb3e4dc5f36460de43de8bd",
      "closedAt": "2019-08-30T15:35:22Z",
      "mergedAt": "2019-08-30T15:35:22Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "cce67e1a492b3d7e1025314f30af8aa6d85ff78c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNzMzMDU2",
          "commit": {
            "abbreviatedOid": "8a6c5bd"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2019-08-29T21:30:34Z",
          "updatedAt": "2019-08-29T21:34:42Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nrecursive resolver by the stub using EDNS0 Client Subnet which is a\r\n```",
              "createdAt": "2019-08-29T21:30:34Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nperformance to the client.\r\n```",
              "createdAt": "2019-08-29T21:30:48Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nAdaptive DNS makes the observation that this\r\n```",
              "createdAt": "2019-08-29T21:31:00Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 9,
              "body": "\"Alternatively\" reads odd to me. Perhaps: \"In contrast, traditional DNS recursive resolvers forward client IP addresses upstream using EDNS0 Client Subnet (ECS). DoH discourages this practice for privacy reasons.\"",
              "createdAt": "2019-08-29T21:32:39Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nreturned to the client.\r\n```",
              "createdAt": "2019-08-29T21:33:04Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2019-08-29T21:33:25Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nBased on these properties, it makes sense to optimize for the number of\r\n```",
              "createdAt": "2019-08-29T21:33:48Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNzM1MzAw",
          "commit": {
            "abbreviatedOid": "8a6c5bd"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "Looking good!",
          "createdAt": "2019-08-29T21:35:44Z",
          "updatedAt": "2019-08-29T21:41:55Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nOne of the challenges with cloud-based DNS approaches, such as Adaptive\r\n```",
              "createdAt": "2019-08-29T21:35:44Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nDNS, is that the address of the obfuscated stub resolver can be\r\n```",
              "createdAt": "2019-08-29T21:36:28Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 23,
              "body": "Saying that \"it makes sense to optimize for the number of connections\" is both a bit passive, and unclear.\r\n\r\nHow about:\r\n`Based on these properties, clients SHOULD prefer using connections to addresses obtained from a Designated DoH Server whenever possible, and limit the number of connections to addresses obtained through obfuscated mechanisms. If a client detects that a name has an associated Designated DoH Server after previously requesting an answer over an obfuscated method, it SHOULD generate a new query to the designated server to allow connections to use a preferred address.`",
              "createdAt": "2019-08-29T21:41:49Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDA5MDQ0",
          "commit": {
            "abbreviatedOid": "9bedd15"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T12:44:01Z",
          "updatedAt": "2019-08-30T12:44:01Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "that was kinda of word salad. let's take a look at the update",
              "createdAt": "2019-08-30T12:44:01Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDEzNTYy",
          "commit": {
            "abbreviatedOid": "c988238"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T12:53:18Z",
          "updatedAt": "2019-08-30T12:53:18Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "lets take a look at the update. I made it less passive, but would still prefer the advice about lifetimes be server driven where possible so I kept some ttl language. Its not a must have - but I think the point is workable.",
              "createdAt": "2019-08-30T12:53:18Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDE1Njgy",
          "commit": {
            "abbreviatedOid": "c988238"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-30T12:57:33Z",
          "updatedAt": "2019-08-30T12:58:57Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "(passive->active)\r\n\r\n```suggestion\r\nEDNS0 Client Subnet feature. DoH discourages this practice\r\n```",
              "createdAt": "2019-08-30T12:57:33Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\ncontrols the value of the addressing information being\r\n```",
              "createdAt": "2019-08-30T12:58:17Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nDesignated DoH Server. This is true because the Designated DoH Server\r\n```",
              "createdAt": "2019-08-30T12:58:23Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTAzOTYz",
          "commit": {
            "abbreviatedOid": "80ca4e9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T15:32:12Z",
          "updatedAt": "2019-08-30T15:32:12Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nAdaptive DNS, is that the address of the recursive resolver is\r\n```",
              "createdAt": "2019-08-30T15:32:12Z",
              "updatedAt": "2019-08-30T15:32:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTA0NTk1",
          "commit": {
            "abbreviatedOid": "bbc8535"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-30T15:33:23Z",
          "updatedAt": "2019-08-30T15:33:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNDk5NzUw",
      "title": "Add, per invitation, myself to the author list",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/38",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "feel free to rethink this idea Tommy :)",
      "createdAt": "2019-08-29T21:23:02Z",
      "updatedAt": "2019-08-30T15:48:16Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "704cdf5878c6906de56e9eaf87e1a4cae6e5cae3",
      "headRepository": null,
      "headRefName": "mcmanus/vanity",
      "headRefOid": "44d4715a9c2f02dcdc1add310d7ad63aad0853a1",
      "closedAt": "2019-08-30T15:45:20Z",
      "mergedAt": "2019-08-30T15:45:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6d31f88b88bff4808ec37d67ffc56a0cf17e4aac"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Alphabetical order!",
          "createdAt": "2019-08-29T21:28:07Z",
          "updatedAt": "2019-08-29T21:28:07Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNzMyNTk3",
          "commit": {
            "abbreviatedOid": "44d4715"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2019-08-29T21:29:27Z",
          "updatedAt": "2019-08-29T21:29:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Alphabetical, please!",
              "createdAt": "2019-08-29T21:29:27Z",
              "updatedAt": "2019-08-29T21:29:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNzMzMTA1",
          "commit": {
            "abbreviatedOid": "44d4715"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-29T21:30:40Z",
          "updatedAt": "2019-08-29T21:30:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "That's @chris-wood's pet peeve. I care less about order =)",
              "createdAt": "2019-08-29T21:30:40Z",
              "updatedAt": "2019-08-29T21:30:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxNzMzMTYy",
          "commit": {
            "abbreviatedOid": "44d4715"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-29T21:30:47Z",
          "updatedAt": "2019-08-29T21:30:47Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTEyNjE2",
          "commit": {
            "abbreviatedOid": "44d4715"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T15:48:16Z",
          "updatedAt": "2019-08-30T15:48:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "(Will swap in a later PR!)",
              "createdAt": "2019-08-30T15:48:16Z",
              "updatedAt": "2019-08-30T15:48:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 39,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNTMxMDYz",
      "title": "Clarify the scope and use of the extended configuration.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/39",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Address #31 ",
      "createdAt": "2019-08-29T23:40:16Z",
      "updatedAt": "2019-08-30T15:31:06Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "704cdf5878c6906de56e9eaf87e1a4cae6e5cae3",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/clarifydomainlist",
      "headRefOid": "49d69ef5ba649e19ffad8395e967f44477d3b45d",
      "closedAt": "2019-08-30T15:31:06Z",
      "mergedAt": "2019-08-30T15:31:05Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "af5fef9c028dc3aaa8cd06f9672c19bb0811fb12"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxODE0NTE0",
          "commit": {
            "abbreviatedOid": "308ce53"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-08-30T03:31:13Z",
          "updatedAt": "2019-08-30T03:31:22Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nwhich this server is designated. Clients may use this list to optimize lookups for common names.\r\n```",
              "createdAt": "2019-08-30T03:31:13Z",
              "updatedAt": "2019-08-30T15:30:29Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n```",
              "createdAt": "2019-08-30T03:31:18Z",
              "updatedAt": "2019-08-30T15:30:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxOTk2NzA0",
          "commit": {
            "abbreviatedOid": "308ce53"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "closes #31 ",
          "createdAt": "2019-08-30T12:17:44Z",
          "updatedAt": "2019-08-30T12:17:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 40,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNTMzNzE4",
      "title": "Discourage using a local DoH server as a proxy",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/40",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "See #28 ",
      "createdAt": "2019-08-29T23:56:46Z",
      "updatedAt": "2019-08-30T16:10:23Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "6d31f88b88bff4808ec37d67ffc56a0cf17e4aac",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/discouragelocalproxy",
      "headRefOid": "38b422c953ce6dd6cc6d9374c910cfbf62ac34b6",
      "closedAt": "2019-08-30T16:10:23Z",
      "mergedAt": "2019-08-30T16:10:23Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "81dda87343db4025913f7ec79c6f686751176efb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgxODE0NzQ0",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think this one needs more clarification on the distance metric, and perhaps clarifying why this practice should be avoided. ",
          "createdAt": "2019-08-30T03:32:34Z",
          "updatedAt": "2019-08-30T03:33:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "How does a Target know that a local DoH server is close to a client?",
              "createdAt": "2019-08-30T03:32:34Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            },
            {
              "originalPosition": 7,
              "body": "This seems difficult to know in practice. How might one implement this? What's the metric for distance here? Number of AS hops or actual geographical distance?",
              "createdAt": "2019-08-30T03:33:29Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDAxNTg5",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T12:27:55Z",
          "updatedAt": "2019-08-30T12:28:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The right metric is probably not distance but potential userbase size. I have no idea how to measure that - it seems more like a practice to simply avoid.",
              "createdAt": "2019-08-30T12:27:55Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            },
            {
              "originalPosition": 5,
              "body": "because the algorithm here suggests the client use a proxy that is best performing,.. and it makes sense that would often be a local resolver.. so you can infer from there. random selection wouldn't have that problem, but has an obvious different one.\r\n\r\n",
              "createdAt": "2019-08-30T12:28:03Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDA0NDA0",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T12:34:02Z",
          "updatedAt": "2019-08-30T12:34:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Sure, but that doesn't mean all clients use the same metric for \"performance.\"",
              "createdAt": "2019-08-30T12:34:02Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDA1NzYy",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T12:37:02Z",
          "updatedAt": "2019-08-30T12:37:02Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Hmm... I don't think candidate client set size is relevant here. The claim is that the Proxy's address reveals information about the client. That can be true regardless of the candidate client set size. ",
              "createdAt": "2019-08-30T12:37:02Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTEzMTYx",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T15:49:17Z",
          "updatedAt": "2019-08-30T15:49:17Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Maybe I should be more to the point in the text; effectively, it's \"don't use a DoH server assigned by your Wi-Fi router unless you detect that it's configuring 8.8.8.8 or something for you; and you may be okay to use an cellular network resolver as proxy if it's one that serves a pretty large area\"",
              "createdAt": "2019-08-30T15:49:17Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTEzNzM2",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T15:50:19Z",
          "updatedAt": "2019-08-30T15:50:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The Target won't know for sure. What we want to avoid is having it become standard practice for the client to use the local resolver as a proxy, such that if that's the majority case, the servers will be able to guess the location of clients most of the time.",
              "createdAt": "2019-08-30T15:50:19Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTE4MTY3",
          "commit": {
            "abbreviatedOid": "5218752"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T15:58:49Z",
          "updatedAt": "2019-08-30T15:58:50Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I guess I'm not overly persuaded by the goal to hide the client's location, which can be quiet... fuzzy. Though, to Patrick's point below, it depends on the client's anonymity set. If there's but one client in a certain region, then yes, learning the location is bad. In contrast, learning the location of a client who sits among many other clients is less bad. \r\n\r\nI think the desired goal is that the Target not learn an identifier unique to the client, and approximate location is perhaps one input to that function. If we want to hide it, maybe we should amend this text as such by adding, for example, \"... a client SHOULD NOT select one of these servers as an Obfuscation Proxy. Doing so may reveal the client's location to the Target, which may in turn help deanonymize the client,\" or something.",
              "createdAt": "2019-08-30T15:58:49Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTIyMjU5",
          "commit": {
            "abbreviatedOid": "2af6bc2"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T16:07:11Z",
          "updatedAt": "2019-08-30T16:07:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Okay included that language, please check",
              "createdAt": "2019-08-30T16:07:11Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTIyMzkx",
          "commit": {
            "abbreviatedOid": "2af6bc2"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-08-30T16:07:28Z",
          "updatedAt": "2019-08-30T16:07:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Added some more explicit text on this, would still like to have the point made.",
              "createdAt": "2019-08-30T16:07:28Z",
              "updatedAt": "2019-08-30T16:10:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTIzNDI4",
          "commit": {
            "abbreviatedOid": "2af6bc2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2019-08-30T16:09:40Z",
          "updatedAt": "2019-08-30T16:09:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyNzQwNzI0",
      "title": "change MUST POST into SHOULD NOT cache",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/41",
      "state": "MERGED",
      "author": "mcmanus",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "closes #24 ",
      "createdAt": "2019-08-30T13:30:16Z",
      "updatedAt": "2019-09-09T16:47:27Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "704cdf5878c6906de56e9eaf87e1a4cae6e5cae3",
      "headRepository": null,
      "headRefName": "mcmanus/no-cache",
      "headRefOid": "eedc26e7948e4ef5b1f694faff4fd3a41cdb3cd1",
      "closedAt": "2019-09-09T16:47:27Z",
      "mergedAt": "2019-09-09T16:47:27Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1e9ff306e84548e063eb725ceaf348d24af81139"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMDk5MTY1",
          "commit": {
            "abbreviatedOid": "2054fdb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with some edits -- thanks!",
          "createdAt": "2019-08-30T15:23:42Z",
          "updatedAt": "2019-08-30T15:26:15Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nObfuscated DoH messages have no cache value since both requests and responses are encrypted using ephemeral key material.\r\n```",
              "createdAt": "2019-08-30T15:23:42Z",
              "updatedAt": "2019-09-09T16:46:45Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nheaders that prevent unhelpful cache storage of these messages.\r\n```",
              "createdAt": "2019-08-30T15:23:59Z",
              "updatedAt": "2019-09-09T16:46:45Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n```",
              "createdAt": "2019-08-30T15:25:51Z",
              "updatedAt": "2019-09-09T16:46:45Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThus, clients SHOULD use HTTP and DoH methods and\r\n```",
              "createdAt": "2019-08-30T15:26:01Z",
              "updatedAt": "2019-09-09T16:46:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgyMTExNzMx",
          "commit": {
            "abbreviatedOid": "2054fdb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good to me",
          "createdAt": "2019-08-30T15:46:33Z",
          "updatedAt": "2019-08-30T15:46:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEzMzc4NTIx",
      "title": "Apply updates from Fred's review.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/43",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-09-02T23:09:45Z",
      "updatedAt": "2019-09-03T16:00:31Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "1b030e6b5eede5a313616ce425d8e23070841ae0",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/edits",
      "headRefOid": "678a6cc15aab41569433765449a52e357481aaf6",
      "closedAt": "2019-09-03T16:00:31Z",
      "mergedAt": "2019-09-03T16:00:31Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6f211956ee880c899aa7435004747bf6c7c62bfb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzMTAwNjg0",
          "commit": {
            "abbreviatedOid": "678a6cc"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-03T16:00:25Z",
          "updatedAt": "2019-09-03T16:00:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE0MTUwNzc2",
      "title": "RRType Redo",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/44",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Option for how we can move the URI and public key in DNS records to use HTTPSSVC-style parameters.\r\n\r\nThis proposal registers two parameters into the SVCB/HTTPSSVC format rather than creating a new RRType.\r\n\r\nThings that still need to be fleshed out:\r\n- Should the recommendation be to have most of your domains point to one alias record for your DoH deployment? That's less burden to sign and maintain.\r\n- Ideally, I'd like this to not require adding to the list of things you look up, so that's why I allow it in your HTTPSSVC right now. I.e., it's something you get in the same way you get your ESNI key. Not sure if that is ultimately the best thing though. Thoughts appreciated.\r\n- I don't like having to specify \"this can go in either HTTPSSVC or SVCB\", which is based on the current proposals in that document about making things more generic. I've invited some of the authors to this repo to get their input.",
      "createdAt": "2019-09-04T17:49:15Z",
      "updatedAt": "2019-09-05T16:58:20Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "6f211956ee880c899aa7435004747bf6c7c62bfb",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/rrtype-redo",
      "headRefOid": "b4136bf356ca3d6672cc38705ef217df9a79b458",
      "closedAt": "2019-09-05T16:58:20Z",
      "mergedAt": "2019-09-05T16:58:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9a8b0d789c1da7a937f81b0a90f36a992a940ce7"
      },
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure I understand the whole Adaptive DNS design yet, but I can try to answer the specific points you raised:\r\n\r\n> Ideally, I'd like this to not require adding to the list of things you look up, so that's why I allow it in your HTTPSSVC right now. I.e., it's something you get in the same way you get your ESNI key. Not sure if that is ultimately the best thing though. Thoughts appreciated.\r\n\r\nHTTPSSVC answers the question \"How should I connect to this origin?\".  It sounds like you would answer \"You should start by retrying this query through my preferred resolver $foo\".  That seems like a fair thing to include in HTTPSSVC.\r\n\r\n> I don't like having to specify \"this can go in either HTTPSSVC or SVCB\", which is based on the current proposals in that document about making things more generic. I've invited some of the authors to this repo to get their input.\r\n\r\nI think we would say \"HTTPSSVC is a kind of SVCB\", so I think you can just pick one, and clarify once that it applies broadly, e.g. \"The primary source for an origin's Designated DoH Server configuration is its SVCB record.  (For HTTPS origins, this is an HTTPSSVC record.)\".  Then just use \"SVCB\" throughout.\r\n\r\nAdmittedly, \"SVCB\" has two meanings: the concrete RRType, and the broader family of variants.  It's possible we can improve that terminology.",
          "createdAt": "2019-09-04T21:44:15Z",
          "updatedAt": "2019-09-04T21:44:15Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Thanks, @bemasc. I've reduced the references to just \"SVCB\" in most places, except for the original introduction and example. It *would* be nice to have some distinction in terminology between the category of types and the specific type.",
          "createdAt": "2019-09-04T23:50:09Z",
          "updatedAt": "2019-09-04T23:50:09Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODAxNjYw",
          "commit": {
            "abbreviatedOid": "ab49bdd"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM! My comments are only suggestions for improvements. ",
          "createdAt": "2019-09-04T18:12:55Z",
          "updatedAt": "2019-09-04T18:20:19Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThis record provides the URI Template of the server and the public\r\n```",
              "createdAt": "2019-09-04T18:12:55Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 39,
              "body": "Shouldn't this be \"for a specific resolver\"?",
              "createdAt": "2019-09-04T18:13:17Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 50,
              "body": "What would the client query to get this record? Can we provide that example?",
              "createdAt": "2019-09-04T18:13:59Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 41,
              "body": "Should we list the optional list of domains for which the DoH server is designated?",
              "createdAt": "2019-09-04T18:15:37Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nClients MUST ignore any record containing a designated DoH server URI without DNSSEC {{!RFC4033}} validation.\r\n```",
              "createdAt": "2019-09-04T18:16:59Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n```",
              "createdAt": "2019-09-04T18:17:06Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA2MDIx",
          "commit": {
            "abbreviatedOid": "ab49bdd"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-04T18:20:28Z",
          "updatedAt": "2019-09-04T18:20:28Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA3ODY0",
          "commit": {
            "abbreviatedOid": "ab49bdd"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:23:50Z",
          "updatedAt": "2019-09-04T18:23:50Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I don't think so, in this record? That's part of the PvD configuration. But maybe!",
              "createdAt": "2019-09-04T18:23:50Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA4Nzk0",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:25:15Z",
          "updatedAt": "2019-09-04T18:25:16Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Fixed!",
              "createdAt": "2019-09-04T18:25:16Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA4OTAx",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:25:27Z",
          "updatedAt": "2019-09-04T18:25:27Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Clarified!",
              "createdAt": "2019-09-04T18:25:27Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA5MDYz",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:25:43Z",
          "updatedAt": "2019-09-04T18:25:43Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "Applied!",
              "createdAt": "2019-09-04T18:25:43Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA5MTg4",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:25:55Z",
          "updatedAt": "2019-09-04T18:25:56Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Reworded this a bit to clarify.",
              "createdAt": "2019-09-04T18:25:55Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODA5NzY3",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:26:54Z",
          "updatedAt": "2019-09-04T18:26:54Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I only ask because it's mentioned above in the list of information associated with each server.",
              "createdAt": "2019-09-04T18:26:54Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODE0Nzgw",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T18:35:32Z",
          "updatedAt": "2019-09-04T18:35:32Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "they have to ignore the doh uri, not the whole dnssvc record right?",
              "createdAt": "2019-09-04T18:35:32Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzODE1OTcy",
          "commit": {
            "abbreviatedOid": "eeec4c3"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-04T18:37:32Z",
          "updatedAt": "2019-09-04T18:37:32Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzOTAyOTg2",
          "commit": {
            "abbreviatedOid": "d0f6083"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-04T21:20:08Z",
          "updatedAt": "2019-09-04T21:20:09Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Correct. Reworded again to clarify.",
              "createdAt": "2019-09-04T21:20:08Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzOTU5NTgz",
          "commit": {
            "abbreviatedOid": "ad75bed"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good! Only minor editorial nits, etc.",
          "createdAt": "2019-09-05T00:01:08Z",
          "updatedAt": "2019-09-05T00:04:19Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Nit: `the HTTPSSVC variant of SVCB` wording? Either \"a\" or \"the\"?",
              "createdAt": "2019-09-05T00:01:09Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 71,
              "body": "Do we want to give any indication of when/why a client might choose to do this?",
              "createdAt": "2019-09-05T00:01:57Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            },
            {
              "originalPosition": 42,
              "body": "Nit: `before` seems an odd word choice -- it implies a timing condition vs. a gating condition of \"if this was DNSSEC then you're good to go, otherwise no\".",
              "createdAt": "2019-09-05T00:03:55Z",
              "updatedAt": "2019-09-05T00:27:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzOTY1Njcy",
          "commit": {
            "abbreviatedOid": "b4136bf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-05T00:27:32Z",
          "updatedAt": "2019-09-05T00:27:32Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Fixed!",
              "createdAt": "2019-09-05T00:27:32Z",
              "updatedAt": "2019-09-05T00:27:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzOTY1Njk3",
          "commit": {
            "abbreviatedOid": "b4136bf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-05T00:27:40Z",
          "updatedAt": "2019-09-05T00:27:40Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Reworded!",
              "createdAt": "2019-09-05T00:27:40Z",
              "updatedAt": "2019-09-05T00:27:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjgzOTY2MDI0",
          "commit": {
            "abbreviatedOid": "b4136bf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-05T00:29:15Z",
          "updatedAt": "2019-09-05T00:29:16Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Opened #45 for this",
              "createdAt": "2019-09-05T00:29:15Z",
              "updatedAt": "2019-09-05T00:29:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE0NjEwMjM4",
      "title": "Remove well-known, try relying on the media type",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/46",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "This is intended to satisfy #27",
      "createdAt": "2019-09-05T17:02:52Z",
      "updatedAt": "2019-09-09T15:50:16Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "9a8b0d789c1da7a937f81b0a90f36a992a940ce7",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/remove-wellknown",
      "headRefOid": "dc6b72991166c63fca72c3d84a04f660e3cdbea9",
      "closedAt": "2019-09-09T15:50:16Z",
      "mergedAt": "2019-09-09T15:50:16Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8a25aa55484a33c3dc9f317d7fc46109268f739e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg0NDk0NDE5",
          "commit": {
            "abbreviatedOid": "3c7b556"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2019-09-05T19:39:45Z",
          "updatedAt": "2019-09-05T19:39:45Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg0NDk4NTUy",
          "commit": {
            "abbreviatedOid": "3c7b556"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good! I think this helps avoid some of the concerns around .well-known and provides a workable solution for folks hosting multiple servers on a single host.",
          "createdAt": "2019-09-05T19:47:39Z",
          "updatedAt": "2019-09-05T19:53:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Wording nit: Is this \"off of the path\"? Perhaps:\r\n```suggestion\r\nand with empty query and fragment components.\r\n```",
              "createdAt": "2019-09-05T19:47:39Z",
              "updatedAt": "2019-09-05T20:08:22Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nThe following exchange shows an example of a client retrieving a Web PvD configuration\r\n```",
              "createdAt": "2019-09-05T19:48:02Z",
              "updatedAt": "2019-09-05T20:08:22Z"
            },
            {
              "originalPosition": 19,
              "body": "Possible nit\r\n```suggestion\r\nThe client sends:\r\n```",
              "createdAt": "2019-09-05T19:48:33Z",
              "updatedAt": "2019-09-05T20:08:22Z"
            },
            {
              "originalPosition": 29,
              "body": "If above, then:\r\n```suggestion\r\nAnd the server replies:\r\n```",
              "createdAt": "2019-09-05T19:48:47Z",
              "updatedAt": "2019-09-05T20:08:22Z"
            },
            {
              "originalPosition": 41,
              "body": "Is it common to give more verbose description for status codes? If not, then ignore this :)\r\n```suggestion\r\nreply with HTTP status code 415 (Unsupported Media Type, {{!RFC7231}}).\r\n```",
              "createdAt": "2019-09-05T19:51:25Z",
              "updatedAt": "2019-09-05T20:08:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 48,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE1NjAzODMz",
      "title": "Manually specified DoH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/48",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Add a description of how a manually-specified server interleaves with the client resolution algorithm.",
      "createdAt": "2019-09-09T15:59:43Z",
      "updatedAt": "2019-09-09T20:55:45Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "8a25aa55484a33c3dc9f317d7fc46109268f739e",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/manually-specified-doh",
      "headRefOid": "f5dde775ab6d9ce88796fa16916aec7f9c7ea10e",
      "closedAt": "2019-09-09T20:55:45Z",
      "mergedAt": "2019-09-09T20:55:45Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e89c0f119e75db438f1b2ec085d7cdf3a312ce55"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg1NjE3MjE5",
          "commit": {
            "abbreviatedOid": "586ff0e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2019-09-09T16:05:08Z",
          "updatedAt": "2019-09-09T16:05:08Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg1NjE3NDg5",
          "commit": {
            "abbreviatedOid": "586ff0e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-09T16:05:35Z",
          "updatedAt": "2019-09-09T16:05:36Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nand locally-accessible names remain accessible while all other names are resolved\r\n```",
              "createdAt": "2019-09-09T16:05:35Z",
              "updatedAt": "2019-09-09T16:42:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg1NzA0MTg0",
          "commit": {
            "abbreviatedOid": "f5dde77"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-09T18:37:30Z",
          "updatedAt": "2019-09-09T18:37:30Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg1NzI5MzQ1",
          "commit": {
            "abbreviatedOid": "f5dde77"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2019-09-09T19:24:18Z",
          "updatedAt": "2019-09-09T19:24:48Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "At some point we should have a discussion about a super-strict user wanting to resolve via their own resolver through a personal VPN (which usually isn't granting access to some subset of resources), but that seems somewhat orthogonal here.",
              "createdAt": "2019-09-09T19:24:18Z",
              "updatedAt": "2019-09-09T19:24:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 49,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE2OTg4NjU3",
      "title": "Rename Obfuscated DoH to Oblivious DoH",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/49",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "It was brought up that \"obfuscation\" has a lot of other connotations, and may be a bit misleading from a security standpoint. Using Oblivious here may make more sense. Trying out the wording!",
      "createdAt": "2019-09-12T16:21:41Z",
      "updatedAt": "2019-09-12T18:15:06Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "e89c0f119e75db438f1b2ec085d7cdf3a312ce55",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/oblivious-doh",
      "headRefOid": "7bf9f5bc1e2fce77a3b3b58af1276194fe847622",
      "closedAt": "2019-09-12T16:27:19Z",
      "mergedAt": "2019-09-12T16:27:19Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e2569fc555638ec3da70bdef8615dfa1a927fa63"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM -- merging!",
          "createdAt": "2019-09-12T16:27:15Z",
          "updatedAt": "2019-09-12T16:27:15Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "there are downsides to all of these choices. \"blinded\" and \"proxied\" might work too\r\n\r\noblivious can, out of context, just indicate 'naive' or 'confused' and those are not attractive either. \r\n",
          "createdAt": "2019-09-12T17:04:05Z",
          "updatedAt": "2019-09-12T17:04:05Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@mcmanus do you have a preference for Blinded? I tried doing just \"proxied\", but it didn't seem to have the right implications.\r\n\r\nThe nice thing about oblivious to me is that people have context for it in the discussion.",
          "createdAt": "2019-09-12T17:57:09Z",
          "updatedAt": "2019-09-12T17:57:09Z"
        },
        {
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "body": "I prefer blinded, but its not a big deal. I like the term \"blinding\nnetwork\" to talk about the recursives..\n\nOn Thu, Sep 12, 2019 at 1:57 PM Tommy Pauly <notifications@github.com>\nwrote:\n\n> @mcmanus <https://github.com/mcmanus> do you have a preference for\n> Blinded? I tried doing just \"proxied\", but it didn't seem to have the right\n> implications.\n>\n> The nice thing about oblivious to me is that people have context for it in\n> the discussion.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/49?email_source=notifications&email_token=AAB7TM56AESXCP27MSGTUDLQJJ7H5A5CNFSM4IWGYIF2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6SXHCY#issuecomment-530936715>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB7TM3EOF2YN3LS2LGFYNTQJJ7H5ANCNFSM4IWGYIFQ>\n> .\n>\n",
          "createdAt": "2019-09-12T18:14:45Z",
          "updatedAt": "2019-09-12T18:14:45Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we should stick with oblivious. In this context (DNS), the intent is clear and well known.",
          "createdAt": "2019-09-12T18:15:06Z",
          "updatedAt": "2019-09-12T18:15:06Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3NTU0MzIz",
          "commit": {
            "abbreviatedOid": "7bf9f5b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-12T16:27:06Z",
          "updatedAt": "2019-09-12T16:27:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE3MTExMDAy",
      "title": "Describe single- and multi- CDN cases",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/52",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Try to address #50; describe server deployment considerations. It we have other items to list, let me know!",
      "createdAt": "2019-09-12T22:21:21Z",
      "updatedAt": "2019-09-17T16:14:13Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "e2569fc555638ec3da70bdef8615dfa1a927fa63",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/cdn-considerations",
      "headRefOid": "a3b1c9ad6b4c91c13468db47ca25f36eab3dcf47",
      "closedAt": "2019-09-17T16:14:13Z",
      "mergedAt": "2019-09-17T16:14:13Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "72371519fa9a82c30e9a28fcbe1297b8f309e863"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3NzM4NDQ0",
          "commit": {
            "abbreviatedOid": "14929ed"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good! A few notes.",
          "createdAt": "2019-09-12T22:29:56Z",
          "updatedAt": "2019-09-12T22:38:04Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I assume we don't want any mention of explicit signaling here about client behavior?",
              "createdAt": "2019-09-12T22:29:56Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n- multiple designated DoH servers that are advertised via SVCB DNS Records; or,\r\n```",
              "createdAt": "2019-09-12T22:31:09Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\noperated by a party that is aware of both content providers and can manage\r\n```",
              "createdAt": "2019-09-12T22:31:54Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 38,
              "body": "The point here is that this single resolver may not be aware of both deployments, something to that effect might be worth adding.",
              "createdAt": "2019-09-12T22:33:55Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 44,
              "body": "Minor: To get rid of \"one of the ___ is\"\r\n```\r\nOne of the main privacy benefits of resolution using designated DoH servers is\r\n the fact that a server can be designated by many different names within\r\n one or more domains.\r\n```\r\n->\r\n```\r\nThe ability to designate a server for many different names within one or more domains \r\nprovides one of the main privacy benefits of resolution using designated DoH servers.\r\n```",
              "createdAt": "2019-09-12T22:35:51Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\none or more domains. This limits the amount of information leaked to an attacker\r\n```",
              "createdAt": "2019-09-12T22:36:11Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 45,
              "body": "In combination with the previous:\r\n```suggestion\r\nobserving traffic between a client and a DoH server; it only tells\r\n```",
              "createdAt": "2019-09-12T22:36:25Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 54,
              "body": "\ud83d\udc4d",
              "createdAt": "2019-09-12T22:37:23Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nBeyond the benefits to privacy, having a larger number of names designate\r\n```",
              "createdAt": "2019-09-12T22:37:47Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3NzQzMjI1",
          "commit": {
            "abbreviatedOid": "4e061a4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-12T22:45:56Z",
          "updatedAt": "2019-09-12T22:45:57Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Can you clarify what you mean?",
              "createdAt": "2019-09-12T22:45:56Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3NzQ0Njk1",
          "commit": {
            "abbreviatedOid": "4e061a4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-12T22:51:08Z",
          "updatedAt": "2019-09-12T22:51:09Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Updated!",
              "createdAt": "2019-09-12T22:51:09Z",
              "updatedAt": "2019-09-12T22:51:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3NzQ0NzE5",
          "commit": {
            "abbreviatedOid": "a3b1c9a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-12T22:51:14Z",
          "updatedAt": "2019-09-12T22:51:14Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Reworded!",
              "createdAt": "2019-09-12T22:51:14Z",
              "updatedAt": "2019-09-12T22:51:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg3Nzk1MjQy",
          "commit": {
            "abbreviatedOid": "14929ed"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-13T03:06:51Z",
          "updatedAt": "2019-09-13T03:06:52Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "A server could also receive information from the client explicitly, say location, or membership in a given population, etc.\r\nSimilarly, we\u2019ve got the bit about a server giving a client instructions about how best to try and connect, backup severs, etc. \r\nIt seems like some of that could go in deployment considerations, but I\u2019m not really sure how much of that should be here vs. some other draft to actually think that through. ",
              "createdAt": "2019-09-13T03:06:51Z",
              "updatedAt": "2019-09-13T03:06:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjg4MDg5NjA0",
          "commit": {
            "abbreviatedOid": "a3b1c9a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-13T15:25:29Z",
          "updatedAt": "2019-09-13T15:25:29Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Ah, I see. Yeah, I think having explicit communication here is more in the scope of follow-up work.",
              "createdAt": "2019-09-13T15:25:29Z",
              "updatedAt": "2019-09-13T15:25:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE4NTczMjM0",
      "title": "Add considerations for local network deployments",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/53",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Add local network considerations, for #42.",
      "createdAt": "2019-09-17T23:55:52Z",
      "updatedAt": "2019-09-20T17:38:02Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "72371519fa9a82c30e9a28fcbe1297b8f309e863",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/local-network-considerations",
      "headRefOid": "bb46ab0bfb2fa25bee1d2862cc990cfa3f9e4504",
      "closedAt": "2019-09-20T17:38:02Z",
      "mergedAt": "2019-09-20T17:38:02Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1ce01e29c6253c5c5cef1fbf1f7d632c5bef47c1"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@mstojens thanks for the comments. I've modified the text in the places you mentioned, please take another look!",
          "createdAt": "2019-09-19T16:20:15Z",
          "updatedAt": "2019-09-19T16:20:15Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwMjA0MTk4",
          "commit": {
            "abbreviatedOid": "a7628b7"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Line 667: SHOULD not be done silently by whom? Platforms? Networks? Both? In the event that I, as a platform, detect encrypted DNS is not possible, should I surface anything in UX other than \"No Internet\"?\r\n\r\nLine 690: As an engineer, I support this stance; as a user experience designer, this makes me nervous. While web browsers already have an established paradigm of rejecting connectivity because they know better (\"This site is not secure...\"), platforms do not AFAICT. Either we can or cannot negotiate network connectivity and we do so. What should platform guidance to users at keyboards be at runtime here? I think we need some additional content talking about how remediation should work here as it's a new concept for platforms and ideally we'll all want to deal with it in a similar fashion. Do we say nothing and claim it's blocked? Do we say we're being blocked from name resolution? Do we say it'll start working again if you just check this box to accept network dictacted DNS?\r\n\r\nNits: line 624 typo (s/server/serve), ",
          "createdAt": "2019-09-18T21:11:14Z",
          "updatedAt": "2019-09-18T21:11:14Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODQ2Njg3",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-09-19T21:12:57Z",
          "updatedAt": "2019-09-19T22:00:09Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "In , \"from the name to DoH server,\" what's the name?",
              "createdAt": "2019-09-19T21:12:58Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nSee specific use cases in {{local-use-cases}} for cases in which a local resolver may still be used.\r\n```",
              "createdAt": "2019-09-19T21:13:40Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n## Local Use Cases {#local-use-cases}\r\n```",
              "createdAt": "2019-09-19T21:13:49Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nUse cases for selecting locally-provisioned resolvers may require different approaches for\r\n```",
              "createdAt": "2019-09-19T21:14:11Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\ndeployment and client resolution. The following list is not exhaustive, but provides guidance on how\r\n```",
              "createdAt": "2019-09-19T21:14:28Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nit must define an explicit provisioning domain, as defined in {{!I-D.ietf-intarea-provisioning-domains}}.\r\n```",
              "createdAt": "2019-09-19T21:15:47Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n## Designating Local DoH Servers {#designating-local-servers}\r\n```",
              "createdAt": "2019-09-19T21:17:19Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nuse that locally-configured resolver with names under \"private.example.org\" according to the rules in {{designating-local-servers}}.\r\n```",
              "createdAt": "2019-09-19T21:17:24Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n\"private.example.org\" in its PvD information along with a DoH URI template. Clients may then\r\n```",
              "createdAt": "2019-09-19T21:17:59Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nIn general, clients SHOULD create designated DoH server associations when they can validate a SVCB\r\n```",
              "createdAt": "2019-09-19T21:18:21Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 58,
              "body": "This is the case where the deployment signs all names, right? Can we remove it from the list of models?",
              "createdAt": "2019-09-19T21:19:18Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nwhich may be undesirable for certain enterprise deployments. Alternatively, if the client trusts\r\n```",
              "createdAt": "2019-09-19T21:20:27Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 71,
              "body": "I think we should drop this option entirely. It seems dangerous even to mention as a possibility.",
              "createdAt": "2019-09-19T21:21:09Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 111,
              "body": "As with the above, I think this option should be removed.",
              "createdAt": "2019-09-19T21:23:07Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nblocking connections for filtering is indistinguishable from a malicious attack from\r\n```",
              "createdAt": "2019-09-19T21:23:44Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nsilently without informing users about the implications of such filtering.\r\n```",
              "createdAt": "2019-09-19T21:25:31Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 134,
              "body": "Hmm, I'm not sure this is what we want to say. It assumes the user will be able to make an informed decision about the filtering and respond accordingly. Perhaps we can hide that detail by saying, \"... this behavior SHOULD NOT be done silently without user consent\"?",
              "createdAt": "2019-09-19T21:26:35Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 136,
              "body": "```suggestion\r\nNetworks that try to interfere with connections to encrypted DNS resolvers without\r\n```",
              "createdAt": "2019-09-19T21:26:45Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 137,
              "body": "```suggestion\r\nindicating a requirement for filtering cannot be distinguished from misconfigurations\r\n```",
              "createdAt": "2019-09-19T21:26:55Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwNzUzMTA5",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Generally looking good, had a few editorial comments",
          "createdAt": "2019-09-19T18:15:58Z",
          "updatedAt": "2019-09-19T22:32:11Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Nit:\r\n```suggestion\r\nthe local network can serve names under \"private.example.org\", but do not have a way to validate\r\n```",
              "createdAt": "2019-09-19T18:15:58Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 74,
              "body": "I think it might be useful to provide an example of what would be considered sufficient trust here, or instead of offering it as an option simply state the properties of doing the local resolution first before the external servers without indicating that it would be a desirable option.",
              "createdAt": "2019-09-19T18:17:34Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 75,
              "body": "We've got three options here, can we state which one is best / if I'm setting this up for my own network, what should I prefer? A sentence about the properties of each, maybe in order of preference, might be interesting?",
              "createdAt": "2019-09-19T18:18:34Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 87,
              "body": "Double \"explicit\", perhaps \"clear\" or \"definitive\"\r\n```suggestion\r\nNote that having a DNSSEC-signed designation to the local resolver provides a clear indication\r\n```",
              "createdAt": "2019-09-19T18:46:20Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 104,
              "body": "```suggestion\r\nHowever, if such a network does not support explicitly advertising local names,\r\n```",
              "createdAt": "2019-09-19T22:27:39Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 107,
              "body": "Not sure what `direction` means here?\r\n```suggestion\r\nuse local resolvers. In addition, clients MAY choose to fall back to using direct\r\n```",
              "createdAt": "2019-09-19T22:28:31Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            },
            {
              "originalPosition": 110,
              "body": "fallback or fall back? `fall back` is used above and below\r\n```suggestion\r\nfall back behavior, so clients might want to inform users about this possible attack where\r\n```",
              "createdAt": "2019-09-19T22:29:48Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg0Mzk2",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T22:56:41Z",
          "updatedAt": "2019-09-19T22:56:41Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I prefer to avoid \"must\" (confusing with \"MUST\")",
              "createdAt": "2019-09-19T22:56:41Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg0Njc3",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T22:57:39Z",
          "updatedAt": "2019-09-19T22:57:39Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Same, I try to avoid \"may\"",
              "createdAt": "2019-09-19T22:57:39Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg0Nzky",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T22:58:04Z",
          "updatedAt": "2019-09-19T22:58:04Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I was aiming to avoid the passive voice, though agreed on the name collision.",
              "createdAt": "2019-09-19T22:58:04Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg1NDQ0",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:00:23Z",
          "updatedAt": "2019-09-19T23:00:23Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "`fall back` is a verb, `fall-back behavior` is a noun.",
              "createdAt": "2019-09-19T23:00:23Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg1NTM1",
          "commit": {
            "abbreviatedOid": "90d8247"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:00:40Z",
          "updatedAt": "2019-09-19T23:00:40Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "This is a captive network scenario, we can't remove this.",
              "createdAt": "2019-09-19T23:00:40Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg2ODY1",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:05:47Z",
          "updatedAt": "2019-09-19T23:05:47Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "In that case, yeah `fallback` without the hyphen",
              "createdAt": "2019-09-19T23:05:47Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg2OTE0",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:05:56Z",
          "updatedAt": "2019-09-19T23:05:57Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "It's important to mention it, and indicate that we suggest it",
              "createdAt": "2019-09-19T23:05:57Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg3MzA3",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:07:22Z",
          "updatedAt": "2019-09-19T23:07:22Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Domain name, I'll specify it",
              "createdAt": "2019-09-19T23:07:22Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg3NDAw",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:07:43Z",
          "updatedAt": "2019-09-19T23:07:43Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Don't we mention directly above? It just seems redundant here.",
              "createdAt": "2019-09-19T23:07:43Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg3NDM5",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:07:51Z",
          "updatedAt": "2019-09-19T23:07:51Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I think I prefer this as it was.",
              "createdAt": "2019-09-19T23:07:51Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODg4MDM1",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:09:56Z",
          "updatedAt": "2019-09-19T23:09:56Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I was just trying to cut down the number of words. It's just a nit. :)",
              "createdAt": "2019-09-19T23:09:56Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkwODY2",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:20:47Z",
          "updatedAt": "2019-09-19T23:20:47Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Added text here",
              "createdAt": "2019-09-19T23:20:47Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkwODkz",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:20:55Z",
          "updatedAt": "2019-09-19T23:20:55Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Added some text for this",
              "createdAt": "2019-09-19T23:20:55Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkwOTM2",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:21:05Z",
          "updatedAt": "2019-09-19T23:21:05Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Added preference indication",
              "createdAt": "2019-09-19T23:21:05Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkwOTQ2",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:21:09Z",
          "updatedAt": "2019-09-19T23:21:09Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Fixed!",
              "createdAt": "2019-09-19T23:21:09Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkwOTc2",
          "commit": {
            "abbreviatedOid": "49caf76"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:21:19Z",
          "updatedAt": "2019-09-19T23:21:20Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Fixed",
              "createdAt": "2019-09-19T23:21:20Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkxMDkw",
          "commit": {
            "abbreviatedOid": "ba2dacc"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:21:51Z",
          "updatedAt": "2019-09-19T23:21:51Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I think we need to for legacy enterprise deployments. I added text explaining this.",
              "createdAt": "2019-09-19T23:21:51Z",
              "updatedAt": "2019-09-19T23:23:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjkwODkxNDk2",
          "commit": {
            "abbreviatedOid": "bb46ab0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-09-19T23:23:29Z",
          "updatedAt": "2019-09-19T23:23:29Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "Good idea, fixed!",
              "createdAt": "2019-09-19T23:23:29Z",
              "updatedAt": "2019-09-19T23:23:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 56,
      "id": "MDExOlB1bGxSZXF1ZXN0MzIzMzc1Mzgz",
      "title": "Incorporate comments from Stuart's review",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/56",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "This covers several comments that @StuartCheshire had on the documents!",
      "createdAt": "2019-10-01T16:55:30Z",
      "updatedAt": "2019-10-02T16:05:56Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "f118b160258846dc22b5df0cc91c5c145cba07d6",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/stuart-review",
      "headRefOid": "64627c00033a4bb512e6cfecf6808ecf1ee22d62",
      "closedAt": "2019-10-02T16:05:56Z",
      "mergedAt": "2019-10-02T16:05:56Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "66815766faa1e22a0277882dc47f91c885ecefad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1NzU2MTIz",
          "commit": {
            "abbreviatedOid": "497a7f2"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good!",
          "createdAt": "2019-10-01T17:08:29Z",
          "updatedAt": "2019-10-01T17:24:48Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nDesignated DoH Servers are expected to act both as Oblivious Proxies and as Oblivious Targets\r\n```",
              "createdAt": "2019-10-01T17:08:29Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nempty. Note that this is different from a GET request for the \u201capplication/dns-message\u201d type,\r\n```",
              "createdAt": "2019-10-01T17:11:21Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nor NXDOMAIN, or by a connection-level failure, such as a TCP reset, and TLS handshake failure,\r\n```",
              "createdAt": "2019-10-01T17:12:21Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 162,
              "body": "```suggestion\r\nAdaptive DNS splits DoH queries into two sets: those made to Designated DoH Servers,\r\n```",
              "createdAt": "2019-10-01T17:21:06Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2MjMyMjEz",
          "commit": {
            "abbreviatedOid": "9412381"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM -- approved pending some questions and comments!",
          "createdAt": "2019-10-02T13:21:40Z",
          "updatedAt": "2019-10-02T13:30:27Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Can we give an example of what an appropriate SVCB record would be? For example, if there's no DoH server for \"example.com,\" then the client would send a (proxied) SVCB query for \"example.com\", right?",
              "createdAt": "2019-10-02T13:21:40Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 50,
              "body": "We should probably also recommend some client behavior if certain targets are not willing to proxy. Perhaps, \"Clients SHOULD stop using Oblivious Targets in the absence of proxy support\"?",
              "createdAt": "2019-10-02T13:25:12Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 62,
              "body": "Why not MUST? Is there a reason they'd ever be non-empty? (I think not, so it seems better to just restrict it outright.)",
              "createdAt": "2019-10-02T13:26:10Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nor NXDOMAIN, or by a connection-level failure, such as a TCP reset, TLS handshake failure,\r\n```",
              "createdAt": "2019-10-02T13:26:32Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nparticularly useful for cases in which a name may not be resolvable over public DNS\r\n```",
              "createdAt": "2019-10-02T13:27:10Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n- Client ability to generate random {{!RFC4086}} one-time-use symmetric keys to encrypt DNS responses. These\r\n```",
              "createdAt": "2019-10-02T13:29:21Z",
              "updatedAt": "2019-10-02T15:36:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2MzM0Mjk1",
          "commit": {
            "abbreviatedOid": "64627c0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-10-02T15:36:47Z",
          "updatedAt": "2019-10-02T15:36:47Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Changed the wording to just say its for the same name!",
              "createdAt": "2019-10-02T15:36:47Z",
              "updatedAt": "2019-10-02T15:36:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2MzM0ODU0",
          "commit": {
            "abbreviatedOid": "64627c0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-10-02T15:37:32Z",
          "updatedAt": "2019-10-02T15:37:32Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "I think this is already covered by the beginning of the section, where the clients MUST whitelist the servers by validating that they can both be the proxy and target. You should never use a server as a target if it isn't a proxy too.",
              "createdAt": "2019-10-02T15:37:32Z",
              "updatedAt": "2019-10-02T15:37:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2MzM1MzA1",
          "commit": {
            "abbreviatedOid": "64627c0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-10-02T15:38:06Z",
          "updatedAt": "2019-10-02T15:38:06Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Reworded to just say it is left empty; it's not really a normative thing, it's just that I'm pointing out that the query string doesn't have the same meaning as DoH here.",
              "createdAt": "2019-10-02T15:38:06Z",
              "updatedAt": "2019-10-02T15:38:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 58,
      "id": "MDExOlB1bGxSZXF1ZXN0MzIzOTMzMDgx",
      "title": "Updates to oDoH crypto to remove message length and query ID",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/58",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Addresses #55 and #57.",
      "createdAt": "2019-10-02T20:34:11Z",
      "updatedAt": "2019-10-02T21:09:05Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "66815766faa1e22a0277882dc47f91c885ecefad",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/odoh-crypto",
      "headRefOid": "4b1cfc9b29280191dbf6d6d7b771fa330a9c802f",
      "closedAt": "2019-10-02T21:09:05Z",
      "mergedAt": "2019-10-02T21:09:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d24268381dad1b6a8b804eac6b0d1ba658639dba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2NTI0OTYy",
          "commit": {
            "abbreviatedOid": "2cc4b45"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-10-02T21:03:34Z",
          "updatedAt": "2019-10-02T21:06:17Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nused for the client's response key is the one associated with the server's public key.\r\n```",
              "createdAt": "2019-10-02T21:03:35Z",
              "updatedAt": "2019-10-02T21:07:54Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nAn Oblivious DoH Response message carries the DNS response encrypted with the client's chosen response key.\r\n```",
              "createdAt": "2019-10-02T21:04:34Z",
              "updatedAt": "2019-10-02T21:07:54Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nfor encrypt_response_body below. The key_id field used for encryption is empty, yielding 0x0000 as part of the AAD.)\r\n```",
              "createdAt": "2019-10-02T21:06:14Z",
              "updatedAt": "2019-10-02T21:07:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI0NDMzMTY5",
      "title": "Add some security considerations text.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/59",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-10-03T22:20:29Z",
      "updatedAt": "2019-10-03T22:53:29Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "025a898031b4a874c636322ffedc25d742e86519",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/security-considerations",
      "headRefOid": "4253d40020c52f953acf34e144a7050157e19fb7",
      "closedAt": "2019-10-03T22:53:29Z",
      "mergedAt": "2019-10-03T22:53:29Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0ea10dabffe3f3d96bf3d906f8579dd5081349cb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3MTkzNzI3",
          "commit": {
            "abbreviatedOid": "4253d40"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2019-10-03T22:53:21Z",
          "updatedAt": "2019-10-03T22:53:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI5MzM3MzQy",
      "title": "Mark SVCB IANA values as TBD",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/66",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Fixes #60 ",
      "createdAt": "2019-10-17T15:51:18Z",
      "updatedAt": "2019-10-17T16:57:50Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "567931d79e66297257caf4476f7eb9f6d14571ee",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/svcbtbd",
      "headRefOid": "5e32aa4118c30c30474495220df3a44d2cced242",
      "closedAt": "2019-10-17T16:57:50Z",
      "mergedAt": "2019-10-17T16:57:50Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "8e8bb610fbea55f6489bf29db242a5aa7458e3c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzAzNDA1MDYw",
          "commit": {
            "abbreviatedOid": "5e32aa4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-10-17T16:57:44Z",
          "updatedAt": "2019-10-17T16:57:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxMTA0MDAw",
      "title": "Encode the proxy target in the URI template",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/70",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Fixes #64 ",
      "createdAt": "2019-10-22T17:11:26Z",
      "updatedAt": "2019-10-23T00:30:26Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "8e8bb610fbea55f6489bf29db242a5aa7458e3c3",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/proxy-template",
      "headRefOid": "10aa61413f9e93b3adc37268bd66748771089d04",
      "closedAt": "2019-10-23T00:30:25Z",
      "mergedAt": "2019-10-23T00:30:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0621c816885e4c797c9798080d555964f47059b9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1Mzg5NjEx",
          "commit": {
            "abbreviatedOid": "10aa614"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-10-22T17:43:11Z",
          "updatedAt": "2019-10-22T17:43:11Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA1NTc4NTU2",
          "commit": {
            "abbreviatedOid": "10aa614"
          },
          "author": "mcmanus",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-10-23T00:30:03Z",
          "updatedAt": "2019-10-23T00:30:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM1NTcyODQ4",
      "title": "Derive encryption keys and nonces from the client's plaintext query.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/74",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also, expand security considerations.",
      "createdAt": "2019-11-01T19:07:16Z",
      "updatedAt": "2019-11-01T19:37:15Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "49bb755ff16c5b497afc151dc6ef86f2a5cb27c9",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/nonce-nonsense",
      "headRefOid": "e498cc1289ae4a29426f8d16b2dfa8f2638705ef",
      "closedAt": "2019-11-01T19:37:15Z",
      "mergedAt": "2019-11-01T19:37:15Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4e60d2ee04b01a347c06f0e291c1b13a971bab50"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEwNjU2Mzc1",
          "commit": {
            "abbreviatedOid": "e498cc1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-11-01T19:37:08Z",
          "updatedAt": "2019-11-01T19:37:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM2Mzg1MDYx",
      "title": "Add notes about other proxies.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/75",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-04T17:07:00Z",
      "updatedAt": "2019-11-04T17:56:58Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "eb5fe27f4d2e1a1def2630f565d9890bdc050276",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/other-proxies",
      "headRefOid": "3fefe09616794aa893a9ed430837b28be736c01a",
      "closedAt": "2019-11-04T17:56:58Z",
      "mergedAt": "2019-11-04T17:56:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ed42db204d88be15382a986a5b31904e49dcfdd1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzExMjUwMzgz",
          "commit": {
            "abbreviatedOid": "6048565"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-11-04T17:56:00Z",
          "updatedAt": "2019-11-04T17:56:29Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nUsing DoH over anonymizing proxy services such as Tor would also achieve the desired goal of separating \r\n```",
              "createdAt": "2019-11-04T17:56:00Z",
              "updatedAt": "2019-11-04T17:56:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 85,
      "id": "MDExOlB1bGxSZXF1ZXN0MzY3MjI1NjI4",
      "title": "Create aws.yml",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/85",
      "state": "CLOSED",
      "author": null,
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-01-26T14:54:12Z",
      "updatedAt": "2020-01-26T18:00:20Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "ed42db204d88be15382a986a5b31904e49dcfdd1",
      "headRepository": "roufique4/draft-pauly-adaptive-dns-privacy",
      "headRefName": "roufique4-patch-1",
      "headRefOid": "60ed67ef4e8b632291514ce2a3e5c27e86c9c857",
      "closedAt": "2020-01-26T18:00:20Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mzk1NDc5",
          "commit": {
            "abbreviatedOid": "60ed67e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Was this pull request made by accident?",
          "createdAt": "2020-01-26T18:00:01Z",
          "updatedAt": "2020-01-26T18:00:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0MzcyMDYzNTYx",
      "title": "Note that local and system policy selection or recommendation is out of scope.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/88",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #87.",
      "createdAt": "2020-02-06T19:08:51Z",
      "updatedAt": "2020-02-06T19:39:47Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "ed42db204d88be15382a986a5b31904e49dcfdd1",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/no-policy",
      "headRefOid": "4fc9b9dbc89df4247f2f40b09fe6e92c17aa5a4d",
      "closedAt": "2020-02-06T19:39:47Z",
      "mergedAt": "2020-02-06T19:39:47Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e5ac6614cb036f67cd7199d8e92114810f078fba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzE5NjA2",
          "commit": {
            "abbreviatedOid": "4fc9b9d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-06T19:39:33Z",
          "updatedAt": "2020-02-06T19:39:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE0MzkxMzg5",
      "title": "Defined Companion DoH server as a mechanism Direct Resolvers can use \u2026",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/90",
      "state": "MERGED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026to advertise DoH servers owned by the same entity that can be used instead\r\n\r\nI'm opening a draft PR to discuss addition edits needed to address:\r\n\r\n- changes needed for the use of a new .arpa name \"resolver.arpa\"\r\n- how this integrates with whitelisting as described now in a different document (Designated DoH servers require Oblivious support, but I want to highlight Companion DoH server do _not_)",
      "createdAt": "2020-05-06T23:59:16Z",
      "updatedAt": "2020-05-14T18:11:52Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "b054a3f22c49800167be9a12a6e370f6446be5b4",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "companiondoh",
      "headRefOid": "05570723dc19d9eaddc3ce0988d579cd6f9f70b3",
      "closedAt": "2020-05-14T18:11:52Z",
      "mergedAt": "2020-05-14T18:11:52Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "18468850fd09fb16067dae1af2541273b93f83db"
      },
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "I figured this was as much of a scoped edit as could be made within the breakout of this document. However, I have a couple questions about its integration with the Adaptive draft:\r\n- Should Companion DoH refer to the approval process for Designated DoH servers and mention it isn't required for Companion DoH servers?\r\n- What should be added to the draft for tracking the needed .arpa approval (declaring the new \"resolver.arpa\" reservation)?",
          "createdAt": "2020-05-11T20:59:19Z",
          "updatedAt": "2020-05-11T20:59:19Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Regarding validating being a proxy, I think we'll not need to mention that for companion DoH servers, since we can make that not required by default. I'm thinking of making that only required for the external services, and understand that local resolvers (companion or designated) don't make sense to have the same requirements.",
          "createdAt": "2020-05-11T22:34:39Z",
          "updatedAt": "2020-05-11T22:34:39Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think we need to have an IANA Considerations that adds an entry to the Special-Use Domain Names, https://tools.ietf.org/html/rfc6761. See what this draft does: https://tools.ietf.org/html/draft-cheshire-sudn-ipv4only-dot-arpa-17",
          "createdAt": "2020-05-11T22:37:09Z",
          "updatedAt": "2020-05-11T22:37:09Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Want to move this from Draft to real so we can merge, and then we'll continue to iterate from there?",
          "createdAt": "2020-05-13T23:49:02Z",
          "updatedAt": "2020-05-13T23:49:02Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Marked as ready for review. Fire when ready!",
          "createdAt": "2020-05-13T23:50:51Z",
          "updatedAt": "2020-05-13T23:50:51Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgwNjc4",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:40:05Z",
          "updatedAt": "2020-05-11T22:40:05Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "We may just want to say \"a DNS server returns\", and not have a MUST. It's more a statement of fact than a normative requirement.",
              "createdAt": "2020-05-11T22:40:05Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgxMzM2",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:41:42Z",
          "updatedAt": "2020-05-11T22:41:42Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Is this IP address of the DNS endpoint the same as the one that was originally the direct resolver? The issue I could see there is if the local router has a private IP address (10.X.X.X) for that.\r\n\r\nOr is this just the IP address of the companion server itself, that was the dohip in the record?",
              "createdAt": "2020-05-11T22:41:42Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgxNTI2",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:42:06Z",
          "updatedAt": "2020-05-11T22:42:07Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Again, I think we can just say \"it queries that resolver...\"",
              "createdAt": "2020-05-11T22:42:06Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgxNjEw",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:42:19Z",
          "updatedAt": "2020-05-11T22:42:19Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "This is a good normative statement",
              "createdAt": "2020-05-11T22:42:19Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgxODU2",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:42:52Z",
          "updatedAt": "2020-05-11T22:42:53Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Ah I see it's both. Hm.",
              "createdAt": "2020-05-11T22:42:52Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgyODgz",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:45:24Z",
          "updatedAt": "2020-05-11T22:45:24Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "That's a good point, I'll revise that accordingly.",
              "createdAt": "2020-05-11T22:45:24Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTg0Njc2",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:49:58Z",
          "updatedAt": "2020-05-11T22:49:58Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Yes, it's both. The idea here is that the original resolver is:\r\n- on a public IP, so the public DoH companion can have either a different IP or the same IP, and in either case the one IP or the two of them must both be in the TLS cert,\r\n- on a private IP, being an enterprise resolver, and the enterprise is free to deploy certs to its own devices that trust certs issued to their servers valid for the private addresses they want to trust,\r\n- on a private IP, being an in-home, non-enterprise resolve, and there's no real way to authentically tie one of those addresses to a public address without introducing a novel side channel of trust, which I am loathe to do. This scenario I would defer to other drafts where DHCP/RAs advertise DoH directly and you get as much security as those mechanism provide already (not more secure, but not less secure either)",
              "createdAt": "2020-05-11T22:49:58Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTg0ODI4",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T22:50:20Z",
          "updatedAt": "2020-05-11T22:50:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Noted.",
              "createdAt": "2020-05-11T22:50:20Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTg4OTAx",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-11T23:00:52Z",
          "updatedAt": "2020-05-11T23:00:52Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "We can get the resolver info from PvDs off of RAs, using the proposal in this draft. That has roughly the same burden as updating any of DHCP/RAs. Doing a DNS addition is easier because it doesn't require local router upgrades.\r\n\r\nYour point about authenticating is certainly right. I'll ponder a bit more, but this likely is the best option.",
              "createdAt": "2020-05-11T23:00:52Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzIzNzIz",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-12T18:43:46Z",
          "updatedAt": "2020-05-12T18:43:46Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Take two: I actually don't know which statement you're referring to here. All the ones pictured in this snippet I believe are required:\r\n- The MUST for IP address inclusion is necessary for the client to be able to use the TLS cert to verify ownership of the referring IP address as well as the DoH IP address (whether they're the same or different)\r\n- The MUST in line 160 for the client to query the SVCB record is necessary to ensure Companion DoH servers are discovered. If a client doesn't always query this record for DNS server IP addresses it uses, then it will miss DoH use where it is available.",
              "createdAt": "2020-05-12T18:43:46Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzMzODU3",
          "commit": {
            "abbreviatedOid": "3987879"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-12T18:57:26Z",
          "updatedAt": "2020-05-12T18:57:26Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Done",
              "createdAt": "2020-05-12T18:57:26Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTQyODYw",
          "commit": {
            "abbreviatedOid": "de9d7a3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T17:25:17Z",
          "updatedAt": "2020-05-13T17:25:17Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I was thinking of line 160, reading that as \"if you want to query for a direct resolver, you have to send a query\", which is more of a tautology than a normative statement. We're just describing how the desired action is taken. MUSTs should be reserved for security checks or interop problems. If your system can be configured to query, and your system just doesn't do it, that's a silly bug, because you have a configuration option that does nothing.",
              "createdAt": "2020-05-13T17:25:17Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTQzMzg0",
          "commit": {
            "abbreviatedOid": "de9d7a3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T17:25:58Z",
          "updatedAt": "2020-05-13T17:25:59Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Let's add you to the author list, and we can remove the thanks =)",
              "createdAt": "2020-05-13T17:25:59Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTY5MzMx",
          "commit": {
            "abbreviatedOid": "de9d7a3"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T18:00:13Z",
          "updatedAt": "2020-05-13T18:00:13Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Oh I see. What I was trying to communicate here is \"if you've been configured to use foo, you need to ask foo for its Companion server before too long\" but I guess the SHOULD statement already covers that. I'll remove the MUST and rephrase.",
              "createdAt": "2020-05-13T18:00:13Z",
              "updatedAt": "2020-05-13T23:29:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzY4MDMz",
          "commit": {
            "abbreviatedOid": "0557072"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T23:30:27Z",
          "updatedAt": "2020-05-13T23:30:27Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Done.",
              "createdAt": "2020-05-13T23:30:27Z",
              "updatedAt": "2020-05-13T23:30:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzY4MjU3",
          "commit": {
            "abbreviatedOid": "0557072"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T23:31:06Z",
          "updatedAt": "2020-05-13T23:31:06Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Done! Thanks for letting me work with you all :) ",
              "createdAt": "2020-05-13T23:31:06Z",
              "updatedAt": "2020-05-13T23:31:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzcwNDM5",
          "commit": {
            "abbreviatedOid": "0557072"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-13T23:37:15Z",
          "updatedAt": "2020-05-13T23:37:15Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "So my takeaway here then is bullet one is the ideal easy path and Companion DoH works, bullet two _can_ work if an enterprise wants to take that route, and bullet three is covered by the RA discussion in this draft rather than Companion DoH, and it could be used in place of bullet two as well by enterprises who prefer network advertised DoH over DoH negotiation over the network advertised classic.\r\n\r\nIs that^ fair? Definitely open to further discussion, just want to make sure we're on the same current page or discover if we're not.",
              "createdAt": "2020-05-13T23:37:15Z",
              "updatedAt": "2020-05-13T23:37:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 91,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE4ODgwNDk3",
      "title": "Resolver Designation",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/91",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Fill out more text on resolver designation.\r\n\r\nFor @mcmanus, @chris-wood, and @erickinnear, this is splitting out the draft for discovery specifically (no client algorithm really here, or extended info), so we can submit to ADD soon.\r\n\r\nAlso, we've gotten good input from @mstojens, so welcome to him!",
      "createdAt": "2020-05-15T23:51:27Z",
      "updatedAt": "2020-05-20T16:19:08Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "18468850fd09fb16067dae1af2541273b93f83db",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/resolver-designation",
      "headRefOid": "966b4092881670b9522d63366ff971ca17863e1f",
      "closedAt": "2020-05-20T16:19:08Z",
      "mergedAt": "2020-05-20T16:19:08Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "524a4b5f76253cac8a5ef8a6c8724183a9d2ded5"
      },
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks pretty good. By the by, thank you for the HTTPSSVC vs SVCB clarifications through the Companion server text.\r\n\r\nOne note, perhaps beyond the scope of this PR: why can't we confirm Designated server ownership of a domain via the TLS cert? This could be an additional option in addition to DNSSEC signed SVCBs and the PvD option. I can't think of an attack vector where a forged SVCB would lead the client to the wrong Designated server, as either:\r\n- the server's cert isn't valid for the domain the SVCB advertised, and the client can discard the record, or\r\n- the server's cert is valid for the domain the SVCB advertised\r\n\r\nPerhaps it wouldn't be the preferred model by some, but it may make adoption easier for clients and servers who don't support / haven't deployed DNSSEC and already do TLS cert validation but not PvD work.",
          "createdAt": "2020-05-19T18:57:40Z",
          "updatedAt": "2020-05-19T18:57:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@mstojens filed this issue for your suggestion: https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/92",
          "createdAt": "2020-05-20T16:14:59Z",
          "updatedAt": "2020-05-20T16:14:59Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NzM3OTQw",
          "commit": {
            "abbreviatedOid": "c908b31"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-19T18:59:47Z",
          "updatedAt": "2020-05-19T18:59:47Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODY0Nzk4",
          "commit": {
            "abbreviatedOid": "c908b31"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with some nits -- thanks!",
          "createdAt": "2020-05-19T22:21:42Z",
          "updatedAt": "2020-05-19T22:32:22Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nAs an example with only one entity, a company that runs many sites within \"enterprise.example.com\" can provide its own DoH resolver, \"doh.enterprise.example.com\", and designate only that resolver for all names that fall within \"enterprise.example.com\". This means that no other resolver would be designated for those names, and clients would only resolve names with the same entity that would service TLS connections.\r\n```",
              "createdAt": "2020-05-19T22:21:43Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nDesignating a resolver MUST rely on mutual agreement between the entity managing a zone (the Domain Owner) and the entity operating the resolver. These entities can be one and the same, or a Domain Owner can choose to designate a third-party resolver to handle its traffic. Proof of this mutual agreement asserts to clients that sending any query to the designated resolver exposes no more information than sending sending said query to the entity managing the corresponding zone.\r\n```\r\n\r\n(I had a hard time parsing the last sentence!)",
              "createdAt": "2020-05-19T22:24:46Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n- Based on mutual agreement through confirmation of domains over HTTPS ({{pvd-mutual}})\r\n```\r\n\r\n(for consistency with the above text)",
              "createdAt": "2020-05-19T22:26:27Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 55,
              "body": "MUST NOT? Is there a case where a client might want to ignore this?",
              "createdAt": "2020-05-19T22:26:46Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nIf this record is DNSSEC-signed, clients can immediately create a mapping that indicates the server (doh.example.net) as a Designated Resolver for the name in the SVCB record (foo.example.com).\r\n```",
              "createdAt": "2020-05-19T22:27:46Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nThis indicates that \"example.com\" should be treated as a designated domain, and that it can be validated by checking with the \"example.com\" server rather than using DNSSEC.\r\n```",
              "createdAt": "2020-05-19T22:28:46Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nClients MUST perform this validation as follows. First, issue a GET request for \"https://example.com/.well-known/pvd\" before trusting the designation. In order to trust the designation, this request must return valid JSON with the \"dohTemplate\" key matching the original DoH resolver. For example, this dictionary could contain the following contents:\r\n```\r\n\r\nThe previous text read to me like it forced clients to send a GET, whereas some clients might not care and might not want to do the validation. The intent with the new text is to say that this specific procedure MUST be followed if a client chooses to validate.",
              "createdAt": "2020-05-19T22:30:29Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 120,
              "body": "It might be helpful to give an example of a response that would not pass validation, e.g.:\r\n\r\n```\r\n~~~\r\n   {\r\n     \"identifier\": \"example.com.\",\r\n     \"dohTemplate\": \"https://not-the-doh-youre-looking-for.example.net/dns-query\",\r\n   }\r\n~~~\r\n```",
              "createdAt": "2020-05-19T22:31:53Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODczMzAx",
          "commit": {
            "abbreviatedOid": "c908b31"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good! Minor nits only",
          "createdAt": "2020-05-19T22:41:17Z",
          "updatedAt": "2020-05-20T01:21:10Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "New sentence looks good modulo `sending sending` :)",
              "createdAt": "2020-05-19T22:41:17Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 40,
              "body": "Is it worth driving the point home by paralleling the above paragraph, explicitly calling out that the entity servicing TLS connections already knows everything contained in your resolutions?",
              "createdAt": "2020-05-19T22:42:56Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 42,
              "body": "Minor wording nit:\r\n```suggestion\r\nAs an example with several entities, the organization that operates sites within \"example.org\" may work with two different Content Delivery Networks (CDNs) to serve its sites. It might designate names under \"example.com\" to two different entities, \"doh.cdn-a.net\" and \"doh.cdn-b.net\". These are CDNs that have an existing relationship with the organization that runs \"example.org\", and have agreements with that organization about how data with information on names and users is handled.\r\n```\r\nTechnically, we're making as assumption that they've made agreements, but fair.",
              "createdAt": "2020-05-19T22:44:13Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 93,
              "body": "Wording strikes me as odd -- designated resolvers that \"support\" DoH? Or \"offer\" DoH\r\n```suggestion\r\nDesignated Resolvers that support DoH SHOULD provide a PvD JSON dictionary available at the well-known PvD URI with the path of the DoH server's URI template appended.\r\n```\r\nor\r\n```suggestion\r\nDesignated Resolvers that offer DoH SHOULD provide a PvD JSON dictionary available at the well-known PvD URI with the path of the DoH server's URI template appended.\r\n```",
              "createdAt": "2020-05-19T22:46:52Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            },
            {
              "originalPosition": 105,
              "body": "```suggestion\r\nThe JSON dictionary MAY contain a key \"trustedNames\" that is an array of strings containing domains that can be used for mutual confirmation of resolver designation.\r\n```",
              "createdAt": "2020-05-20T01:20:02Z",
              "updatedAt": "2020-05-20T16:12:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDk3MjA5",
          "commit": {
            "abbreviatedOid": "966b409"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-20T16:12:46Z",
          "updatedAt": "2020-05-20T16:12:47Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Incorporate, and fixed typo!",
              "createdAt": "2020-05-20T16:12:46Z",
              "updatedAt": "2020-05-20T16:12:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDk3MzA1",
          "commit": {
            "abbreviatedOid": "966b409"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-20T16:12:54Z",
          "updatedAt": "2020-05-20T16:12:54Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Done",
              "createdAt": "2020-05-20T16:12:54Z",
              "updatedAt": "2020-05-20T16:12:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDk3NjMw",
          "commit": {
            "abbreviatedOid": "966b409"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-20T16:13:16Z",
          "updatedAt": "2020-05-20T16:13:17Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Added the example! Also reworded the GET section.",
              "createdAt": "2020-05-20T16:13:16Z",
              "updatedAt": "2020-05-20T16:13:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTAyNTI1",
          "commit": {
            "abbreviatedOid": "966b409"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-20T16:18:56Z",
          "updatedAt": "2020-05-20T16:18:57Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Not sure it need to be reiterated like that (at least at this stage)? This sentence is already pretty clear that the entities are the same, and I'm concerned that making more claims about what that sameness guarantees will be tricky to get 100% right. ",
              "createdAt": "2020-05-20T16:18:56Z",
              "updatedAt": "2020-05-20T16:18:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 94,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIzNTI5MDc2",
      "title": "suggestion: clarify 3.2 is about PvD",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/94",
      "state": "MERGED",
      "author": "yannk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reading just \"information\" as that point is a big vague and hard to distinguish from the bullet point above.",
      "createdAt": "2020-05-27T00:13:06Z",
      "updatedAt": "2020-05-27T04:37:09Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "ca6e520e80aa9baf71fe5d258db0c77c44ae4341",
      "headRepository": "yannk/draft-pauly-adaptive-dns-privacy",
      "headRefName": "master",
      "headRefOid": "f9177a14e102f8a99a0a238a76e4fd56e5ebdf35",
      "closedAt": "2020-05-27T04:37:09Z",
      "mergedAt": "2020-05-27T04:37:09Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e7f5bf57e8bca0e5418dbe10ae56f6c8040b1484"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzYyMjA0",
          "commit": {
            "abbreviatedOid": "f9177a1"
          },
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-27T00:17:28Z",
          "updatedAt": "2020-05-27T00:17:28Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODUwOTk0",
          "commit": {
            "abbreviatedOid": "f9177a1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-27T04:37:02Z",
          "updatedAt": "2020-05-27T04:37:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "MDExOlB1bGxSZXF1ZXN0NDMxMzYwMjU1",
      "title": "Drop \"whitelist\" in favor of \"allow.\"",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/95",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-06-08T19:48:57Z",
      "updatedAt": "2020-06-08T20:05:54Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "e7f5bf57e8bca0e5418dbe10ae56f6c8040b1484",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/terms",
      "headRefOid": "872c9e9ed3050709a692ad88de5eae2a26b98334",
      "closedAt": "2020-06-08T19:52:25Z",
      "mergedAt": "2020-06-08T19:52:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7be674a0886967261fdac7c4a4c009477c1580c1"
      },
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "COLLABORATOR",
          "body": "\ud83d\udc4d ",
          "createdAt": "2020-06-08T20:05:54Z",
          "updatedAt": "2020-06-08T20:05:54Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTcwNTUw",
          "commit": {
            "abbreviatedOid": "872c9e9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-08T19:52:21Z",
          "updatedAt": "2020-06-08T19:52:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1NDI1MDMz",
      "title": "First cut at Oblivious HTTP",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/98",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is just a draft to get a feel for the shape and flow of a MASQUE-compatible variant. \r\n\r\nThoughts on direction? Names? Anything else?",
      "createdAt": "2020-06-16T19:33:37Z",
      "updatedAt": "2020-10-27T12:52:59Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7be674a0886967261fdac7c4a4c009477c1580c1",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/ohttp",
      "headRefOid": "5f868c33c64c894672375f85f85f0efb8e869075",
      "closedAt": "2020-10-27T12:52:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "COLLABORATOR",
          "body": "Just had a very brief look now but do I understand correctly that the RELAY method now provides a full intercepting http proxy which two independent QUIC connections on each side (or also TCP I guess on any side)? How is the additional encryption on the HTTP layer supposed to be realised? ",
          "createdAt": "2020-06-17T09:11:28Z",
          "updatedAt": "2020-06-17T09:11:28Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We use HPKE to encrypt messages and responses between client and target.",
          "createdAt": "2020-06-17T13:11:19Z",
          "updatedAt": "2020-06-17T13:11:19Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "Hey,\r\n\r\nIf I parse this correctly (I assume all references to DoH are pretty much going to disappear?) --\r\n\r\nThey way I tend to think about this, you're effectively defining two separate little protocols; one from the client to the Oblivious Proxy, and one from the OP to the Oblivious Target. The terminology isn't great here, because \"proxy\" means something specific in HTTP, and this isn't it; if anything, the OT is more of a proxy; the OP is more of a gateway.\r\n\r\nThe first thing that jumps out at me is the asymmetry of using RELAY from the client to the OP, but POST from the OP to the OT. What's the purpose for that? Is there any reason you couldn't just use POST with a distinguishing media type and/or headers on both hops?\r\n\r\n/me reads above\r\n\r\nAh, so you want RELAY to mean 'proxy this to that place' - sort of source routing for HTTP - in a manner that's separate from the encryption mechanism. So I RELAY to an OP, it forwards as directed and otherwise doesn't touch things, and sends the response back. Is the result of a RELAY always a POST? That seems a bit weird; it's not really a POST, maybe it should be a special method too (UNWRAP? I don't know). Using explicit methods at both hops would probably help make the semantics more explicit and reduce the chances of weird attacks.\r\n\r\nUsing a URI template for giving instructions to RELAY is really weird / hokey. I'd put this stuff in request headers. I know you lose symmetry with Oblivious DNS.\r\n\r\nLots of other little nits, of course, but that's the big stuff I see so far.",
          "createdAt": "2020-06-24T05:57:32Z",
          "updatedAt": "2020-06-24T05:57:32Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjE0MTMz",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:20:55Z",
          "updatedAt": "2020-06-17T17:20:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "We should probably rev the doc name too =)",
              "createdAt": "2020-06-17T17:20:55Z",
              "updatedAt": "2020-06-17T17:20:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjE1NTY0",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:22:51Z",
          "updatedAt": "2020-06-17T17:22:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yep, though the group where this work takes place is then less clear to me. Would we move it to HTTPBIS?",
              "createdAt": "2020-06-17T17:22:51Z",
              "updatedAt": "2020-06-17T17:22:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjE1NzEw",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:23:00Z",
          "updatedAt": "2020-06-17T17:23:00Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Are there any implications on the HTTP version that the proxy uses to the target?",
              "createdAt": "2020-06-17T17:23:00Z",
              "updatedAt": "2020-06-17T17:23:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjE5MzU2",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:27:40Z",
          "updatedAt": "2020-06-17T17:27:41Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "This raises the question to me of if other content types would be appropriate for this RELAY method, or if should be using a content type at all here if there is an HTTP method solution. CONNECT doesn't use content type, etc.\r\n\r\nIs RELAY only for oblivious stuff? If so, I think it could stand alone.",
              "createdAt": "2020-06-17T17:27:40Z",
              "updatedAt": "2020-06-17T17:27:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjIzODMx",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:33:15Z",
          "updatedAt": "2020-06-17T17:33:16Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "I bet purists will argue that it need not be used for oblivious stuff. Our use case just happens to lump the two together. Are you suggesting that we not use RELAY at all and just use different content types? That seems odd to me, since content type (as I understand it) dictates the format of the request/response and not the semantics for how the request/response is handled.",
              "createdAt": "2020-06-17T17:33:15Z",
              "updatedAt": "2020-06-17T17:33:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjIzODk2",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:33:20Z",
          "updatedAt": "2020-06-17T17:33:20Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "We should have some formal text describing how the content of the message is sent. See these examples:\r\n\r\nhttps://httpwg.org/http-core/draft-ietf-httpbis-semantics-latest.html#GET\r\nhttps://httpwg.org/http-core/draft-ietf-httpbis-semantics-latest.html#POST\r\nhttps://httpwg.org/http-core/draft-ietf-httpbis-semantics-latest.html#CONNECT\r\n\r\nI'd assume this behaves a bit like a POST. That also brings up the question of if we can just use POST with a given content type, similar to what the original ODoH did.",
              "createdAt": "2020-06-17T17:33:20Z",
              "updatedAt": "2020-06-17T17:33:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjIzOTU4",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:33:24Z",
          "updatedAt": "2020-06-17T17:33:24Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Hmm, can you elaborate?",
              "createdAt": "2020-06-17T17:33:24Z",
              "updatedAt": "2020-06-17T17:33:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI0Mjc2",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:33:50Z",
          "updatedAt": "2020-06-17T17:33:50Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "We could, yeah. At least discuss it.",
              "createdAt": "2020-06-17T17:33:50Z",
              "updatedAt": "2020-06-17T17:33:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI0ODg1",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:34:43Z",
          "updatedAt": "2020-06-17T17:34:43Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "We should probably be clear either way, but say something like: \"the HTTP version that the client uses to communicate with the relay/proxy has no influence on the HTTP version used by the client to communicate with the target\".",
              "createdAt": "2020-06-17T17:34:43Z",
              "updatedAt": "2020-06-17T17:34:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI1NTM5",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:35:33Z",
          "updatedAt": "2020-06-17T17:35:33Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Ah, I see. Yeah, that's what I was thinking. We can clarify.",
              "createdAt": "2020-06-17T17:35:33Z",
              "updatedAt": "2020-06-17T17:35:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI1NzIz",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:35:47Z",
          "updatedAt": "2020-06-17T17:35:48Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "Yeah, this is the question I have. Partly, I'm wondering if this is indeed fundamentally different semantics for how to handle a request/response, vs just a POST that uses a proxy and has an encrypted message format.",
              "createdAt": "2020-06-17T17:35:48Z",
              "updatedAt": "2020-06-17T17:35:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI3Mjc1",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:37:55Z",
          "updatedAt": "2020-06-17T17:37:56Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "My take is that it's a different semantic, but I'm not an HTTP expert.",
              "createdAt": "2020-06-17T17:37:55Z",
              "updatedAt": "2020-06-17T17:38:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI4MTIy",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:38:59Z",
          "updatedAt": "2020-06-17T17:38:59Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "Let's chat with @mcmanus too on this",
              "createdAt": "2020-06-17T17:38:59Z",
              "updatedAt": "2020-06-17T17:38:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjI5NTEy",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:40:52Z",
          "updatedAt": "2020-06-17T17:40:52Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "Calling @mnot!",
              "createdAt": "2020-06-17T17:40:52Z",
              "updatedAt": "2020-06-17T17:40:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjM1MDM5",
          "commit": {
            "abbreviatedOid": "5f868c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-17T17:48:13Z",
          "updatedAt": "2020-06-17T17:48:14Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "Since encryption of the content is orthogonal to how it's handled, I think the semantics of RELAY should not be coupled to the content type. Clients may want to RELAY unencrypted or encrypted HTTP messages separately. Requiring the proxy to check the content type to determine if something needs to be relayed seems odd. \r\n\r\nThe client and target would be the only entities that use the content type in this model, which seems nice.",
              "createdAt": "2020-06-17T17:48:13Z",
              "updatedAt": "2020-06-17T17:48:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 100,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM3OTg0MTY4",
      "title": "Update HTTPSSVC into HTTPS",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/100",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "- Update names and reference to new SVCB document\r\n- Remove misleading text around use of SvcDomainName\r\n- Request a first-come-first-served codepoint",
      "createdAt": "2020-06-22T14:32:49Z",
      "updatedAt": "2020-06-22T14:36:23Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7be674a0886967261fdac7c4a4c009477c1580c1",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/update-httpssvc",
      "headRefOid": "8335189eb3c5244394136ef6c91839a520e3ef95",
      "closedAt": "2020-06-22T14:36:23Z",
      "mergedAt": "2020-06-22T14:36:23Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c7525783f9d7b21e64366611058ba43ab63e1ac0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTg2NDA2",
          "commit": {
            "abbreviatedOid": "8335189"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-22T14:36:18Z",
          "updatedAt": "2020-06-22T14:36:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 105,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTczMDUx",
      "title": "Changed companion DoH query from resolver.arpa to _dns.resolver.arpa",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/105",
      "state": "MERGED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Incorporated feedback from Ben Schwartz regarding the SUDN used to query for Companion DoH configuration.",
      "createdAt": "2020-07-08T05:09:38Z",
      "updatedAt": "2020-07-09T03:11:14Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "c7525783f9d7b21e64366611058ba43ab63e1ac0",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "companiondoh",
      "headRefOid": "06572f920972ebe9db06fb0dc4faee10476655c0",
      "closedAt": "2020-07-09T03:11:14Z",
      "mergedAt": "2020-07-09T03:11:14Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6ccd204669e0a8b1e2375c13aedd022c8918b6bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDIxOTg0",
          "commit": {
            "abbreviatedOid": "e8c7eec"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T05:25:54Z",
          "updatedAt": "2020-07-08T05:26:03Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Do we still use an HTTPS record here, or is it a raw SVCB record, since the scheme is dns://?",
              "createdAt": "2020-07-08T05:25:55Z",
              "updatedAt": "2020-07-08T05:51:04Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDMxMDY1",
          "commit": {
            "abbreviatedOid": "06572f9"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T05:51:54Z",
          "updatedAt": "2020-07-08T05:51:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Good catch, yes it would be a raw SVCB record. I've issued a second commit to fix that.",
              "createdAt": "2020-07-08T05:51:54Z",
              "updatedAt": "2020-07-08T05:51:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjYxMzAw",
          "commit": {
            "abbreviatedOid": "06572f9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-09T03:10:59Z",
          "updatedAt": "2020-07-09T03:10:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTgyNDk5",
      "title": "Addressing #92 by adding TLS cert checking as an alternative to DNSSE\u2026",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/106",
      "state": "MERGED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026C validation of HTTPS records\r\n\r\nFixes #92 ",
      "createdAt": "2020-07-08T05:38:32Z",
      "updatedAt": "2020-07-11T12:04:25Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "c7525783f9d7b21e64366611058ba43ab63e1ac0",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tls_cert_designation",
      "headRefOid": "d09bb40876a5c3c6000a99f5205c132abe589572",
      "closedAt": "2020-07-11T12:04:14Z",
      "mergedAt": "2020-07-11T12:04:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2734a2d1f61b2bb8093e58cdab636084e8c39e5c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTgzMDQ0",
          "commit": {
            "abbreviatedOid": "a0b90a5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T22:57:10Z",
          "updatedAt": "2020-07-08T22:57:10Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "What sort of check is this? LPM or exact match?",
              "createdAt": "2020-07-08T22:57:10Z",
              "updatedAt": "2020-07-09T03:33:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjYyMDM4",
          "commit": {
            "abbreviatedOid": "a0b90a5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T03:13:29Z",
          "updatedAt": "2020-07-09T03:13:29Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I assume this is an exact match, right?",
              "createdAt": "2020-07-09T03:13:29Z",
              "updatedAt": "2020-07-09T03:33:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjY1MzU0",
          "commit": {
            "abbreviatedOid": "a0b90a5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T03:25:22Z",
          "updatedAt": "2020-07-09T03:25:22Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Yeah, I think it should be. We should probably clarify that. ",
              "createdAt": "2020-07-09T03:25:22Z",
              "updatedAt": "2020-07-09T03:33:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjY3NTY5",
          "commit": {
            "abbreviatedOid": "a0b90a5"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T03:33:32Z",
          "updatedAt": "2020-07-09T03:33:32Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Good question, Chris, I hadn't considered the ambiguity. I intended exact, and there's now a commit to that effect.",
              "createdAt": "2020-07-09T03:33:32Z",
              "updatedAt": "2020-07-09T03:33:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Nzc0OTMy",
          "commit": {
            "abbreviatedOid": "d09bb40"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good now, thanks!",
          "createdAt": "2020-07-11T03:46:39Z",
          "updatedAt": "2020-07-11T03:46:39Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Nzk4Mzc0",
          "commit": {
            "abbreviatedOid": "d09bb40"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-11T12:04:07Z",
          "updatedAt": "2020-07-11T12:04:07Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Nzk4Mzgx",
          "commit": {
            "abbreviatedOid": "d09bb40"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-11T12:04:25Z",
          "updatedAt": "2020-07-11T12:04:25Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Thanks!",
              "createdAt": "2020-07-11T12:04:25Z",
              "updatedAt": "2020-07-11T12:04:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 107,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTQ4MDU1",
      "title": "Fixes #102 Addresses how clients deal with Invalid ODOH Responses",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/107",
      "state": "MERGED",
      "author": "sudheesh001",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Sudheesh Singanamalla <sudheesh@cloudflare.com>",
      "createdAt": "2020-07-09T00:19:08Z",
      "updatedAt": "2020-07-13T15:11:37Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "c7525783f9d7b21e64366611058ba43ab63e1ac0",
      "headRepository": "sudheesh001/draft-pauly-adaptive-dns-privacy",
      "headRefName": "sudheesh/issue_102",
      "headRefOid": "8f43cdee71e50cbcdf07e04f664016b4474290e0",
      "closedAt": "2020-07-11T03:44:56Z",
      "mergedAt": "2020-07-11T03:44:56Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c120b2b1a0ce0d3c41226b85fbe25892c0975804"
      },
      "comments": [
        {
          "author": "sudheesh001",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Tagging @chris-wood for a review because I can't seem to allocate reviewers on this repository. \ud83d\ude04 ",
          "createdAt": "2020-07-09T00:19:52Z",
          "updatedAt": "2020-07-09T00:19:52Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Looks great! Thanks for adding this text. ",
          "createdAt": "2020-07-11T03:44:26Z",
          "updatedAt": "2020-07-11T03:44:26Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzYwNTg0",
          "commit": {
            "abbreviatedOid": "8f43cde"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. @tfpauly, please take a look!",
          "createdAt": "2020-07-11T00:36:00Z",
          "updatedAt": "2020-07-11T00:36:00Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Nzc0ODMw",
          "commit": {
            "abbreviatedOid": "8f43cde"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-11T03:44:42Z",
          "updatedAt": "2020-07-11T03:44:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3Njg1NDU4",
      "title": "Reference \"expires\" field",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/114",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #104",
      "createdAt": "2020-07-10T23:49:17Z",
      "updatedAt": "2020-07-12T22:38:40Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "6ccd204669e0a8b1e2375c13aedd022c8918b6bc",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/expiry",
      "headRefOid": "222774a66388e2199ed305a4cbc108482ace6375",
      "closedAt": "2020-07-12T22:38:40Z",
      "mergedAt": "2020-07-12T22:38:40Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f1b60afe972e1568428d4df64e88cd536c1d1644"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzUzNDgy",
          "commit": {
            "abbreviatedOid": "222774a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-10T23:50:34Z",
          "updatedAt": "2020-07-10T23:50:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 115,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3OTY5NTcy",
      "title": "Explain confirmation via trusted names more clearly",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/115",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #96 ",
      "createdAt": "2020-07-12T23:29:23Z",
      "updatedAt": "2020-07-13T19:20:37Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "f1b60afe972e1568428d4df64e88cd536c1d1644",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/trustednames",
      "headRefOid": "bb7bbe11f46975cbd7ab19f68079458a3f5bf987",
      "closedAt": "2020-07-13T16:16:51Z",
      "mergedAt": "2020-07-13T16:16:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "20ae658de9748f2e93d4e46e11f1b81b63dd43ee"
      },
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree with the discovered nits, though I wouldn't block IETF submission on them. Looks great, and thanks for addressing 96!",
          "createdAt": "2020-07-13T13:56:28Z",
          "updatedAt": "2020-07-13T13:56:28Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTI5ODYw",
          "commit": {
            "abbreviatedOid": "285e163"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Nice! A few nits to double check",
          "createdAt": "2020-07-13T01:05:50Z",
          "updatedAt": "2020-07-13T02:21:12Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Is it intentional that this one is now the only bullet without a reference to elsewhere in the doc?",
              "createdAt": "2020-07-13T01:05:51Z",
              "updatedAt": "2020-07-13T16:15:09Z"
            },
            {
              "originalPosition": 42,
              "body": "(Mobile won\u2019t let me suggest)\nNit: Is there a double space between \u201cusing  DNS\u201d?\nAlso nit: \u201cSHOULD be sent *to* the DoH resolver\u201d",
              "createdAt": "2020-07-13T01:09:13Z",
              "updatedAt": "2020-07-13T16:15:09Z"
            },
            {
              "originalPosition": 60,
              "body": "Small nit: \u201clist out\u201d -> \u201cenumerate\u201d?",
              "createdAt": "2020-07-13T01:11:33Z",
              "updatedAt": "2020-07-13T16:15:09Z"
            },
            {
              "originalPosition": 63,
              "body": "Is there any security consideration around using them to tell you where to validate themselves? I would think not since the whole point is that you end up doing the validation and how you got that address isn\u2019t important, but wanted to double check that I couldn\u2019t just give you the \u201creal\u201d designated resolver\u2019s address and cause you to validate me as if I were them. ",
              "createdAt": "2020-07-13T01:15:48Z",
              "updatedAt": "2020-07-13T16:15:09Z"
            },
            {
              "originalPosition": 95,
              "body": "Nit: \u201cvalidating\u201d -> \u201cvalidated\u201d",
              "createdAt": "2020-07-13T02:19:14Z",
              "updatedAt": "2020-07-13T16:15:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mjc1Mjc2",
          "commit": {
            "abbreviatedOid": "285e163"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T13:56:48Z",
          "updatedAt": "2020-07-13T13:56:48Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mjc4MDU1",
          "commit": {
            "abbreviatedOid": "285e163"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM, pending nits!",
          "createdAt": "2020-07-13T13:59:45Z",
          "updatedAt": "2020-07-13T13:59:45Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mzk5NTQ4",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T16:15:16Z",
          "updatedAt": "2020-07-13T16:15:17Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Fixed!",
              "createdAt": "2020-07-13T16:15:16Z",
              "updatedAt": "2020-07-13T16:15:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mzk5NjQy",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T16:15:22Z",
          "updatedAt": "2020-07-13T16:15:22Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Fixed!",
              "createdAt": "2020-07-13T16:15:22Z",
              "updatedAt": "2020-07-13T16:15:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mzk5OTU4",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T16:15:46Z",
          "updatedAt": "2020-07-13T16:15:46Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I don't see the double space in the actual file? But fixed the nit too =)",
              "createdAt": "2020-07-13T16:15:46Z",
              "updatedAt": "2020-07-13T16:15:46Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDAwMDcw",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T16:15:53Z",
          "updatedAt": "2020-07-13T16:15:53Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "Fixed",
              "createdAt": "2020-07-13T16:15:53Z",
              "updatedAt": "2020-07-13T16:15:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDAwMzgx",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T16:16:14Z",
          "updatedAt": "2020-07-13T16:16:14Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Added a clause to the sentence to explain why this is safe\u2014it's what you assumed.",
              "createdAt": "2020-07-13T16:16:14Z",
              "updatedAt": "2020-07-13T16:16:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTMyNTkx",
          "commit": {
            "abbreviatedOid": "bb7bbe1"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-13T19:20:37Z",
          "updatedAt": "2020-07-13T19:20:37Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Nice, thank you!",
              "createdAt": "2020-07-13T19:20:37Z",
              "updatedAt": "2020-07-13T19:20:37Z"
            }
          ]
        }
      ]
    },
    {
      "number": 116,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ4Mzg4MTMx",
      "title": "Add appendix for \"why svcb\"",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/116",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #89 ",
      "createdAt": "2020-07-13T17:21:18Z",
      "updatedAt": "2020-07-13T20:19:25Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "20ae658de9748f2e93d4e46e11f1b81b63dd43ee",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/svcb-rationale",
      "headRefOid": "cce66fbb94a48a0ce29cb9c75d14acbe656e1db3",
      "closedAt": "2020-07-13T20:18:12Z",
      "mergedAt": "2020-07-13T20:18:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "76a2a408851ecbf97be0eafc9aeff4d711b81661"
      },
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me!",
          "createdAt": "2020-07-13T17:25:19Z",
          "updatedAt": "2020-07-13T17:25:19Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDUyNTc5",
          "commit": {
            "abbreviatedOid": "cce66fb"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2020-07-13T17:25:35Z",
          "updatedAt": "2020-07-13T17:25:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDcxOTU2",
      "title": "Minor editorial nits from #116",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/117",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-13T20:27:17Z",
      "updatedAt": "2020-07-13T20:29:03Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "76a2a408851ecbf97be0eafc9aeff4d711b81661",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "ek/editorial_116",
      "headRefOid": "009507b21693f24fa8989c931a7a4c68a9a3237e",
      "closedAt": "2020-07-13T20:29:03Z",
      "mergedAt": "2020-07-13T20:29:03Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "84a9bcac998dd1efef354cba767bf6f211b02e6c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTc3NTgz",
          "commit": {
            "abbreviatedOid": "009507b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-13T20:28:59Z",
          "updatedAt": "2020-07-13T20:28:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY4OTk3Mjkx",
      "title": "Initial version of requirements document",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/122",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Add a requirements document for discussion in ADD. This covers use cases, a distilled model of solutions, and privacy/security requirements.",
      "createdAt": "2020-08-17T18:22:16Z",
      "updatedAt": "2020-08-18T21:31:32Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "333e5739de348fbf913efaaa4335b517f156f5b3",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/requirements",
      "headRefOid": "bdd1233b89b119fdcc8e64cdc9bd84d083f7c5d1",
      "closedAt": "2020-08-18T21:31:32Z",
      "mergedAt": "2020-08-18T21:31:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3ef4378776f01a569602d9f9ca578772166bbb55"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODE1NTM0",
          "commit": {
            "abbreviatedOid": "88dea21"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Nice start! Left some comments to get discussion going.",
          "createdAt": "2020-08-17T20:37:33Z",
          "updatedAt": "2020-08-17T21:12:14Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Does this follow from the fact that the resolver is discoverable? Clients may learn the IP address of the resolver, but that doesn't necessarily mean they'll be able to authenticate it. (I might remove this from the list, or rephrase to emphasize that discovery isn't sufficient.)",
              "createdAt": "2020-08-17T20:37:33Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 66,
              "body": "We should probably define what we mean by these terms (discovery and provisioning). Perhaps we can include a glossary before the use cases?",
              "createdAt": "2020-08-17T20:37:58Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 172,
              "body": "```suggestion\r\n## Encrypted resolvers for content providers {#cdn-content}\r\n```",
              "createdAt": "2020-08-17T20:44:21Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 187,
              "body": "```suggestion\r\nlater being made based on the DNS answers (e.g., in the TLS SNI extension)\r\n```",
              "createdAt": "2020-08-17T20:45:03Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 205,
              "body": "```suggestion\r\nof encrypted resolvers. This information could either be provisioned,\r\n```",
              "createdAt": "2020-08-17T20:47:18Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 205,
              "body": "I can imagine ways to convey the same information without publishing a list, so I think removing this is probably best. (The following sentence describes one such way -- client learning it while trying to access content.)",
              "createdAt": "2020-08-17T20:47:49Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 211,
              "body": "We probably need to describe the threat model here. It's really hard to speak about security or privacy otherwise.",
              "createdAt": "2020-08-17T20:49:09Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 224,
              "body": "```suggestion\r\n- The relationship between a discovered resolver and the entity trusted by the client must be securely authenticated.\r\n```",
              "createdAt": "2020-08-17T20:50:37Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 226,
              "body": "Same here",
              "createdAt": "2020-08-17T20:50:54Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            },
            {
              "originalPosition": 242,
              "body": "```suggestion\r\nencryption, fail closed by not doing so, or presenting a choice to a user or administrator. The exact behavior is a \r\nlocal client policy decision. \r\n```",
              "createdAt": "2020-08-17T21:00:10Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQxNDY5",
          "commit": {
            "abbreviatedOid": "88dea21"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:21:33Z",
          "updatedAt": "2020-08-17T21:21:33Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "The authentication is a property of using an encrypted resolver, that is new as compared to an unencrypted resolver. Having any authentication of the resolver is new.",
              "createdAt": "2020-08-17T21:21:33Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQxNzI2",
          "commit": {
            "abbreviatedOid": "88dea21"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:22:05Z",
          "updatedAt": "2020-08-17T21:22:05Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Sure, want to suggest some definitions? I find those terms to be pretty self-evident, but I'm happy to hear new definitions.",
              "createdAt": "2020-08-17T21:22:05Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQyNDU1",
          "commit": {
            "abbreviatedOid": "baeeb22"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:23:26Z",
          "updatedAt": "2020-08-17T21:23:26Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Can you write up some text for this?",
              "createdAt": "2020-08-17T21:23:26Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQyNjQ5",
          "commit": {
            "abbreviatedOid": "baeeb22"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:23:48Z",
          "updatedAt": "2020-08-17T21:23:48Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "I want to keep using a more succinct term, like the client-known entity.",
              "createdAt": "2020-08-17T21:23:48Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQyNzcw",
          "commit": {
            "abbreviatedOid": "baeeb22"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:24:03Z",
          "updatedAt": "2020-08-17T21:24:03Z",
          "comments": [
            {
              "originalPosition": 226,
              "body": "I want to keep using a succinct term. Happy to have other suggestions.",
              "createdAt": "2020-08-17T21:24:03Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQ2MzE2",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:30:33Z",
          "updatedAt": "2020-08-17T21:30:33Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I think this ties to the definitions below. Discovery doesn't mean authentication, at least in my usage of it. I might learn of the IP address for a resolver, but that resolver might not have an IP address cert to authenticate with. Does that mean it's been \"discovered\"?",
              "createdAt": "2020-08-17T21:30:33Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQ2NDY0",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:30:50Z",
          "updatedAt": "2020-08-17T21:30:51Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "\ud83d\udc4d ",
              "createdAt": "2020-08-17T21:30:51Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQ2NjEz",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:31:08Z",
          "updatedAt": "2020-08-17T21:31:08Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "It's not defined, though. Perhaps another item for the glossary?",
              "createdAt": "2020-08-17T21:31:08Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQ5ODYw",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:37:34Z",
          "updatedAt": "2020-08-17T21:37:35Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I totally agree that discovery doesn't equal authentication. This list isn't about discovery. This list is about what you get by using encrypted DNS to talk to your local resolver instead of unencrypted DNS.",
              "createdAt": "2020-08-17T21:37:34Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODUyNDk4",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T21:42:43Z",
          "updatedAt": "2020-08-17T21:42:43Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I guess I'm still confused then. The text says, \"discovering an encrypted resolver that is provisioned by the network can authenticate that the DNS resolver is the one provisioned by the network,\" which to me says discovery of the resolver => authentication of said resolver. What am I missing?",
              "createdAt": "2020-08-17T21:42:43Z",
              "updatedAt": "2020-08-17T22:08:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODY1MzI0",
          "commit": {
            "abbreviatedOid": "5aef957"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T22:09:04Z",
          "updatedAt": "2020-08-17T22:09:05Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Okay, changed to\r\n\r\n\"Using an encrypted resolver that is provisioned by the network can provide several\r\nbenefits that are not possible if only unencrypted DNS is used:\"",
              "createdAt": "2020-08-17T22:09:04Z",
              "updatedAt": "2020-08-17T22:09:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODgwNzc1",
          "commit": {
            "abbreviatedOid": "bdd1233"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T22:46:31Z",
          "updatedAt": "2020-08-17T22:46:31Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "\ud83d\udc4d Much better -- thanks!",
              "createdAt": "2020-08-17T22:46:31Z",
              "updatedAt": "2020-08-17T22:46:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjY2MTY0",
          "commit": {
            "abbreviatedOid": "bdd1233"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-18T17:19:30Z",
          "updatedAt": "2020-08-18T17:19:30Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "(Can we land this PR first?)",
              "createdAt": "2020-08-18T17:19:30Z",
              "updatedAt": "2020-08-18T17:19:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODQ1MjQ3",
          "commit": {
            "abbreviatedOid": "bdd1233"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-18T21:31:23Z",
          "updatedAt": "2020-08-18T21:31:23Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Yeah will do",
              "createdAt": "2020-08-18T21:31:23Z",
              "updatedAt": "2020-08-18T21:31:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcwNDU1Nzcz",
      "title": "Threat model",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/123",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Starting as a draft to kick off the discussion. This probably needs some more iteration. The structure I had in mind was:\r\n\r\n- Describe the goal of encrypted DNS \r\n- Describe the attacker(s) we care about\r\n- Describe the requirements of the discovery mechanism against that attacker\r\n\r\nI think the opportunistic section that follows flows nicely from this re-framing. But, curious to hear your thoughts!",
      "createdAt": "2020-08-19T21:04:53Z",
      "updatedAt": "2020-08-21T17:46:03Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "3ef4378776f01a569602d9f9ca578772166bbb55",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/threat-model-draft",
      "headRefOid": "fbf3edffee9eaa23729e629253093dee5e80613d",
      "closedAt": "2020-08-21T17:46:03Z",
      "mergedAt": "2020-08-21T17:46:03Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "15fb054f2d3278437743f26acdd7967173bdb19a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDkwNDk3",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T02:46:36Z",
          "updatedAt": "2020-08-20T02:46:36Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Is this the right attacker to focus on? I think there are a couple different attacks:\r\n- Attacker (may be off-path) monitors you by observing your unencrypted DNS traffic to profile you\r\n- On-path attacker modifies your unencrypted DNS traffic to mess with you\r\n- On-path attacker blocks encrypted DNS connections\r\n\r\nAttacks about redirecting encrypted DNS traffic might actually be the second case\u2014not blocking, but changing.",
              "createdAt": "2020-08-20T02:46:36Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDkwNjg3",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T02:47:19Z",
          "updatedAt": "2020-08-20T02:47:19Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I don't think we should lose these points. These are important for the conversation and come from MT's email points.",
              "createdAt": "2020-08-20T02:47:19Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDkwOTIy",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T02:48:10Z",
          "updatedAt": "2020-08-20T02:48:11Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I guess that's covered as \"Override or adversely influence client resolver selection by users or administrators\"? Seems a bit less clear?",
              "createdAt": "2020-08-20T02:48:10Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDkxMjI5",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T02:49:23Z",
          "updatedAt": "2020-08-20T02:49:23Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "I think it's still important to include the term \"authentication\" here?",
              "createdAt": "2020-08-20T02:49:23Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTUyODQ1",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T12:40:12Z",
          "updatedAt": "2020-08-20T12:40:12Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Yeah, I rephrased it in that bullet. Saying that clients get to pick at the end of the day is table stakes, and it seems the attacker should never be able to change that. (Hence why I wrote it this way.)",
              "createdAt": "2020-08-20T12:40:12Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTU0NDky",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T12:42:33Z",
          "updatedAt": "2020-08-20T12:42:33Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Hmm, maybe. How about, \"Cause clients to use a discovered resolver which has no authenticated delegation from a client-known entity.\"",
              "createdAt": "2020-08-20T12:42:33Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTU2MjYx",
          "commit": {
            "abbreviatedOid": "831fe26"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T12:45:01Z",
          "updatedAt": "2020-08-20T12:45:02Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "What I tried to capture was an adversary whose capabilities encompass all of the above: it is everywhere (on-path and off-path) and active. It's true that the attacker may have different goals given these capabilities. Let me take another cut at that.",
              "createdAt": "2020-08-20T12:45:01Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTY1ODU4",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T12:55:13Z",
          "updatedAt": "2020-08-20T12:55:13Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "(Done!)",
              "createdAt": "2020-08-20T12:55:13Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQyOTgy",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:37:49Z",
          "updatedAt": "2020-08-20T15:37:50Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think \"encrypted resolver discovery\" is too broad here. That's not the sub-category, that's the overall document! Instead, this one is specifically about resolved equivalent to/associated with known resolvers.",
              "createdAt": "2020-08-20T15:37:49Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ1MzQ4",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:40:19Z",
          "updatedAt": "2020-08-20T15:40:19Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n1. Resolver upgrade: Discover encrypted resolvers equivalent to (or associated with) unencrypted resolvers.\r\n```",
              "createdAt": "2020-08-20T15:40:19Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ1NTI4",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:40:29Z",
          "updatedAt": "2020-08-20T15:40:30Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n2. Domain-specific resolvers: Discover encrypted resolvers applicable to a limited set of domains.\r\n```",
              "createdAt": "2020-08-20T15:40:29Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ1ODg5",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:40:52Z",
          "updatedAt": "2020-08-20T15:40:53Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Maybe \"associated encrypted resolver discovery\"? (Associated to and equivalent are somewhat vague as well, so I'm not sure how to sharpen this.)",
              "createdAt": "2020-08-20T15:40:53Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ4MTE3",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:43:24Z",
          "updatedAt": "2020-08-20T15:43:24Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nResolver upgrade mechanisms can either add new parameters to existing provisioning\r\n```",
              "createdAt": "2020-08-20T15:43:24Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ4MzQ5",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:43:38Z",
          "updatedAt": "2020-08-20T15:43:39Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nDomain-specific resolver discovery mechanisms additionally need to provide some information about the\r\n```",
              "createdAt": "2020-08-20T15:43:38Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzQ5NjY4",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:45:05Z",
          "updatedAt": "2020-08-20T15:45:05Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n- Modify unencrypted DNS traffic to filter or augment the user experience\r\n```",
              "createdAt": "2020-08-20T15:45:05Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUwMjMw",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:45:45Z",
          "updatedAt": "2020-08-20T15:45:46Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "As this is an informational document, I was avoiding MUST normative statements.",
              "createdAt": "2020-08-20T15:45:45Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUxMDIw",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:46:43Z",
          "updatedAt": "2020-08-20T15:46:43Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nClients cannot assume that their network does not have such an attacker unless given some means of authenticating or otherwise\r\n```",
              "createdAt": "2020-08-20T15:46:43Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUxMjkw",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:47:01Z",
          "updatedAt": "2020-08-20T15:47:02Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "```suggestion\r\ntrusting the communication with their DNS resolver.\r\n```",
              "createdAt": "2020-08-20T15:47:01Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUxNTUw",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:47:21Z",
          "updatedAt": "2020-08-20T15:47:22Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nprivacy posture. In particular, attackers must not be able to:\r\n```",
              "createdAt": "2020-08-20T15:47:22Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUxNjUy",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:47:28Z",
          "updatedAt": "2020-08-20T15:47:29Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nGiven this type of attacker, resolver discovery mechanisms must be designed carefully to not worsen a client's security or\r\n```",
              "createdAt": "2020-08-20T15:47:28Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzUzMjI1",
          "commit": {
            "abbreviatedOid": "e34f4de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T15:49:19Z",
          "updatedAt": "2020-08-20T15:49:20Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n- Override or interfere with the resolver preferences of a user or administrator.\r\n```",
              "createdAt": "2020-08-20T15:49:20Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzc0NTIz",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-20T16:14:26Z",
          "updatedAt": "2020-08-20T16:14:26Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODAyMjU4",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good, just a couple of tiny nits",
          "createdAt": "2020-08-20T16:43:47Z",
          "updatedAt": "2020-08-20T16:47:12Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\napplicability and capabilities of encrypted resolvers. This information can either be provisioned\r\nor can be discovered based on clients actively trying to access content.\r\n```",
              "createdAt": "2020-08-20T16:43:47Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nEncrypted DNS aims to improve the privacy and security of DNS queries and answers in the presence\r\n```",
              "createdAt": "2020-08-20T16:44:16Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            },
            {
              "originalPosition": 57,
              "body": "RFC3552 contains definitions for these if that's useful to reference",
              "createdAt": "2020-08-20T16:45:23Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            },
            {
              "originalPosition": 82,
              "body": "are we MUSTing here (and below)?",
              "createdAt": "2020-08-20T16:46:15Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODA1NjA4",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T16:48:21Z",
          "updatedAt": "2020-08-20T16:48:21Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "This is informational, I don't want normative language",
              "createdAt": "2020-08-20T16:48:21Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODA2MzA5",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T16:49:20Z",
          "updatedAt": "2020-08-20T16:49:20Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Works for me, but should we consider rewording or just leave it? Either is fine",
              "createdAt": "2020-08-20T16:49:20Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODA4ODY2",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T16:52:44Z",
          "updatedAt": "2020-08-20T16:52:44Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "We use \"must\" elsewhere (I think), so it's probably fine.",
              "createdAt": "2020-08-20T16:52:44Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODA5MzEw",
          "commit": {
            "abbreviatedOid": "4a26f34"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T16:53:19Z",
          "updatedAt": "2020-08-20T16:53:19Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Passive voice!",
              "createdAt": "2020-08-20T16:53:19Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODA5NzI0",
          "commit": {
            "abbreviatedOid": "7a3f662"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T16:53:53Z",
          "updatedAt": "2020-08-20T16:53:53Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Good point -- I'll add that!",
              "createdAt": "2020-08-20T16:53:53Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODE3MDc1",
          "commit": {
            "abbreviatedOid": "8b6bff1"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T17:04:00Z",
          "updatedAt": "2020-08-20T17:04:00Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Are you saying \"X aims <infinitive>\" is more passive than \"A goal of X is ___\"? That seems backwards to me, but you can always change it to just \"Encrypted DNS improves\" if you want to be maximally active. :)",
              "createdAt": "2020-08-20T17:04:00Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODYzNzE3",
          "commit": {
            "abbreviatedOid": "8b6bff1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-20T18:09:50Z",
          "updatedAt": "2020-08-20T18:09:51Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "\"To improve\" :) \"X improves\" is better!",
              "createdAt": "2020-08-20T18:09:51Z",
              "updatedAt": "2020-08-20T18:10:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjc2NDY5",
          "commit": {
            "abbreviatedOid": "fbf3edf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-21T17:45:22Z",
          "updatedAt": "2020-08-21T17:45:23Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I think the key verb here is \"aims\", though, to show intent.",
              "createdAt": "2020-08-21T17:45:22Z",
              "updatedAt": "2020-08-21T17:45:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjc2NzM1",
          "commit": {
            "abbreviatedOid": "fbf3edf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-21T17:45:48Z",
          "updatedAt": "2020-08-21T17:45:48Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "But eh =)",
              "createdAt": "2020-08-21T17:45:48Z",
              "updatedAt": "2020-08-21T17:45:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0NDkwNTk2NTI2",
      "title": "Update draft to make better use of HPKE. Add config versioning.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/125",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "One thing I'm not certain about is versioning. Do we want to reflect the version somehow in the URI templates, or is it sufficient to bake it into the config? The version determines the structure of the ObliviousDoHConfigContents (carrying the public key material) and the query and answer encryption details. Changing those would require changing the version. \r\n\r\nI think restricting the version to the config is fine. It effectively means the ObliviousDoHMessage format is an invariant, since the server would just compare `key_id` to a known configuration to determine the version.\r\n\r\n@tfpauly @erickinnear, please have a look!",
      "createdAt": "2020-09-21T22:39:22Z",
      "updatedAt": "2020-09-23T14:24:44Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "15fb054f2d3278437743f26acdd7967173bdb19a",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/update-draft",
      "headRefOid": "8552eeb23dc904462b4f8f9f73eeb2d63891305a",
      "closedAt": "2020-09-23T14:24:44Z",
      "mergedAt": "2020-09-23T14:24:44Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e1e2ed8df8660b40c80d36151b35e7298fc12151"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think baking the versioning into the configs makes sense and is pretty clean. I don't know if we'd want to put it in the URLs. What was the thought there?",
          "createdAt": "2020-09-22T23:38:28Z",
          "updatedAt": "2020-09-22T23:38:28Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't know if we'd want to put it in the URLs. What was the thought there?\r\n\r\nChatted offline, but the underlying concern was that the HTTP bits (URI parameters for conveying target information) are effectively an invariant without it. But I think we can address that separately.",
          "createdAt": "2020-09-23T14:24:41Z",
          "updatedAt": "2020-09-23T14:24:41Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzODk1NzA2",
          "commit": {
            "abbreviatedOid": "db5e304"
          },
          "author": "picowar",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T22:42:21Z",
          "updatedAt": "2020-09-22T22:42:21Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "`select` is not an [XDR type](https://tools.ietf.org/html/rfc4506) so I don't think an IETF draft should use it. We could use an `enum` or `switch` instead to represent the same.",
              "createdAt": "2020-09-22T22:42:21Z",
              "updatedAt": "2020-09-22T22:45:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTA1OTI4",
          "commit": {
            "abbreviatedOid": "8552eeb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T23:09:02Z",
          "updatedAt": "2020-09-22T23:09:03Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "For better or worse, this is standard in IETF specifications. See, for example, RFC8446.",
              "createdAt": "2020-09-22T23:09:02Z",
              "updatedAt": "2020-09-22T23:09:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTE1OTg4",
          "commit": {
            "abbreviatedOid": "8552eeb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-09-22T23:37:35Z",
          "updatedAt": "2020-09-22T23:37:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0NDk0MTIxNDc2",
      "title": "Proposed clarification changes to terminology",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/126",
      "state": "MERGED",
      "author": "marwanfayed",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-09-28T12:54:36Z",
      "updatedAt": "2020-09-30T16:59:24Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "d43803aea375b230b6b1ec3a2c36f53cc292655d",
      "headRepository": "marwanfayed/draft-pauly-adaptive-dns-privacy",
      "headRefName": "mmf/terminology",
      "headRefOid": "17527856821f06cfe2b0d25d28f5351d0b18ff29",
      "closedAt": "2020-09-30T16:59:24Z",
      "mergedAt": "2020-09-30T16:59:24Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9c6815f530fe1821f484333cc3c2d2694b87437b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Njk5MzY1",
          "commit": {
            "abbreviatedOid": "0c22328"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-09-29T17:02:35Z",
          "updatedAt": "2020-09-29T17:02:46Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\n: An ODoH server that receives and decrypts encrypted client DNS queries from a Proxy, and returns encrypted DNS responses via that same Proxy. In order to provide DNS responses, the target can be a DNS resolver, be co-located with a resolver, or forward to a resolver.\n```\n",
              "createdAt": "2020-09-29T17:02:35Z",
              "updatedAt": "2020-09-30T14:12:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjM1NzE3",
          "commit": {
            "abbreviatedOid": "1752785"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-09-30T16:59:13Z",
          "updatedAt": "2020-09-30T16:59:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0NDk0MzgzODEx",
      "title": "Key derivation and error handling updates ",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/127",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change:\r\n\r\n- Uses HPKE context for response key derivation.\r\n- Adds error handling details.\r\n- Reformats the document some. \r\n\r\n@tfpauly, please have a look, especially with an eye towards the HTTP success/error responses!",
      "createdAt": "2020-09-28T20:29:27Z",
      "updatedAt": "2020-10-06T12:02:39Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "9c6815f530fe1821f484333cc3c2d2694b87437b",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/hpke-binding",
      "headRefOid": "4257b77d6615d717259edbbdea8519e356b824e4",
      "closedAt": "2020-10-06T12:02:39Z",
      "mergedAt": "2020-10-06T12:02:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "646d6737736b2031085e46862ecc5740e74d1024"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Implementation of this change is tracked here: https://github.com/chris-wood/odoh/pull/16",
          "createdAt": "2020-09-30T21:51:44Z",
          "updatedAt": "2020-09-30T21:51:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly @ekinnear I made some editorial changes on top of the lot, and did a quick pass over the doc. I think this is ready. Please have another look!",
          "createdAt": "2020-10-02T13:18:22Z",
          "updatedAt": "2020-10-02T13:18:22Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood  Looks good, merge when ready",
          "createdAt": "2020-10-06T02:18:19Z",
          "updatedAt": "2020-10-06T02:18:19Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDM5Njg4",
          "commit": {
            "abbreviatedOid": "2455210"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d",
          "createdAt": "2020-09-29T03:31:26Z",
          "updatedAt": "2020-09-29T03:31:26Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjkzODgw",
          "commit": {
            "abbreviatedOid": "e94334c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-29T16:55:50Z",
          "updatedAt": "2020-09-29T16:58:44Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'm not sure we need an example here--if anything, it is getting us into murkier waters, since an error can have a body that explains the error. How about we just explain that you should send a 4xx error if the request cannot be processed?",
              "createdAt": "2020-09-29T16:55:50Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 314,
              "body": "Is this numbering change correct?",
              "createdAt": "2020-09-29T16:58:04Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 343,
              "body": "Same here.",
              "createdAt": "2020-09-29T16:58:39Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTkyNjg4",
          "commit": {
            "abbreviatedOid": "e94334c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-29T23:27:05Z",
          "updatedAt": "2020-09-29T23:27:06Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Oh, fair. I'll just replace it with text.",
              "createdAt": "2020-09-29T23:27:05Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTkyODA2",
          "commit": {
            "abbreviatedOid": "e94334c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-29T23:27:25Z",
          "updatedAt": "2020-09-29T23:27:26Z",
          "comments": [
            {
              "originalPosition": 314,
              "body": "Yeah, Markdown renders it correctly. It saves us from having to update the numbers if we swap things around.",
              "createdAt": "2020-09-29T23:27:25Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTk0NDc4",
          "commit": {
            "abbreviatedOid": "e410102"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-29T23:32:18Z",
          "updatedAt": "2020-09-29T23:32:19Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Should be fixed now!",
              "createdAt": "2020-09-29T23:32:18Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjE2MDA2",
          "commit": {
            "abbreviatedOid": "72d5cba"
          },
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-30T16:34:57Z",
          "updatedAt": "2020-09-30T16:37:15Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I was thinking it could collude with target resolvers, I was assuming it just couldn't collude with both the proxy and the target at the same time.",
              "createdAt": "2020-09-30T16:34:57Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 25,
              "body": "Maybe \"simultaneously compromised\" would be clearer.",
              "createdAt": "2020-09-30T16:35:35Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 26,
              "body": "Nit: Oblivious DoH queries,",
              "createdAt": "2020-09-30T16:36:08Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjM2NTUz",
          "commit": {
            "abbreviatedOid": "72d5cba"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-09-30T17:00:14Z",
          "updatedAt": "2020-09-30T17:00:14Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjU5MjE2",
          "commit": {
            "abbreviatedOid": "72d5cba"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-30T17:29:02Z",
          "updatedAt": "2020-09-30T17:29:02Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Yeah, I should have updated this. The text below suggests that it can compromise the target or proxy, anyway. ",
              "createdAt": "2020-09-30T17:29:02Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjY4NDM5",
          "commit": {
            "abbreviatedOid": "77711ce"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-30T17:41:17Z",
          "updatedAt": "2020-09-30T17:41:17Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "@jhoyla -- does the new text look good to you? I think it clarifies things. ",
              "createdAt": "2020-09-30T17:41:17Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDI2ODc1",
          "commit": {
            "abbreviatedOid": "2082eeb"
          },
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-02T10:33:08Z",
          "updatedAt": "2020-10-02T10:33:53Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "Nit: constraints",
              "createdAt": "2020-10-02T10:33:08Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 104,
              "body": "Nit: and at least two ",
              "createdAt": "2020-10-02T10:33:40Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTExMTk0",
          "commit": {
            "abbreviatedOid": "2082eeb"
          },
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-02T12:58:44Z",
          "updatedAt": "2020-10-02T12:59:12Z",
          "comments": [
            {
              "originalPosition": 104,
              "body": "```suggestion\r\nare simultaneously compromised, and at least two clients are left uncompromised.) The attacker is\r\n```",
              "createdAt": "2020-10-02T12:58:44Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\narbitrarily many clients, proxies, and targets, with the constraints that not all targets and proxies\r\n```",
              "createdAt": "2020-10-02T12:59:05Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTAxMjY5",
          "commit": {
            "abbreviatedOid": "60ae28a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-03T00:10:13Z",
          "updatedAt": "2020-10-03T00:10:13Z",
          "comments": [
            {
              "originalPosition": 215,
              "body": "```suggestion\r\nThey are encoded using the following structure:\r\n```",
              "createdAt": "2020-10-03T00:10:13Z",
              "updatedAt": "2020-10-06T00:56:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0NDk4NDg3Njcw",
      "title": "Add MTI suite from ECH.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/129",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #128.\r\n\r\ncc @FredericJacobs ",
      "createdAt": "2020-10-06T12:05:18Z",
      "updatedAt": "2020-10-06T12:25:08Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "646d6737736b2031085e46862ecc5740e74d1024",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/mti-suite",
      "headRefOid": "5aab5560588fde1ee7f2aca986262718e5a9dc82",
      "closedAt": "2020-10-06T12:25:08Z",
      "mergedAt": "2020-10-06T12:25:08Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c7a13641cd648a1bb01a197ffff17acdb384df95"
      },
      "comments": [
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2020-10-06T12:22:13Z",
          "updatedAt": "2020-10-06T12:22:13Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 130,
      "id": "MDExOlB1bGxSZXF1ZXN0NTAwNjIxOTU4",
      "title": "Add ODoH parameter key.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/130",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\"dohuri\" was first! :-)",
      "createdAt": "2020-10-09T14:17:05Z",
      "updatedAt": "2020-10-09T14:27:19Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "ab061afb20bf690941239124227b34674a129f46",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/add-parameter-key",
      "headRefOid": "98426ee03f53e8f19b1c89edee7992a1db86f19c",
      "closedAt": "2020-10-09T14:27:19Z",
      "mergedAt": "2020-10-09T14:27:18Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1d04173a8b11d313e4a8eda077284aa133e9ff2a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzIzMjE0",
          "commit": {
            "abbreviatedOid": "98426ee"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-09T14:26:35Z",
          "updatedAt": "2020-10-09T14:26:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMzU3MDMx",
      "title": "Pin HPKE-06.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/133",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #132.",
      "createdAt": "2020-10-26T23:05:24Z",
      "updatedAt": "2020-10-27T00:28:11Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7893313a27da05442216495854188309eb19a008",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/pin-06",
      "headRefOid": "04f8b2b88b53d366bf62681dec84159e485c2d78",
      "closedAt": "2020-10-27T00:28:11Z",
      "mergedAt": "2020-10-27T00:28:11Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "08bd72d1057f0342717b78b38ad7dab6b2fd6229"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MjQzOTYw",
          "commit": {
            "abbreviatedOid": "04f8b2b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-26T23:19:05Z",
          "updatedAt": "2020-10-26T23:19:05Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MjQ0MzAy",
          "commit": {
            "abbreviatedOid": "04f8b2b"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-26T23:20:02Z",
          "updatedAt": "2020-10-26T23:20:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 134,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMzU3ODEx",
      "title": "DEER",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/134",
      "state": "MERGED",
      "author": "mstojens",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Revisited the original write up with a week of objectivity and tied up the remaining loose ends.",
      "createdAt": "2020-10-26T23:07:24Z",
      "updatedAt": "2020-10-29T17:11:51Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7893313a27da05442216495854188309eb19a008",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "deer-init",
      "headRefOid": "811bc259422cf282e20f8cf55bc69d22e232b10d",
      "closedAt": "2020-10-29T17:11:19Z",
      "mergedAt": "2020-10-29T17:11:19Z",
      "mergedBy": "mstojens",
      "mergeCommit": {
        "oid": "4b3efe5e744f7e646379d244d15f132cb94a041b"
      },
      "comments": [
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thanks! I've left a few nits. Please integrate as you see fit, and then merge. After that, I'll do a PR on top of this that updates some of the SVCB bits to adopt Ben Schwartz's document.\r\n\r\nThank you! I've addressed the nits; they all made sense. Will merge now.",
          "createdAt": "2020-10-29T17:10:44Z",
          "updatedAt": "2020-10-29T17:10:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODE0NTc5",
          "commit": {
            "abbreviatedOid": "c3d9493"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks! I've left a few nits. Please integrate as you see fit, and then merge. After that, I'll do a PR on top of this that updates some of the SVCB bits to adopt Ben Schwartz's document.",
          "createdAt": "2020-10-29T15:50:32Z",
          "updatedAt": "2020-10-29T15:58:57Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nclients to use unencrypted DNS to discover a resolver's encrypted DNS configuration. It is\r\n```",
              "createdAt": "2020-10-29T15:50:32Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\ndesigned to be agnostic to different forms of DNS encryption for future flexibility. It\r\n```",
              "createdAt": "2020-10-29T15:51:55Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nis also designed to ensure that the encrypted server connection is controlled\r\n```",
              "createdAt": "2020-10-29T15:52:19Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\naddress of the DNS server, such as the resolver's hostname. However, it is common for DNS clients to only learn a\r\n```",
              "createdAt": "2020-10-29T15:53:19Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nresolver's IP address during configuration. Such mechanisms include network provisioning\r\n```",
              "createdAt": "2020-10-29T15:53:50Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nprotocols like DHCP and IPv6 Router Advertisements, as well as manual configuration.\r\n```",
              "createdAt": "2020-10-29T15:54:15Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nenable discovery when only an IP address is known, and allow clients to confirm that the encrypted\r\n```",
              "createdAt": "2020-10-29T15:54:40Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nresolver they connect to is the same entity as the known resolver that did not use\r\n```",
              "createdAt": "2020-10-29T15:55:45Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nencryption, this configuration can be requested based on a query for their own domain name.\r\n```",
              "createdAt": "2020-10-29T15:56:11Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\n### Rationale for Validating Both Resolver Addresses \r\n```",
              "createdAt": "2020-10-29T15:57:10Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 98,
              "body": "We may not want to nest so deeply, but can clean up later",
              "createdAt": "2020-10-29T15:57:28Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            },
            {
              "originalPosition": 154,
              "body": "Maybe use an `example.com` thing instead of Foo?",
              "createdAt": "2020-10-29T15:58:10Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODg3NzY3",
          "commit": {
            "abbreviatedOid": "c3d9493"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-29T17:04:24Z",
          "updatedAt": "2020-10-29T17:04:24Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "Agreed. I have no attachment to the current structure versus a flatter one. I just chose something to prevent writer's deadlock. The same is true of in-section security comments versus a security consideration section.",
              "createdAt": "2020-10-29T17:04:24Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODg5NDQw",
          "commit": {
            "abbreviatedOid": "c3d9493"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-29T17:06:21Z",
          "updatedAt": "2020-10-29T17:06:21Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "Good call.",
              "createdAt": "2020-10-29T17:06:21Z",
              "updatedAt": "2020-10-29T17:08:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 138,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEzMzQzMDU4",
      "title": "Update DEER to use draft-schwartz-svcb-dns",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/138",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Updating DEER editorially, and most significantly to adopt draft-schwartz-svcb-dns.\r\n\r\nI also have two major questions about the attack potential, in brackets. @chris-wood and @mstojens please chime in.\r\n\r\nI'd like to merge this and post by the Monday deadline. Sorry for being late!",
      "createdAt": "2020-10-31T00:35:46Z",
      "updatedAt": "2020-11-01T18:49:08Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "4b3efe5e744f7e646379d244d15f132cb94a041b",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/deer-update",
      "headRefOid": "3d0df535a283c4b457f63a99fad33eda5b50144f",
      "closedAt": "2020-11-01T18:49:08Z",
      "mergedAt": "2020-11-01T18:49:08Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "751333a0805707cfab2d0656a9b864fe663da227"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@mstojens, please take another look when you can!",
          "createdAt": "2020-10-31T18:26:53Z",
          "updatedAt": "2020-10-31T18:26:53Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "body": "> @mstojens, please take another look when you can!\r\n\r\nBoth of my comments have been addressed, and the rest looks great. Let's ship it, @tfpauly !",
          "createdAt": "2020-11-01T18:26:40Z",
          "updatedAt": "2020-11-01T18:26:40Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTA0Mzc4",
          "commit": {
            "abbreviatedOid": "f0de340"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This looks pretty good. I left comments on the two TODO-like inserts you wrote. ",
          "createdAt": "2020-10-31T02:10:27Z",
          "updatedAt": "2020-10-31T04:37:11Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "I do not think we need to require this. The reason we require both IP addresses is to ensure the response wasn't attacked and that the recommending resolver and the encrypted resolver are related. In this case, it does not matter if the resolvers are related.\r\n\r\nIn this case and the example below, we do not need to verify the relationship between the resolvers. So long as the new resolver does in fact have a valid claim its own name, who cares where we learned its configuration from? ",
              "createdAt": "2020-10-31T02:10:28Z",
              "updatedAt": "2020-10-31T18:26:17Z"
            },
            {
              "originalPosition": 111,
              "body": "I originally wrote it this way thinking there was no attack here, then combined them when I figured the attacks were the same (sending the client to a DoH server unrelated to the original IP address).\r\n\r\nAt this point, I think the only attack not including the encrypted resolver's IP address allows would be IP spoofing. This is not really a problem for the layer DEER is operating on.\r\n\r\nMaybe we do not need to check the encrypted resolver's IP address? This would mean the certificate in isolation cannot confirm the two addresses are related. If a server hosted the same certificate on a different address, then an attacker could direct clients there. This requires the attacker to control the certificate in the first place though... ",
              "createdAt": "2020-10-31T04:36:38Z",
              "updatedAt": "2020-10-31T18:26:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTU3MjIw",
          "commit": {
            "abbreviatedOid": "7efa019"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-31T17:52:31Z",
          "updatedAt": "2020-10-31T17:52:31Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "I've updated the text in this section to clarify what I meant\u2014I wasn't saying that we should validate the name of the resolver that sent the answer, but if there is a case where a DoT and DoH server that are equivalent have two different names, we should require them to both be in the cert.\r\n\r\nSo, if I have DoT for cloudflare-dns.com and DoH for https://cloudflare-dns.com/dns-query, there's no new checking. But if they decided to have dot.cloudflare-dns.com and doh.cloudflare-dns.com, we'd need an additional check.\r\n\r\nPlease take a look at the updated section!",
              "createdAt": "2020-10-31T17:52:31Z",
              "updatedAt": "2020-10-31T18:26:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTU3NDAx",
          "commit": {
            "abbreviatedOid": "7efa019"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-31T17:55:18Z",
          "updatedAt": "2020-10-31T17:55:19Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "Yeah, I think the attack would be IP spoofing of the encrypted server address _and_ controlling a certificate that contains the original address of the unencrypted resolver. At which point, if you control that certificate, you could have just fed us an address in the SVCB answer that really is your IP address.\r\n\r\nMaybe we just say that the cert has to include the unencrypted resolver's address _and_ the domain name of the resolver from the SVCB record.",
              "createdAt": "2020-10-31T17:55:18Z",
              "updatedAt": "2020-10-31T18:26:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTU5NTQ1",
          "commit": {
            "abbreviatedOid": "3d0df53"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-31T18:26:40Z",
          "updatedAt": "2020-10-31T18:26:40Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "Okay, pushed a fairly large update to do this rework.",
              "createdAt": "2020-10-31T18:26:40Z",
              "updatedAt": "2020-10-31T18:26:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjQ4MjU3",
          "commit": {
            "abbreviatedOid": "3d0df53"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-01T18:22:09Z",
          "updatedAt": "2020-11-01T18:22:10Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Thank you for clarifying; I completely agree on this point. LGTM!",
              "createdAt": "2020-11-01T18:22:09Z",
              "updatedAt": "2020-11-01T18:22:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjQ4MzY0",
          "commit": {
            "abbreviatedOid": "3d0df53"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-01T18:23:45Z",
          "updatedAt": "2020-11-01T18:23:46Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "I guess I had taken the encrypted resolver's hostname for granted as part of HTTPS connection logic, but it's good to call it out specifically. LGTM!",
              "createdAt": "2020-11-01T18:23:45Z",
              "updatedAt": "2020-11-01T18:23:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 141,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEzNzEzMDk2",
      "title": "Cleanup organization of DEER prior to submission",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/141",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "One last PR before submission tomorrow\u2014mainly to close #139 and #140, and make the overall organization flow a bit better.\r\n\r\nI've added allowance for broader use of the name-to-DEER use case, to allow for extensions to DHCP giving names but not all the other details about resolvers.",
      "createdAt": "2020-11-01T23:33:38Z",
      "updatedAt": "2020-11-02T05:24:26Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "e0369d1dd258938250dd88046f526b54368c73b1",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfp/deer-organization",
      "headRefOid": "57b20aa8a1509b0f91b0796cff312f5be55a7929",
      "closedAt": "2020-11-02T05:24:26Z",
      "mergedAt": "2020-11-02T05:24:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dc2c93ecf11ac0e987af5722acac9cd558238cf0"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The path for DoH, etc, are covered in the referenced draft-schwartz-svcb-dns-01.\r\n\r\nThanks for reviewing!",
          "createdAt": "2020-11-02T05:24:22Z",
          "updatedAt": "2020-11-02T05:24:22Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzI4MTc2",
          "commit": {
            "abbreviatedOid": "57b20aa"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I'm learning a lot about my subconscious word choices in this PR. These edits bring a lot of technical clarity.\r\n\r\nOne note that does not block merging: do we no longer need to call out a reservation for the new record key names such as \"dohpath\"?",
          "createdAt": "2020-11-02T04:41:35Z",
          "updatedAt": "2020-11-02T04:41:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0MjkwNzM3",
      "title": "Editorial nits, markdown formatting update for DEER",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/142",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Minor wording updates in a few places\r\n- Some misc. editorial nits like commas and things\r\n- Rewrap the markdown so that it shows up nicely in GitHub in side-by-side view and is easier to deal with diffs",
      "createdAt": "2020-11-02T20:11:32Z",
      "updatedAt": "2020-11-02T20:21:32Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "dc2c93ecf11ac0e987af5722acac9cd558238cf0",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "ek/deer-nits",
      "headRefOid": "db4c8610b7f489cdf18897d9caaf5dd8c5fec3ad",
      "closedAt": "2020-11-02T20:21:32Z",
      "mergedAt": "2020-11-02T20:21:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3ae62f6eb7fcd9c99e7e11bd3b81578ed94928df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTYyNzI3",
          "commit": {
            "abbreviatedOid": "db4c861"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you for the line rebalancing! The minor rephrasings/typo fixes all look good. ",
          "createdAt": "2020-11-02T20:17:50Z",
          "updatedAt": "2020-11-02T20:17:50Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTY0OTE2",
          "commit": {
            "abbreviatedOid": "db4c861"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-02T20:21:15Z",
          "updatedAt": "2020-11-02T20:21:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 147,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyNzE0MTAz",
      "title": "Proposal: Enable secure cross-IP upgrade from local resolver in DEER",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/147",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This proposal adjusts various aspects of the security model to enable secure upgrade from traditional local DNS forwarding equipment.\r\n\r\nIncludes CNAME idea borrowed from https://tools.ietf.org/html/draft-rescorla-doh-cdisco-00\r\n\r\nFixes #143",
      "createdAt": "2020-11-17T21:21:02Z",
      "updatedAt": "2021-04-30T15:20:24Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "3ae62f6eb7fcd9c99e7e11bd3b81578ed94928df",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "bemasc-local-upgrade",
      "headRefOid": "6d5e75c1f46819521e1cb3ecc23b0d625068513f",
      "closedAt": "2021-04-30T15:20:24Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Closing in favor of https://github.com/ietf-wg-add/draft-ietf-add-ddr/pull/11",
          "createdAt": "2021-04-30T15:20:24Z",
          "updatedAt": "2021-04-30T15:20:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyODM3NDc1",
          "commit": {
            "abbreviatedOid": "ce19d8d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-17T21:43:41Z",
          "updatedAt": "2020-11-17T21:43:41Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Would this  be a requirement only when the IP address is different from the original unencrypted resolver address? If the private address is able to host the DoH server directly, I wonder if this freshness matters as much.",
              "createdAt": "2020-11-17T21:43:41Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyODU1MTk5",
          "commit": {
            "abbreviatedOid": "ce19d8d"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-17T22:10:51Z",
          "updatedAt": "2020-11-17T22:10:51Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I think it would be OK to relax this when the addresses match, but I lean toward avoiding the special-case.\r\n\r\nTheoretically, the question is: does the presence of a working Encrypted Resolver on the same IP mean that it is the intended EER?  This seems like a reasonable assumption, but it could be false if the Unencrypted Resolver IP hosts multiple DoH paths with different behaviors, or if it offers DoT on port 853 but would prefer to direct users to an EER somewhere else for load balancing, etc.  In these cases, an attacker could inject a DEER response that contradicts the Unencrypted Resolver's intent, while keeping the same IP.\r\n\r\nKeeping the time limit across the board seems easier to implement, and also provides some defense against these (admittedly marginal) attacks.",
              "createdAt": "2020-11-17T22:10:51Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMjI0ODIx",
          "commit": {
            "abbreviatedOid": "ce19d8d"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T08:55:56Z",
          "updatedAt": "2020-11-18T08:55:57Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I agree that less complex specs are better in general. I also agree that for home users on personal Wi-Fi with <100 devices this makes total sense.\r\n\r\nHowever, I think the situation will be different for enterprises with tens of thousands of devices. Large corporate networks may choose to deploy encrypted DNS on the same IP address as they already use for unencrypted DNS. For many devices, they may only ever use DEER in this context, and having the network flooded with these polls would be painful. They would know if they offer different encrypted services on the same address (unlikely) and may want to accept those minor risks they are capable of managing in a managed environment.\r\n\r\nTo that end, I would like to see the polling for same-local-address made optional, even if we clearly highlight the risks and recommend checking anyway to enable standard behavior for clients who know it works better for their situation.",
              "createdAt": "2020-11-18T08:55:57Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNjA1Mzk5",
          "commit": {
            "abbreviatedOid": "b29b241"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T16:05:44Z",
          "updatedAt": "2020-11-18T16:05:44Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "OK, I've added an \"Optimizations\" section that mentions this optimization, and a few others as well.  I've also adjusted the security considerations.",
              "createdAt": "2020-11-18T16:05:44Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTI1MDU2",
          "commit": {
            "abbreviatedOid": "b29b241"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-19T06:53:49Z",
          "updatedAt": "2020-11-19T06:53:49Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "LGTM. The guidance regarding polling is a nice touch.",
              "createdAt": "2020-11-19T06:53:49Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTkzMDYx",
          "commit": {
            "abbreviatedOid": "b29b241"
          },
          "author": "ericorth",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-19T08:46:58Z",
          "updatedAt": "2020-11-19T08:46:59Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Doesn't this create a very large danger of the encrypted resolver not giving equivalent (for the various recently discussed definitions thereof) behavior to the local forwarder? E.g., if the local forwarder is providing parental-control filtering before forwarding to an upstream resolver, then the upstream encrypted resolver will \"steal\" resolution and unexpectedly-to-the-user disable filtering.  You could also start leaking previously-local-network-only data if the local forwarding was resolving some local-only names that could now get leaked to the external upstream resolver.\r\n\r\nSeems we'd be in danger of a whole bunch of issues unless all the local forwarders in the world get updated to block _dns.resolver.arpa whenever they are doing something extra that the upstream resolver will not replicate.",
              "createdAt": "2020-11-19T08:46:59Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NTgzMDQz",
          "commit": {
            "abbreviatedOid": "0a710b7"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-19T15:46:59Z",
          "updatedAt": "2020-11-19T15:46:59Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Thanks for the reminder; I've added a sentence reminding forwarders that they can block this domain.\r\n\r\nThis design parallels Mozilla's [canary domain](https://support.mozilla.org/en-US/kb/canary-domain-use-application-dnsnet).  That design appears have been [deployed successfully](https://datatracker.ietf.org/meeting/106/materials/slides-106-abcd-mozilla-canary-domain), and I believe it represents the working group's consensus on the best balance between improving security and ensuring local control.\r\n\r\nOne key observation from that deployment is that filtering forwarders have to be able to update their blocklist rapidly, so even old systems that can't add functionality can (and did) move quickly to add the canary domain to their list.",
              "createdAt": "2020-11-19T15:46:59Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTIzMjE3",
          "commit": {
            "abbreviatedOid": "0a710b7"
          },
          "author": "ericorth",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-23T23:24:02Z",
          "updatedAt": "2020-11-23T23:24:02Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Even with Firefox's experience, I'm still hesitant to start basing further solutions on such an untrusted network signal.  I recall that Mozilla has indicated in the past that they reserve the right to stop trusting or otherwise change the canary signal if they detect significant signs of abuse, and I think abuse only becomes more likely if the canary gets standardized and more clients adopt it.  I know I would feel a lot more comfortable if we could at least come up with a way to ensure the canary signal is coming from the local resolver being switched away from, rather than something else like an ISP manipulating the beyond-home network.\r\n\r\nAlso note that Firefox's deployment experience in this area so far is only for the more narrowly-scoped US-only and only affects change to offline-verified \"trustworthy\" resolvers.  Only partially applicable to the more general scope under consideration here.\r\n\r\nAnd putting potential controversy aside, while I think it may still be reasonable to standardize a canary domain for resolvers to block to signal a request to not change resolvers, whether or not clients will trust or respect such a signal is more on the policy side of things.  So if we're going to rely on it to make this local->external upgrade safe, I think we're going to want to at least keep the same-IP option for those clients that choose not to trust the canary.",
              "createdAt": "2020-11-23T23:24:02Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDkwNjY2",
          "commit": {
            "abbreviatedOid": "0a710b7"
          },
          "author": "mstojens",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-24T05:35:50Z",
          "updatedAt": "2020-11-24T05:35:51Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "See, the way I read this, clients can but don't have to use the CNAME method of a local forwarder referring to a public server given it's a MAY. It's an optional untrusted signal for resolvers who want to make themselves discoverable more conveniently but less securely. Clients who won't settle for opportunistic upgrade won't use this. Am I off-base?\r\n\r\nThat said, I do agree with Eric: the canary domain is not an ideal path forward. We should be focused primarily on upgrading securely without prior knowledge needed (which TRR requires).",
              "createdAt": "2020-11-24T05:35:50Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NTgzMTk4",
          "commit": {
            "abbreviatedOid": "0a710b7"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-24T15:04:42Z",
          "updatedAt": "2020-11-24T15:04:42Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "@ericorth I don't think DEER is subject to any of the canary abuse considerations that affect Mozilla's TRR arrangement.  Although DEER bears some resemblance to Mozilla's canary, it is much less problematic: each server is simply speaking about itself, with each forwarder having precedence over its destination.\r\n\r\nI don't believe there is any loss of security in this aspect of the PR.  What's potentially lost is a particular edge-case of legacy compatibility.  I believe that case is narrow, and easily remedied.\r\n\r\n@mstojens Indeed, the opportunistic modes of DEER are all independently optional, so clients are always free to apply additional restrictions and abandon the upgrade if they are not met.",
              "createdAt": "2020-11-24T15:04:42Z",
              "updatedAt": "2020-12-10T16:29:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzgyMTAz",
          "commit": {
            "abbreviatedOid": "6d5e75c"
          },
          "author": "bemasc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T16:31:23Z",
          "updatedAt": "2020-12-10T16:31:23Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "@ericorth I added a new section on the legacy device question, which also gets at the question of the range of allowable client behaviors.  Does this work for you?",
              "createdAt": "2020-12-10T16:31:23Z",
              "updatedAt": "2020-12-10T16:31:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 152,
      "id": "MDExOlB1bGxSZXF1ZXN0NTI5OTQ1NDEx",
      "title": "Disambiguate HTTP response status codes",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/152",
      "state": "MERGED",
      "author": "tanyav2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/issues/151\r\n\r\n@chris-wood @tfpauly ",
      "createdAt": "2020-12-01T03:20:36Z",
      "updatedAt": "2020-12-01T04:52:18Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "3ae62f6eb7fcd9c99e7e11bd3b81578ed94928df",
      "headRepository": "tanyav2/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tanya/error-status-codes",
      "headRefOid": "363eb51861690cdf031e10e71c3313390512d68f",
      "closedAt": "2020-12-01T04:52:18Z",
      "mergedAt": "2020-12-01T04:52:18Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2fc5ac426cf09f20fbc9576752ba66eaff531603"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDYxMzA0",
          "commit": {
            "abbreviatedOid": "2da27d5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM modulo some nits. @tfpauly, please feel free to merge if you're okay with this!",
          "createdAt": "2020-12-01T03:22:23Z",
          "updatedAt": "2020-12-01T03:23:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nRequests that cannot be processed by the target result in 4xx (Client Error) responses. If the target and client keys do not match, it is an authorization failure (HTTP status code 401; see Section 3.1 of {{!RFC7235}}). Otherwise, if the client's request is invalid, such as in the case of decryption failure, wrong message type, or deserialization failure, this is a bad request (HTTP status code 400; see Section 6.5.1 of {{!RFC7231}}). \r\n```",
              "createdAt": "2020-12-01T03:22:23Z",
              "updatedAt": "2020-12-01T03:28:35Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nEven in case of DNS responses indicating failure, such as SERVFAIL or NXDOMAIN, a successful HTTP response with a 2xx status code is used as long as the DNS response is valid. This is similar to how DoH {{!RFC8484}} handles HTTP response codes. \r\n```",
              "createdAt": "2020-12-01T03:23:01Z",
              "updatedAt": "2020-12-01T03:28:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDg3NTAy",
          "commit": {
            "abbreviatedOid": "363eb51"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-01T04:52:06Z",
          "updatedAt": "2020-12-01T04:52:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 153,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMxMjQzMjI1",
      "title": "Bump the version.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/153",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @tfpauly",
      "createdAt": "2020-12-02T19:33:02Z",
      "updatedAt": "2020-12-02T19:38:33Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "2fc5ac426cf09f20fbc9576752ba66eaff531603",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/bump-version",
      "headRefOid": "c5a6d467376cc99bdbc905101a5a5981fbaee433",
      "closedAt": "2020-12-02T19:38:33Z",
      "mergedAt": "2020-12-02T19:38:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7d40a22eea5c400d8ce4f1e349cc3bdb5a91a169"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 158,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQxMjA1ODU2",
      "title": "Bump HPKE to -07.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/158",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @tanyav2 ",
      "createdAt": "2020-12-16T14:30:33Z",
      "updatedAt": "2021-01-14T00:09:44Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "7d40a22eea5c400d8ce4f1e349cc3bdb5a91a169",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/bump-hpke",
      "headRefOid": "b0f10aa884b421a0307768b8f06f6ae4a5efe381",
      "closedAt": "2021-01-14T00:09:44Z",
      "mergedAt": "2021-01-14T00:09:44Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "abf71845f4531c4c64e2a0d4af121370054f33bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NzU3OTYy",
          "commit": {
            "abbreviatedOid": "b0f10aa"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-14T00:09:38Z",
          "updatedAt": "2021-01-14T00:09:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 164,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU4NDc4OTUw",
      "title": "Updated draft version to 0xff04",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/164",
      "state": "MERGED",
      "author": "tanyav2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "cc @chris-wood ",
      "createdAt": "2021-01-20T19:46:34Z",
      "updatedAt": "2021-01-21T00:02:24Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "abf71845f4531c4c64e2a0d4af121370054f33bc",
      "headRepository": "tanyav2/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tanya/update-draft",
      "headRefOid": "3c69a36bb13a2fd11fc007d8b0f185220d77010c",
      "closedAt": "2021-01-21T00:02:23Z",
      "mergedAt": "2021-01-21T00:02:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d5c31ff5538784f20110aab4eeb1d39cf0d8dfef"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyNTk1Mzk3",
          "commit": {
            "abbreviatedOid": "3c69a36"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-20T20:04:28Z",
          "updatedAt": "2021-01-20T20:04:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 165,
      "id": "MDExOlB1bGxSZXF1ZXN0NTYxODA1MTE3",
      "title": "Recommend limits, rotation policy, and mandate proxy passthrough.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/165",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #157, #156, and #135.\r\n\r\ncc @tanyav2 ",
      "createdAt": "2021-01-26T14:05:58Z",
      "updatedAt": "2021-01-26T14:31:20Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "d5c31ff5538784f20110aab4eeb1d39cf0d8dfef",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/limit-forward-rotate",
      "headRefOid": "8e640a616fb7ae0a0e60c374efbd7afb20fce934",
      "closedAt": "2021-01-26T14:31:20Z",
      "mergedAt": "2021-01-26T14:31:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "cd22555160a5e899cc0e74d0928a4398f518191a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2NDA0MTM0",
          "commit": {
            "abbreviatedOid": "8e640a6"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-26T14:31:11Z",
          "updatedAt": "2021-01-26T14:31:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 166,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2ODI3NjA0",
      "title": "Pin final HPKE version.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/166",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And bump the ODoH version, too.",
      "createdAt": "2021-02-20T01:03:04Z",
      "updatedAt": "2021-02-20T01:19:46Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "cd22555160a5e899cc0e74d0928a4398f518191a",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/final-hpke",
      "headRefOid": "ef447cf513535968167cdf7410ef291a4f81fa97",
      "closedAt": "2021-02-20T01:19:46Z",
      "mergedAt": "2021-02-20T01:19:46Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6a558bec918c1a3de628223d9cf41d44a981df27"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NjgwNTYw",
          "commit": {
            "abbreviatedOid": "ef447cf"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "\ud83d\udea2 ",
          "createdAt": "2021-02-20T01:05:14Z",
          "updatedAt": "2021-02-20T01:05:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 167,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2OTcxODc2",
      "title": "Clarify proxy behavior and error cases.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/167",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #82.\r\n\r\ncc @Lekensteyn, @skepticfx",
      "createdAt": "2021-02-20T16:44:05Z",
      "updatedAt": "2021-02-20T17:05:59Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "6a558bec918c1a3de628223d9cf41d44a981df27",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/proxy-codes",
      "headRefOid": "e1b29a1c7f97535438f82c4cdf58e7a643fe1e20",
      "closedAt": "2021-02-20T17:05:59Z",
      "mergedAt": "2021-02-20T17:05:59Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f852b5d24261b3a4ba0479a710ffec13e4be7dbd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzY4Mjgw",
          "commit": {
            "abbreviatedOid": "3caf136"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T16:59:58Z",
          "updatedAt": "2021-02-20T17:01:07Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think we should also mention that the path needs to include a target host and path, if the server can only operate as a proxy. ",
              "createdAt": "2021-02-20T16:59:58Z",
              "updatedAt": "2021-02-20T17:04:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzY4NTk4",
          "commit": {
            "abbreviatedOid": "3caf136"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T17:04:05Z",
          "updatedAt": "2021-02-20T17:04:05Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Fixed!",
              "createdAt": "2021-02-20T17:04:05Z",
              "updatedAt": "2021-02-20T17:04:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzY4NTcy",
          "commit": {
            "abbreviatedOid": "3caf136"
          },
          "author": "ekinnear",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T17:03:45Z",
          "updatedAt": "2021-02-20T17:04:18Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\nreturn a 502 (Bad Gateway) response to the client request, along with Proxy-Status response\n```\n",
              "createdAt": "2021-02-20T17:03:45Z",
              "updatedAt": "2021-02-20T17:04:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 168,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2OTc3ODEz",
      "title": "Don't do bad things.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/168",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #111.",
      "createdAt": "2021-02-20T17:25:11Z",
      "updatedAt": "2021-02-22T03:53:24Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "100ec0d1f1d26077f4dd77a53a1b509ab7ec75e9",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/http-metadata",
      "headRefOid": "5968df126b91026517786fe1bb80e1eef74a5bf0",
      "closedAt": "2021-02-22T03:53:24Z",
      "mergedAt": "2021-02-22T03:53:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f03cedd62518394d1bea9552c03383f03ac96320"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0OTkzNDMw",
          "commit": {
            "abbreviatedOid": "5968df1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2021-02-22T03:53:19Z",
          "updatedAt": "2021-02-22T03:53:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 169,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4NDkzMzk5",
      "title": "Include server-generated nonce in the response.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/169",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @FredericJacobs ",
      "createdAt": "2021-02-23T14:28:17Z",
      "updatedAt": "2021-02-23T17:37:06Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "61f3bd66b070df170cc881818693b38bff2d36f9",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/server-salt",
      "headRefOid": "bc5b9d868950d002471c93183d7e443aacb0d3d4",
      "closedAt": "2021-02-23T17:37:06Z",
      "mergedAt": "2021-02-23T17:37:06Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "24c37346d032fa1de0dc9389749ec2e77c472e47"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NDEwMzEz",
          "commit": {
            "abbreviatedOid": "985df5f"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T14:42:34Z",
          "updatedAt": "2021-02-23T14:48:52Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I think query is a bit too generic for context separation, might have some collision with some other HPKE use cases, no? ",
              "createdAt": "2021-02-23T14:42:34Z",
              "updatedAt": "2021-02-23T17:35:26Z"
            },
            {
              "originalPosition": 41,
              "body": "What's the reasoning for relying on nonce length in addition to key length?",
              "createdAt": "2021-02-23T14:43:42Z",
              "updatedAt": "2021-02-23T17:35:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NDE4NTA1",
          "commit": {
            "abbreviatedOid": "985df5f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T14:49:54Z",
          "updatedAt": "2021-02-23T14:49:55Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I don't think so, but happy to change this back if you feel strongly.",
              "createdAt": "2021-02-23T14:49:54Z",
              "updatedAt": "2021-02-23T17:35:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NDE4OTQ3",
          "commit": {
            "abbreviatedOid": "985df5f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T14:50:17Z",
          "updatedAt": "2021-02-23T14:50:17Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This is just belts and suspenders. The key should always be longer than the nonce, but just in case it's not... ",
              "createdAt": "2021-02-23T14:50:17Z",
              "updatedAt": "2021-02-23T17:35:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NTc2MTU2",
          "commit": {
            "abbreviatedOid": "985df5f"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T17:06:56Z",
          "updatedAt": "2021-02-23T17:06:56Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "If it's not necessary to change these, I'd rather leave them as-is",
              "createdAt": "2021-02-23T17:06:56Z",
              "updatedAt": "2021-02-23T17:35:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NjA1Mzg0",
          "commit": {
            "abbreviatedOid": "bc5b9d8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T17:35:30Z",
          "updatedAt": "2021-02-23T17:35:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Reverted.",
              "createdAt": "2021-02-23T17:35:30Z",
              "updatedAt": "2021-02-23T17:35:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NjA2ODMx",
          "commit": {
            "abbreviatedOid": "bc5b9d8"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-23T17:37:01Z",
          "updatedAt": "2021-02-23T17:37:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 170,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgzMjk1ODgy",
      "title": "Bump ODoH to -06 for new format changes",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/170",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "odoh"
      ],
      "body": "",
      "createdAt": "2021-03-02T19:54:09Z",
      "updatedAt": "2021-03-02T19:54:58Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "511e3513526e6648987b9798de3328e4ee08448f",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfpauly-patch-1",
      "headRefOid": "51fdfbf2d0b14d661a8f398a96e2f9ce9d783f1b",
      "closedAt": "2021-03-02T19:54:58Z",
      "mergedAt": "2021-03-02T19:54:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6e93985464d3ec06f53cc2664dfd12cf2217bf5b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyMjA4MjE3",
          "commit": {
            "abbreviatedOid": "51fdfbf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-02T19:54:54Z",
          "updatedAt": "2021-03-02T19:54:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 171,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgzNDY2NDY1",
      "title": "Hi Tanya :)",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/171",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @tanyav2",
      "createdAt": "2021-03-03T01:35:52Z",
      "updatedAt": "2021-03-03T01:58:43Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "6e93985464d3ec06f53cc2664dfd12cf2217bf5b",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/hi-tanya",
      "headRefOid": "907cc9087b479b074c27c3920a47f7f44a5f85f8",
      "closedAt": "2021-03-03T01:58:43Z",
      "mergedAt": "2021-03-03T01:58:43Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0f9864c369b97e445c1df06c6c4b6769f1fd1efd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 173,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA3Njg4MDUz",
      "title": "Finalize",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/173",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-01T21:46:19Z",
      "updatedAt": "2021-04-01T21:49:31Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "0f9864c369b97e445c1df06c6c4b6769f1fd1efd",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/final-version",
      "headRefOid": "2ea7dc3d957602be3d3282d57a95fb07cca21d2f",
      "closedAt": "2021-04-01T21:49:31Z",
      "mergedAt": "2021-04-01T21:49:31Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "688dbc3d4affd6cf7b209e9c9cdb497fd272a936"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NjcwOTEy",
          "commit": {
            "abbreviatedOid": "2ea7dc3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-01T21:47:57Z",
          "updatedAt": "2021-04-01T21:47:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 176,
      "id": "MDExOlB1bGxSZXF1ZXN0NjIwNzEzNzkz",
      "title": "SVCB record updates",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/176",
      "state": "MERGED",
      "author": "enygren",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify the SVCB text to align better with the near-final draft.\r\nRename the param to \"odoh\" to avoid the same issue where \"odohconfig\" is actually an \"odohconfigs\".",
      "createdAt": "2021-04-22T02:41:29Z",
      "updatedAt": "2021-04-22T03:18:35Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "688dbc3d4affd6cf7b209e9c9cdb497fd272a936",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "enygren-svcb-odoh",
      "headRefOid": "499ea399f4193bd233d9c621beb41bb2b63e0761",
      "closedAt": "2021-04-22T03:18:34Z",
      "mergedAt": "2021-04-22T03:18:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4ea5f24f109a7c188939b4d9c23ebacf611c557a"
      },
      "comments": [
        {
          "author": "enygren",
          "authorAssociation": "COLLABORATOR",
          "body": "Some of this text already seems to be in 12.2 so perhaps we don't need all of this here.  It likely still makes sense to rename the svcparamkey to \"odoh\" or \"odohconfigs\"",
          "createdAt": "2021-04-22T03:17:26Z",
          "updatedAt": "2021-04-22T03:17:26Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQxNzQ0NjA1",
          "commit": {
            "abbreviatedOid": "499ea39"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-22T03:18:16Z",
          "updatedAt": "2021-04-22T03:18:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 178,
      "id": "MDExOlB1bGxSZXF1ZXN0NjIxMTU3MTEy",
      "title": "Clarify Proxy response behavior. Add discussion about authentication.",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/178",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #174 and #175.",
      "createdAt": "2021-04-22T14:35:24Z",
      "updatedAt": "2021-04-25T21:15:33Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "4ea5f24f109a7c188939b4d9c23ebacf611c557a",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "caw/clarify-response-and-auth-behavior",
      "headRefOid": "dbbbb673420c247525b83d3b8c5d1275a2fb7bac",
      "closedAt": "2021-04-25T21:15:32Z",
      "mergedAt": "2021-04-25T21:15:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "39d302c6334453be41bd61e53e8ee174456808f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQyMzU1OTY4",
          "commit": {
            "abbreviatedOid": "dbbbb67"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2021-04-22T15:36:35Z",
          "updatedAt": "2021-04-22T15:36:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 180,
      "id": "MDExOlB1bGxSZXF1ZXN0NjIyODIyMTky",
      "title": "Remove blocking normative references",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/180",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #179",
      "createdAt": "2021-04-25T19:10:07Z",
      "updatedAt": "2021-04-25T19:11:05Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "4ea5f24f109a7c188939b4d9c23ebacf611c557a",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "7990e7b6d9387380f66e68c20a3ecb42c0831603",
      "closedAt": "2021-04-25T19:11:05Z",
      "mergedAt": "2021-04-25T19:11:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4db6886020353938d189bed8bfae38ea93292bc0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0MTcyMDAz",
          "commit": {
            "abbreviatedOid": "7990e7b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-25T19:11:00Z",
          "updatedAt": "2021-04-25T19:11:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 181,
      "id": "MDExOlB1bGxSZXF1ZXN0NjI3NTg4NTkw",
      "title": "Clarify cache control interaction",
      "url": "https://github.com/tfpauly/draft-pauly-adaptive-dns-privacy/pull/181",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "odoh"
      ],
      "body": "",
      "createdAt": "2021-04-30T15:25:11Z",
      "updatedAt": "2021-05-01T00:19:42Z",
      "baseRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "baseRefName": "master",
      "baseRefOid": "39d302c6334453be41bd61e53e8ee174456808f1",
      "headRepository": "tfpauly/draft-pauly-adaptive-dns-privacy",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "ab9af3b47408397bdfa7a966684f322d84d7aa61",
      "closedAt": "2021-05-01T00:19:42Z",
      "mergedAt": "2021-05-01T00:19:42Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a08d75f96763f3f75d95dd256c834e97b2c360ce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ5MzU2MzU0",
          "commit": {
            "abbreviatedOid": "ab9af3b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-30T15:50:55Z",
          "updatedAt": "2021-04-30T15:50:55Z",
          "comments": []
        }
      ]
    }
  ]
}